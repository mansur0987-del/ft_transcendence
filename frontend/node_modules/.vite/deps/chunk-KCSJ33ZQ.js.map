{
  "version": 3,
  "sources": ["../../../../backend/node_modules/tslib/tslib.es6.js", "../../../../backend/node_modules/reflect-metadata/Reflect.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/bind.decorator.js", "../../../../backend/node_modules/@nestjs/common/constants.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/catch.decorator.js", "../../../../backend/node_modules/@nestjs/common/utils/shared.utils.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/controller.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/dependencies.decorator.js", "../../../../backend/node_modules/@nestjs/common/utils/extend-metadata.util.js", "../../../../backend/node_modules/@nestjs/common/utils/validate-each.util.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/exception-filters.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/inject.decorator.js", "../../../../backend/node_modules/uid/dist/index.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/injectable.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/optional.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/set-metadata.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/use-guards.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/use-interceptors.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/use-pipes.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/apply-decorators.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/version.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/core/index.js", "../../../../backend/node_modules/@nestjs/common/utils/cli-colors.util.js", "../../../../backend/node_modules/@nestjs/common/services/utils/is-log-level-enabled.util.js", "../../../../backend/node_modules/@nestjs/common/services/utils/index.js", "../../../../backend/node_modules/@nestjs/common/services/console-logger.service.js", "../../../../backend/node_modules/@nestjs/common/services/logger.service.js", "../../../../backend/node_modules/@nestjs/common/utils/random-string-generator.util.js", "../../../../backend/node_modules/@nestjs/common/module-utils/constants.js", "../../../../backend/node_modules/@nestjs/common/module-utils/utils/generate-options-injection-token.util.js", "../../../../backend/node_modules/@nestjs/common/module-utils/utils/get-injection-providers.util.js", "../../../../backend/node_modules/@nestjs/common/module-utils/utils/index.js", "../../../../backend/node_modules/@nestjs/common/module-utils/configurable-module.builder.js", "../../../../backend/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-async-options.interface.js", "../../../../backend/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-cls.interface.js", "../../../../backend/node_modules/@nestjs/common/module-utils/interfaces/configurable-module-host.interface.js", "../../../../backend/node_modules/@nestjs/common/module-utils/interfaces/index.js", "../../../../backend/node_modules/@nestjs/common/module-utils/index.js", "../../../../backend/node_modules/@nestjs/common/cache/cache.module-definition.js", "../../../../backend/node_modules/@nestjs/common/cache/cache.constants.js", "../../../../backend/node_modules/@nestjs/common/decorators/modules/global.decorator.js", "../../../../backend/node_modules/@nestjs/common/utils/validate-module-keys.util.js", "../../../../backend/node_modules/@nestjs/common/decorators/modules/module.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/modules/index.js", "../../../../backend/node_modules/@nestjs/common/enums/request-method.enum.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/request-mapping.decorator.js", "../../../../backend/node_modules/@nestjs/common/enums/route-paramtypes.enum.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/route-params.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/http-code.decorator.js", "../../../../backend/node_modules/@nestjs/common/utils/assign-custom-metadata.util.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/create-route-param-metadata.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/render.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/header.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/redirect.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/sse.decorator.js", "../../../../backend/node_modules/@nestjs/common/decorators/http/index.js", "../../../../backend/node_modules/@nestjs/common/decorators/index.js", "../../../../backend/node_modules/@nestjs/common/utils/load-package.util.js", "../../../../backend/node_modules/@nestjs/common/cache/default-options.js", "optional-peer-dep:__vite-optional-peer-dep:cache-manager:@nestjs/common", "../../../../backend/node_modules/@nestjs/common/cache/cache.providers.js", "../../../../backend/node_modules/@nestjs/common/cache/cache.module.js", "../../../../backend/node_modules/@nestjs/common/cache/decorators/cache-key.decorator.js", "../../../../backend/node_modules/@nestjs/common/cache/decorators/cache-ttl.decorator.js", "../../../../backend/node_modules/@nestjs/common/cache/decorators/index.js", "../../../../backend/node_modules/rxjs/src/internal/util/isFunction.ts", "../../../../backend/node_modules/rxjs/src/internal/util/createErrorClass.ts", "../../../../backend/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts", "../../../../backend/node_modules/rxjs/src/internal/util/arrRemove.ts", "../../../../backend/node_modules/rxjs/src/internal/Subscription.ts", "../../../../backend/node_modules/rxjs/src/internal/config.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts", "../../../../backend/node_modules/rxjs/src/internal/util/reportUnhandledError.ts", "../../../../backend/node_modules/rxjs/src/internal/util/noop.ts", "../../../../backend/node_modules/rxjs/src/internal/NotificationFactories.ts", "../../../../backend/node_modules/rxjs/src/internal/util/errorContext.ts", "../../../../backend/node_modules/rxjs/src/internal/Subscriber.ts", "../../../../backend/node_modules/rxjs/src/internal/symbol/observable.ts", "../../../../backend/node_modules/rxjs/src/internal/util/identity.ts", "../../../../backend/node_modules/rxjs/src/internal/util/pipe.ts", "../../../../backend/node_modules/rxjs/src/internal/Observable.ts", "../../../../backend/node_modules/rxjs/src/internal/util/lift.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/refCount.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/ConnectableObservable.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/dom/animationFrames.ts", "../../../../backend/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../../../backend/node_modules/rxjs/src/internal/Subject.ts", "../../../../backend/node_modules/rxjs/src/internal/BehaviorSubject.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../../../backend/node_modules/rxjs/src/internal/ReplaySubject.ts", "../../../../backend/node_modules/rxjs/src/internal/AsyncSubject.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/Action.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts", "../../../../backend/node_modules/rxjs/src/internal/util/Immediate.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/immediateProvider.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/AsapAction.ts", "../../../../backend/node_modules/rxjs/src/internal/Scheduler.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/asap.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/async.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/QueueAction.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/queue.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/animationFrame.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/empty.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isScheduler.ts", "../../../../backend/node_modules/rxjs/src/internal/util/args.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isArrayLike.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isPromise.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isInteropObservable.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isAsyncIterable.ts", "../../../../backend/node_modules/rxjs/src/internal/util/throwUnobservableError.ts", "../../../../backend/node_modules/rxjs/src/internal/symbol/iterator.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isIterable.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isReadableStreamLike.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/innerFrom.ts", "../../../../backend/node_modules/rxjs/src/internal/util/executeSchedule.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/observeOn.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/subscribeOn.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduled/schedulePromise.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduled/scheduleArray.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../../../backend/node_modules/rxjs/src/internal/scheduled/scheduled.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/from.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/of.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/throwError.ts", "../../../../backend/node_modules/rxjs/src/internal/Notification.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isObservable.ts", "../../../../backend/node_modules/rxjs/src/internal/util/EmptyError.ts", "../../../../backend/node_modules/rxjs/src/internal/lastValueFrom.ts", "../../../../backend/node_modules/rxjs/src/internal/firstValueFrom.ts", "../../../../backend/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../../../backend/node_modules/rxjs/src/internal/util/NotFoundError.ts", "../../../../backend/node_modules/rxjs/src/internal/util/SequenceError.ts", "../../../../backend/node_modules/rxjs/src/internal/util/isDate.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/timeout.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/map.ts", "../../../../backend/node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/bindCallbackInternals.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/bindCallback.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts", "../../../../backend/node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../../../backend/node_modules/rxjs/src/internal/util/createObject.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/combineLatest.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/mergeInternals.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/mergeMap.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/mergeAll.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/concatAll.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/concat.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/defer.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/connectable.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/forkJoin.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/fromEvent.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/fromEventPattern.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/generate.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/iif.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/timer.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/interval.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/merge.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/never.ts", "../../../../backend/node_modules/rxjs/src/internal/util/argsOrArgArray.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/pairs.ts", "../../../../backend/node_modules/rxjs/src/internal/util/not.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/filter.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/partition.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/race.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/range.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/using.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/zip.ts", "../../../../backend/node_modules/rxjs/dist/cjs/internal/types.js", "../../../../backend/node_modules/rxjs/src/internal/operators/audit.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/auditTime.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/buffer.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/bufferCount.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/bufferTime.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/bufferToggle.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/bufferWhen.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/catchError.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/scanInternals.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/reduce.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/toArray.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/joinAllInternals.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/combineLatestAll.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/combineAll.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/combineLatest.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/combineLatestWith.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/concatMap.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/concatMapTo.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/concat.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/concatWith.ts", "../../../../backend/node_modules/rxjs/src/internal/observable/fromSubscribable.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/connect.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/count.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/debounce.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/debounceTime.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/take.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/ignoreElements.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/mapTo.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/delayWhen.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/delay.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/dematerialize.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/distinct.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/throwIfEmpty.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/elementAt.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/endWith.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/every.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/exhaustMap.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/exhaustAll.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/exhaust.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/expand.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/finalize.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/find.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/findIndex.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/first.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/groupBy.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/isEmpty.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/takeLast.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/last.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/materialize.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/max.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/flatMap.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/mergeMapTo.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/mergeScan.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/merge.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/mergeWith.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/min.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/multicast.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/onErrorResumeNextWith.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/pairwise.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/pluck.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/publish.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/publishBehavior.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/publishLast.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/publishReplay.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/raceWith.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/repeat.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/repeatWhen.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/retry.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/retryWhen.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/sample.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/sampleTime.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/scan.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/sequenceEqual.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/share.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/shareReplay.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/single.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/skip.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/skipLast.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/skipUntil.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/skipWhile.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/startWith.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/switchMap.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/switchAll.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/switchMapTo.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/switchScan.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/takeUntil.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/takeWhile.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/tap.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/throttle.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/throttleTime.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/timeInterval.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/timeoutWith.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/timestamp.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/window.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/windowCount.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/windowTime.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/windowToggle.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/windowWhen.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/withLatestFrom.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/zipAll.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/zip.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/zipWith.ts", "../../../../backend/node_modules/rxjs/src/index.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/partition.ts", "../../../../backend/node_modules/rxjs/src/internal/operators/race.ts", "../../../../backend/node_modules/rxjs/src/operators/index.ts", "../../../../backend/node_modules/@nestjs/common/enums/http-status.enum.js", "../../../../backend/node_modules/@nestjs/common/enums/shutdown-signal.enum.js", "../../../../backend/node_modules/@nestjs/common/enums/version-type.enum.js", "../../../../backend/node_modules/@nestjs/common/enums/index.js", "../../../../backend/node_modules/@nestjs/common/file-stream/streamable-file.js", "../../../../backend/node_modules/@nestjs/common/file-stream/index.js", "../../../../backend/node_modules/@nestjs/common/cache/interceptors/cache.interceptor.js", "../../../../backend/node_modules/@nestjs/common/cache/interceptors/index.js", "../../../../backend/node_modules/@nestjs/common/cache/interfaces/cache-manager.interface.js", "../../../../backend/node_modules/@nestjs/common/cache/interfaces/cache-module.interface.js", "../../../../backend/node_modules/@nestjs/common/cache/interfaces/index.js", "../../../../backend/node_modules/@nestjs/common/cache/index.js", "../../../../backend/node_modules/@nestjs/common/services/index.js", "../../../../backend/node_modules/@nestjs/common/exceptions/http.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/bad-request.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/unauthorized.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/method-not-allowed.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/not-found.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/forbidden.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/not-acceptable.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/request-timeout.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/conflict.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/gone.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/payload-too-large.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/unsupported-media-type.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/unprocessable-entity.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/internal-server-error.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/not-implemented.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/http-version-not-supported.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/bad-gateway.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/service-unavailable.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/gateway-timeout.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/im-a-teapot.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/precondition-failed.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/misdirected.exception.js", "../../../../backend/node_modules/@nestjs/common/exceptions/index.js", "../../../../backend/node_modules/@nestjs/common/interfaces/abstract.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/controllers/controller-metadata.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/controllers/controller.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/exceptions/exception-filter.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/exceptions/rpc-exception-filter.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/exceptions/ws-exception-filter.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/external/validation-error.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/features/arguments-host.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/features/can-activate.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/features/custom-route-param-factory.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/features/execution-context.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/features/nest-interceptor.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/features/paramtype.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/features/pipe-transform.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/global-prefix-options.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/hooks/before-application-shutdown.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/hooks/on-application-bootstrap.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/hooks/on-application-shutdown.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/hooks/on-destroy.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/hooks/on-init.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/hooks/index.js", "../../../../backend/node_modules/@nestjs/common/interfaces/http/http-server.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/http/message-event.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/http/raw-body-request.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/http/index.js", "../../../../backend/node_modules/@nestjs/common/interfaces/injectable.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/microservices/nest-hybrid-application-options.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/middleware/middleware-config-proxy.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/middleware/middleware-configuration.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/middleware/middleware-consumer.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/middleware/nest-middleware.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/middleware/index.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/dynamic-module.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/forward-reference.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/injection-token.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/introspection-result.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/module-metadata.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/nest-module.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/optional-factory-dependency.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/provider.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/modules/index.js", "../../../../backend/node_modules/@nestjs/common/interfaces/nest-application-context.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/nest-application-options.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/nest-application.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/nest-microservice.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/scope-options.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/type.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/version-options.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/websockets/web-socket-adapter.interface.js", "../../../../backend/node_modules/@nestjs/common/interfaces/index.js", "../../../../backend/node_modules/@nestjs/common/pipes/default-value.pipe.js", "../../../../backend/node_modules/@nestjs/common/utils/http-error-by-code.util.js", "../../../../backend/node_modules/iterare/src/concat.ts", "../../../../backend/node_modules/iterare/src/filter.ts", "../../../../backend/node_modules/iterare/src/utils.ts", "../../../../backend/node_modules/iterare/src/flatten.ts", "../../../../backend/node_modules/iterare/src/map.ts", "../../../../backend/node_modules/iterare/src/slice.ts", "../../../../backend/node_modules/iterare/src/zip.ts", "../../../../backend/node_modules/iterare/src/iterate.ts", "../../../../backend/node_modules/iterare/src/index.ts", "../../../../backend/node_modules/src/metadata/ValidationMetadata.ts", "../../../../backend/node_modules/src/validation-schema/ValidationSchemaToMetadataTransformer.ts", "../../../../backend/node_modules/src/utils/convert-to-array.util.ts", "../../../../backend/node_modules/src/utils/get-global.util.ts", "../../../../backend/node_modules/src/utils/is-promise.util.ts", "../../../../backend/node_modules/src/utils/index.ts", "../../../../backend/node_modules/src/metadata/MetadataStorage.ts", "../../../../backend/node_modules/src/validation/ValidationError.ts", "../../../../backend/node_modules/src/validation/ValidationTypes.ts", "../../../../backend/node_modules/src/validation/ValidationUtils.ts", "../../../../backend/node_modules/src/validation/ValidationExecutor.ts", "../../../../backend/node_modules/src/validation/Validator.ts", "../../../../backend/node_modules/src/container.ts", "../../../../backend/node_modules/src/decorator/common/Allow.ts", "../../../../backend/node_modules/src/metadata/ConstraintMetadata.ts", "../../../../backend/node_modules/src/register-decorator.ts", "../../../../backend/node_modules/src/decorator/common/ValidateBy.ts", "../../../../backend/node_modules/src/decorator/common/IsDefined.ts", "../../../../backend/node_modules/src/decorator/common/IsOptional.ts", "../../../../backend/node_modules/src/decorator/common/Validate.ts", "../../../../backend/node_modules/src/decorator/common/ValidateIf.ts", "../../../../backend/node_modules/src/decorator/common/ValidateNested.ts", "../../../../backend/node_modules/src/decorator/common/ValidatePromise.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/util/assertString.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/util/merge.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isLatLong.js", "../../../../backend/node_modules/src/decorator/common/IsLatLong.ts", "../../../../backend/node_modules/src/decorator/common/IsLatitude.ts", "../../../../backend/node_modules/src/decorator/common/IsLongitude.ts", "../../../../backend/node_modules/src/decorator/common/Equals.ts", "../../../../backend/node_modules/src/decorator/common/NotEquals.ts", "../../../../backend/node_modules/src/decorator/common/IsEmpty.ts", "../../../../backend/node_modules/src/decorator/common/IsNotEmpty.ts", "../../../../backend/node_modules/src/decorator/common/IsIn.ts", "../../../../backend/node_modules/src/decorator/common/IsNotIn.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/alpha.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isFloat.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/toFloat.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isDivisibleBy.js", "../../../../backend/node_modules/src/decorator/number/IsDivisibleBy.ts", "../../../../backend/node_modules/src/decorator/number/IsPositive.ts", "../../../../backend/node_modules/src/decorator/number/IsNegative.ts", "../../../../backend/node_modules/src/decorator/number/Max.ts", "../../../../backend/node_modules/src/decorator/number/Min.ts", "../../../../backend/node_modules/src/decorator/date/MinDate.ts", "../../../../backend/node_modules/src/decorator/date/MaxDate.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/util/toString.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/contains.js", "../../../../backend/node_modules/src/decorator/string/Contains.ts", "../../../../backend/node_modules/src/decorator/string/NotContains.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isAlpha.js", "../../../../backend/node_modules/src/decorator/string/IsAlpha.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isAlphanumeric.js", "../../../../backend/node_modules/src/decorator/string/IsAlphanumeric.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/util/includes.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isDecimal.js", "../../../../backend/node_modules/src/decorator/string/IsDecimal.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isAscii.js", "../../../../backend/node_modules/src/decorator/string/IsAscii.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isBase64.js", "../../../../backend/node_modules/src/decorator/string/IsBase64.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isByteLength.js", "../../../../backend/node_modules/src/decorator/string/IsByteLength.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isLuhnNumber.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isCreditCard.js", "../../../../backend/node_modules/src/decorator/string/IsCreditCard.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isCurrency.js", "../../../../backend/node_modules/src/decorator/string/IsCurrency.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isFQDN.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isIP.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isEmail.js", "../../../../backend/node_modules/src/decorator/string/IsEmail.ts", "../../../../backend/node_modules/src/decorator/string/IsFQDN.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isFullWidth.js", "../../../../backend/node_modules/src/decorator/string/IsFullWidth.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isHalfWidth.js", "../../../../backend/node_modules/src/decorator/string/IsHalfWidth.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isVariableWidth.js", "../../../../backend/node_modules/src/decorator/string/IsVariableWidth.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isHexColor.js", "../../../../backend/node_modules/src/decorator/string/IsHexColor.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isHexadecimal.js", "../../../../backend/node_modules/src/decorator/string/IsHexadecimal.ts", "../../../../backend/node_modules/src/decorator/ValidationOptions.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isMACAddress.js", "../../../../backend/node_modules/src/decorator/string/IsMacAddress.ts", "../../../../backend/node_modules/src/decorator/string/IsIP.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isInt.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isPort.js", "../../../../backend/node_modules/src/decorator/string/IsPort.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISBN.js", "../../../../backend/node_modules/src/decorator/string/IsISBN.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISIN.js", "../../../../backend/node_modules/src/decorator/string/IsISIN.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISO8601.js", "../../../../backend/node_modules/src/decorator/string/IsISO8601.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isJSON.js", "../../../../backend/node_modules/src/decorator/string/IsJSON.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isJWT.js", "../../../../backend/node_modules/src/decorator/string/IsJWT.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isLowercase.js", "../../../../backend/node_modules/src/decorator/string/IsLowercase.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isMobilePhone.js", "../../../../backend/node_modules/src/decorator/string/IsMobilePhone.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISO31661Alpha2.js", "../../../../backend/node_modules/src/decorator/string/IsISO31661Alpha2.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISO31661Alpha3.js", "../../../../backend/node_modules/src/decorator/string/IsISO31661Alpha3.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isMongoId.js", "../../../../backend/node_modules/src/decorator/string/IsMongoId.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isMultibyte.js", "../../../../backend/node_modules/src/decorator/string/IsMultibyte.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isSurrogatePair.js", "../../../../backend/node_modules/src/decorator/string/IsSurrogatePair.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isURL.js", "../../../../backend/node_modules/src/decorator/string/IsUrl.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isUUID.js", "../../../../backend/node_modules/src/decorator/string/IsUUID.ts", "../../../../backend/node_modules/src/decorator/string/IsFirebasePushId.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isUppercase.js", "../../../../backend/node_modules/src/decorator/string/IsUppercase.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isLength.js", "../../../../backend/node_modules/src/decorator/string/Length.ts", "../../../../backend/node_modules/src/decorator/string/MaxLength.ts", "../../../../backend/node_modules/src/decorator/string/MinLength.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/matches.js", "../../../../backend/node_modules/src/decorator/string/Matches.ts", "../../../../backend/node_modules/libphonenumber-js/metadata.min.json.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/withMetadataArgument.js", "../../../../backend/node_modules/libphonenumber-js/source/ParseError.js", "../../../../backend/node_modules/libphonenumber-js/source/constants.js", "../../../../backend/node_modules/libphonenumber-js/source/tools/semver-compare.js", "../../../../backend/node_modules/libphonenumber-js/source/metadata.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/extension/createExtensionPattern.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/isViablePhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/extension/extractExtension.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/parseDigits.js", "../../../../backend/node_modules/libphonenumber-js/source/parseIncompletePhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/getCountryCallingCode.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/mergeArrays.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/checkNumberLength.js", "../../../../backend/node_modules/libphonenumber-js/source/isPossible.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/matchesEntirely.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/getNumberType.js", "../../../../backend/node_modules/libphonenumber-js/source/isValid.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/getPossibleCountriesForNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/applyInternationalSeparatorStyle.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/formatNationalNumberUsingFormat.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/getIddPrefix.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/RFC3966.js", "../../../../backend/node_modules/libphonenumber-js/source/format.js", "../../../../backend/node_modules/libphonenumber-js/source/PhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/stripIddPrefix.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/extractNationalNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/extractCountryCallingCode.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/getCountryByNationalNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/getCountryByCallingCode.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/extractPhoneContext.js", "../../../../backend/node_modules/libphonenumber-js/source/helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js", "../../../../backend/node_modules/libphonenumber-js/source/parse.js", "../../../../backend/node_modules/libphonenumber-js/source/parsePhoneNumberWithError_.js", "../../../../backend/node_modules/libphonenumber-js/source/normalizeArguments.js", "../../../../backend/node_modules/libphonenumber-js/source/parsePhoneNumberWithError.js", "../../../../backend/node_modules/libphonenumber-js/source/parsePhoneNumber_.js", "../../../../backend/node_modules/libphonenumber-js/source/parsePhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/isValidPhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/isPossiblePhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/validatePhoneNumberLength.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/LRUCache.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/RegExpCache.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/util.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/utf-8.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/matchPhoneNumberStringAgainstPhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/Leniency.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/parsePreCandidate.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/isValidPreCandidate.js", "../../../../backend/node_modules/libphonenumber-js/source/findNumbers/isValidCandidate.js", "../../../../backend/node_modules/libphonenumber-js/source/PhoneNumberMatcher.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/findNumbers.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/searchNumbers.js", "../../../../backend/node_modules/libphonenumber-js/source/findPhoneNumbersInText.js", "../../../../backend/node_modules/libphonenumber-js/source/searchPhoneNumbersInText.js", "../../../../backend/node_modules/libphonenumber-js/source/AsYouTypeState.js", "../../../../backend/node_modules/libphonenumber-js/source/AsYouTypeFormatter.util.js", "../../../../backend/node_modules/libphonenumber-js/source/AsYouTypeFormatter.complete.js", "../../../../backend/node_modules/libphonenumber-js/source/AsYouTypeFormatter.PatternParser.js", "../../../../backend/node_modules/libphonenumber-js/source/AsYouTypeFormatter.PatternMatcher.js", "../../../../backend/node_modules/libphonenumber-js/source/AsYouTypeFormatter.js", "../../../../backend/node_modules/libphonenumber-js/source/AsYouTypeParser.js", "../../../../backend/node_modules/libphonenumber-js/source/AsYouType.js", "../../../../backend/node_modules/libphonenumber-js/source/getCountries.js", "../../../../backend/node_modules/libphonenumber-js/source/getExampleNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/formatIncompletePhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/core/index.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/parsePhoneNumberWithError.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/parsePhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/isValidPhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/isPossiblePhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/validatePhoneNumberLength.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/findNumbers.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/searchNumbers.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/findPhoneNumbersInText.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/searchPhoneNumbersInText.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/PhoneNumberMatcher.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/AsYouType.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/isSupportedCountry.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/getCountries.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/getCountryCallingCode.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/getExtPrefix.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/Metadata.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/getExampleNumber.js", "../../../../backend/node_modules/libphonenumber-js/min/exports/formatIncompletePhoneNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/parse.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/parse.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/format.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/format.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/getNumberType.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/getNumberType.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/isPossibleNumber.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/isPossibleNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/isValidNumber.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/isValidNumber.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/isValidNumberForRegion_.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/isValidNumberForRegion.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/isValidNumberForRegion.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/findPhoneNumbersInitialImplementation.js", "../../../../backend/node_modules/libphonenumber-js/source/legacy/findPhoneNumbers.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/findPhoneNumbers.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/searchPhoneNumbers.js", "../../../../backend/node_modules/libphonenumber-js/index.es6.exports/PhoneNumberSearch.js", "../../../../backend/node_modules/libphonenumber-js/index.js", "../../../../backend/node_modules/src/decorator/string/IsPhoneNumber.ts", "../../../../backend/node_modules/src/decorator/string/IsMilitaryTime.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isHash.js", "../../../../backend/node_modules/src/decorator/string/IsHash.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISSN.js", "../../../../backend/node_modules/src/decorator/string/IsISSN.ts", "../../../../backend/node_modules/src/decorator/string/IsDateString.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isBoolean.js", "../../../../backend/node_modules/src/decorator/string/IsBooleanString.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isNumeric.js", "../../../../backend/node_modules/src/decorator/string/IsNumberString.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isBase32.js", "../../../../backend/node_modules/src/decorator/string/IsBase32.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isBIC.js", "../../../../backend/node_modules/src/decorator/string/IsBIC.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isBtcAddress.js", "../../../../backend/node_modules/src/decorator/string/IsBtcAddress.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isDataURI.js", "../../../../backend/node_modules/src/decorator/string/IsDataURI.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isEAN.js", "../../../../backend/node_modules/src/decorator/string/IsEAN.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isEthereumAddress.js", "../../../../backend/node_modules/src/decorator/string/IsEthereumAddress.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isHSL.js", "../../../../backend/node_modules/src/decorator/string/IsHSL.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isIBAN.js", "../../../../backend/node_modules/src/decorator/string/IsIBAN.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isIdentityCard.js", "../../../../backend/node_modules/src/decorator/string/IsIdentityCard.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISRC.js", "../../../../backend/node_modules/src/decorator/string/IsISRC.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isLocale.js", "../../../../backend/node_modules/src/decorator/string/IsLocale.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isMagnetURI.js", "../../../../backend/node_modules/src/decorator/string/IsMagnetURI.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isMimeType.js", "../../../../backend/node_modules/src/decorator/string/IsMimeType.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isOctal.js", "../../../../backend/node_modules/src/decorator/string/IsOctal.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isPassportNumber.js", "../../../../backend/node_modules/src/decorator/string/IsPassportNumber.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isPostalCode.js", "../../../../backend/node_modules/src/decorator/string/IsPostalCode.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isRFC3339.js", "../../../../backend/node_modules/src/decorator/string/IsRFC3339.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isRgbColor.js", "../../../../backend/node_modules/src/decorator/string/IsRgbColor.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/util/multilineRegex.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isSemVer.js", "../../../../backend/node_modules/src/decorator/string/IsSemVer.ts", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/toDate.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/toInt.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/toBoolean.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/equals.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isIPRange.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isDate.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isTime.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isIMEI.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isMD5.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isEmpty.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isAfter.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isBefore.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isIn.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/util/algorithms.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isTaxID.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISO6391.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isISO4217.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isBase58.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/ltrim.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/rtrim.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/trim.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/escape.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/unescape.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/blacklist.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/stripLow.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/whitelist.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isWhitelisted.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/normalizeEmail.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isSlug.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isLicensePlate.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isStrongPassword.js", "../../../../backend/node_modules/class-validator/node_modules/validator/lib/isVAT.js", "../../../../backend/node_modules/class-validator/node_modules/validator/index.js", "../../../../backend/node_modules/src/decorator/string/IsStrongPassword.ts", "../../../../backend/node_modules/src/decorator/string/IsTimeZone.ts", "../../../../backend/node_modules/src/decorator/string/IsBase58.ts", "../../../../backend/node_modules/src/decorator/string/is-tax-id.ts", "../../../../backend/node_modules/src/decorator/string/is-iso4217-currency-code.ts", "../../../../backend/node_modules/src/decorator/typechecker/IsBoolean.ts", "../../../../backend/node_modules/src/decorator/typechecker/IsDate.ts", "../../../../backend/node_modules/src/decorator/typechecker/IsNumber.ts", "../../../../backend/node_modules/src/decorator/typechecker/IsEnum.ts", "../../../../backend/node_modules/src/decorator/typechecker/IsInt.ts", "../../../../backend/node_modules/src/decorator/typechecker/IsString.ts", "../../../../backend/node_modules/src/decorator/typechecker/IsArray.ts", "../../../../backend/node_modules/src/decorator/typechecker/IsObject.ts", "../../../../backend/node_modules/src/decorator/array/ArrayContains.ts", "../../../../backend/node_modules/src/decorator/array/ArrayNotContains.ts", "../../../../backend/node_modules/src/decorator/array/ArrayNotEmpty.ts", "../../../../backend/node_modules/src/decorator/array/ArrayMinSize.ts", "../../../../backend/node_modules/src/decorator/array/ArrayMaxSize.ts", "../../../../backend/node_modules/src/decorator/array/ArrayUnique.ts", "../../../../backend/node_modules/src/decorator/object/IsNotEmptyObject.ts", "../../../../backend/node_modules/src/decorator/object/IsInstance.ts", "../../../../backend/node_modules/src/decorator/decorators.ts", "../../../../backend/node_modules/class-validator/esm5/validation/ValidatorConstraintInterface.js", "../../../../backend/node_modules/class-validator/esm5/validation/ValidatorOptions.js", "../../../../backend/node_modules/class-validator/esm5/validation/ValidationArguments.js", "../../../../backend/node_modules/class-validator/esm5/validation-schema/ValidationSchema.js", "../../../../backend/node_modules/src/index.ts", "../../../../backend/node_modules/@nestjs/common/pipes/validation.pipe.js", "../../../../backend/node_modules/@nestjs/common/pipes/parse-array.pipe.js", "../../../../backend/node_modules/@nestjs/common/pipes/parse-bool.pipe.js", "../../../../backend/node_modules/@nestjs/common/pipes/parse-int.pipe.js", "../../../../backend/node_modules/@nestjs/common/pipes/parse-float.pipe.js", "../../../../backend/node_modules/@nestjs/common/pipes/parse-enum.pipe.js", "../../../../backend/node_modules/@nestjs/common/pipes/parse-uuid.pipe.js", "../../../../backend/node_modules/@nestjs/common/pipes/file/file-validator.interface.js", "../../../../backend/node_modules/@nestjs/common/pipes/file/file-type.validator.js", "../../../../backend/node_modules/@nestjs/common/pipes/file/max-file-size.validator.js", "../../../../backend/node_modules/@nestjs/common/pipes/file/parse-file-options.interface.js", "../../../../backend/node_modules/@nestjs/common/pipes/file/parse-file.pipe.js", "../../../../backend/node_modules/@nestjs/common/pipes/file/parse-file-pipe.builder.js", "../../../../backend/node_modules/@nestjs/common/pipes/file/index.js", "../../../../backend/node_modules/@nestjs/common/pipes/index.js", "../../../../backend/node_modules/@nestjs/common/serializer/class-serializer.constants.js", "../../../../backend/node_modules/@nestjs/common/serializer/class-serializer.interceptor.js", "../../../../backend/node_modules/@nestjs/common/serializer/decorators/serialize-options.decorator.js", "../../../../backend/node_modules/@nestjs/common/serializer/decorators/index.js", "../../../../backend/node_modules/@nestjs/common/serializer/class-serializer.interfaces.js", "../../../../backend/node_modules/@nestjs/common/serializer/index.js", "../../../../backend/node_modules/@nestjs/common/utils/forward-ref.util.js", "../../../../backend/node_modules/@nestjs/common/utils/index.js", "../../../../backend/node_modules/@nestjs/common/index.js"],
  "sourcesContent": ["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport default {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __createBinding,\r\n    __exportStar,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n    __classPrivateFieldIn,\r\n};\r\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Bind = void 0;\n/**\n * Decorator that binds *parameter decorators* to the method that follows.\n *\n * Useful when the language doesn't provide a 'Parameter Decorator' feature\n * (i.e., vanilla JavaScript).\n *\n * @param decorators one or more parameter decorators (e.g., `Req()`)\n *\n * @publicApi\n */\nfunction Bind(...decorators) {\n    return (target, key, descriptor) => {\n        decorators.forEach((fn, index) => fn(target, key, index));\n        return descriptor;\n    };\n}\nexports.Bind = Bind;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENTRY_PROVIDER_WATERMARK = exports.CATCH_WATERMARK = exports.CONTROLLER_WATERMARK = exports.INJECTABLE_WATERMARK = exports.VERSION_METADATA = exports.SSE_METADATA = exports.RESPONSE_PASSTHROUGH_METADATA = exports.REDIRECT_METADATA = exports.HEADERS_METADATA = exports.MODULE_PATH = exports.HTTP_CODE_METADATA = exports.RENDER_METADATA = exports.ENHANCER_KEY_TO_SUBTYPE_MAP = exports.EXCEPTION_FILTERS_METADATA = exports.INTERCEPTORS_METADATA = exports.GUARDS_METADATA = exports.PIPES_METADATA = exports.FILTER_CATCH_EXCEPTIONS = exports.CUSTOM_ROUTE_AGRS_METADATA = exports.CUSTOM_ROUTE_ARGS_METADATA = exports.ROUTE_ARGS_METADATA = exports.METHOD_METADATA = exports.SCOPE_OPTIONS_METADATA = exports.OPTIONAL_PROPERTY_DEPS_METADATA = exports.PROPERTY_DEPS_METADATA = exports.OPTIONAL_DEPS_METADATA = exports.SELF_DECLARED_DEPS_METADATA = exports.PARAMTYPES_METADATA = exports.PATH_METADATA = exports.HOST_METADATA = exports.GLOBAL_MODULE_METADATA = exports.MODULE_METADATA = void 0;\nexports.MODULE_METADATA = {\n    IMPORTS: 'imports',\n    PROVIDERS: 'providers',\n    CONTROLLERS: 'controllers',\n    EXPORTS: 'exports',\n};\nexports.GLOBAL_MODULE_METADATA = '__module:global__';\nexports.HOST_METADATA = 'host';\nexports.PATH_METADATA = 'path';\nexports.PARAMTYPES_METADATA = 'design:paramtypes';\nexports.SELF_DECLARED_DEPS_METADATA = 'self:paramtypes';\nexports.OPTIONAL_DEPS_METADATA = 'optional:paramtypes';\nexports.PROPERTY_DEPS_METADATA = 'self:properties_metadata';\nexports.OPTIONAL_PROPERTY_DEPS_METADATA = 'optional:properties_metadata';\nexports.SCOPE_OPTIONS_METADATA = 'scope:options';\nexports.METHOD_METADATA = 'method';\nexports.ROUTE_ARGS_METADATA = '__routeArguments__';\nexports.CUSTOM_ROUTE_ARGS_METADATA = '__customRouteArgs__';\n/**\n * @deprecated Use `CUSTOM_ROUTE_ARGS_METADATA` instead\n */\nexports.CUSTOM_ROUTE_AGRS_METADATA = exports.CUSTOM_ROUTE_ARGS_METADATA;\nexports.FILTER_CATCH_EXCEPTIONS = '__filterCatchExceptions__';\nexports.PIPES_METADATA = '__pipes__';\nexports.GUARDS_METADATA = '__guards__';\nexports.INTERCEPTORS_METADATA = '__interceptors__';\nexports.EXCEPTION_FILTERS_METADATA = '__exceptionFilters__';\nexports.ENHANCER_KEY_TO_SUBTYPE_MAP = {\n    [exports.GUARDS_METADATA]: 'guard',\n    [exports.INTERCEPTORS_METADATA]: 'interceptor',\n    [exports.PIPES_METADATA]: 'pipe',\n    [exports.EXCEPTION_FILTERS_METADATA]: 'filter',\n};\nexports.RENDER_METADATA = '__renderTemplate__';\nexports.HTTP_CODE_METADATA = '__httpCode__';\nexports.MODULE_PATH = '__module_path__';\nexports.HEADERS_METADATA = '__headers__';\nexports.REDIRECT_METADATA = '__redirect__';\nexports.RESPONSE_PASSTHROUGH_METADATA = '__responsePassthrough__';\nexports.SSE_METADATA = '__sse__';\nexports.VERSION_METADATA = '__version__';\nexports.INJECTABLE_WATERMARK = '__injectable__';\nexports.CONTROLLER_WATERMARK = '__controller__';\nexports.CATCH_WATERMARK = '__catch__';\nexports.ENTRY_PROVIDER_WATERMARK = '__entryProvider__';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Catch = void 0;\nconst constants_1 = require(\"../../constants\");\n/**\n * Decorator that marks a class as a Nest exception filter. An exception filter\n * handles exceptions thrown by or not handled by your application code.\n *\n * The decorated class must implement the `ExceptionFilter` interface.\n *\n * @param exceptions one or more exception *types* specifying\n * the exceptions to be caught and handled by this filter.\n *\n * @see [Exception Filters](https://docs.nestjs.com/exception-filters)\n *\n * @usageNotes\n * Exception filters are applied using the `@UseFilters()` decorator, or (globally)\n * with `app.useGlobalFilters()`.\n *\n * @publicApi\n */\nfunction Catch(...exceptions) {\n    return (target) => {\n        Reflect.defineMetadata(constants_1.CATCH_WATERMARK, true, target);\n        Reflect.defineMetadata(constants_1.FILTER_CATCH_EXCEPTIONS, exceptions, target);\n    };\n}\nexports.Catch = Catch;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSymbol = exports.isEmpty = exports.isNil = exports.isConstructor = exports.isNumber = exports.isString = exports.isFunction = exports.stripEndSlash = exports.normalizePath = exports.addLeadingSlash = exports.isPlainObject = exports.isObject = exports.isUndefined = void 0;\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst isUndefined = (obj) => typeof obj === 'undefined';\nexports.isUndefined = isUndefined;\nconst isObject = (fn) => !(0, exports.isNil)(fn) && typeof fn === 'object';\nexports.isObject = isObject;\nconst isPlainObject = (fn) => {\n    if (!(0, exports.isObject)(fn)) {\n        return false;\n    }\n    const proto = Object.getPrototypeOf(fn);\n    if (proto === null) {\n        return true;\n    }\n    const ctor = Object.prototype.hasOwnProperty.call(proto, 'constructor') &&\n        proto.constructor;\n    return (typeof ctor === 'function' &&\n        ctor instanceof ctor &&\n        Function.prototype.toString.call(ctor) ===\n            Function.prototype.toString.call(Object));\n};\nexports.isPlainObject = isPlainObject;\nconst addLeadingSlash = (path) => path && typeof path === 'string'\n    ? path.charAt(0) !== '/'\n        ? '/' + path\n        : path\n    : '';\nexports.addLeadingSlash = addLeadingSlash;\nconst normalizePath = (path) => path\n    ? path.startsWith('/')\n        ? ('/' + path.replace(/\\/+$/, '')).replace(/\\/+/g, '/')\n        : '/' + path.replace(/\\/+$/, '')\n    : '/';\nexports.normalizePath = normalizePath;\nconst stripEndSlash = (path) => path[path.length - 1] === '/' ? path.slice(0, path.length - 1) : path;\nexports.stripEndSlash = stripEndSlash;\nconst isFunction = (val) => typeof val === 'function';\nexports.isFunction = isFunction;\nconst isString = (val) => typeof val === 'string';\nexports.isString = isString;\nconst isNumber = (val) => typeof val === 'number';\nexports.isNumber = isNumber;\nconst isConstructor = (val) => val === 'constructor';\nexports.isConstructor = isConstructor;\nconst isNil = (val) => (0, exports.isUndefined)(val) || val === null;\nexports.isNil = isNil;\nconst isEmpty = (array) => !(array && array.length > 0);\nexports.isEmpty = isEmpty;\nconst isSymbol = (val) => typeof val === 'symbol';\nexports.isSymbol = isSymbol;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Controller = void 0;\nconst constants_1 = require(\"../../constants\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Decorator that marks a class as a Nest controller that can receive inbound\n * requests and produce responses.\n *\n * An HTTP Controller responds to inbound HTTP Requests and produces HTTP Responses.\n * It defines a class that provides the context for one or more related route\n * handlers that correspond to HTTP request methods and associated routes\n * for example `GET /api/profile`, `POST /users/resume`\n *\n * A Microservice Controller responds to requests as well as events, running over\n * a variety of transports [(read more here)](https://docs.nestjs.com/microservices/basics).\n * It defines a class that provides a context for one or more message or event\n * handlers.\n *\n * @param prefixOrOptions a `route path prefix` or a `ControllerOptions` object.\n * A `route path prefix` is pre-pended to the path specified in any request decorator\n * in the class. `ControllerOptions` is an options configuration object specifying:\n * - `scope` - symbol that determines the lifetime of a Controller instance.\n * [See Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage) for\n * more details.\n * - `prefix` - string that defines a `route path prefix`.  The prefix\n * is pre-pended to the path specified in any request decorator in the class.\n * - `version` - string, array of strings, or Symbol that defines the version\n * of all routes in the class. [See Versioning](https://docs.nestjs.com/techniques/versioning)\n * for more details.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n * @see [Controllers](https://docs.nestjs.com/controllers)\n * @see [Microservices](https://docs.nestjs.com/microservices/basics#request-response)\n * @see [Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage)\n * @see [Versioning](https://docs.nestjs.com/techniques/versioning)\n *\n * @publicApi\n */\nfunction Controller(prefixOrOptions) {\n    const defaultPath = '/';\n    const [path, host, scopeOptions, versionOptions] = (0, shared_utils_1.isUndefined)(prefixOrOptions)\n        ? [defaultPath, undefined, undefined, undefined]\n        : (0, shared_utils_1.isString)(prefixOrOptions) || Array.isArray(prefixOrOptions)\n            ? [prefixOrOptions, undefined, undefined, undefined]\n            : [\n                prefixOrOptions.path || defaultPath,\n                prefixOrOptions.host,\n                { scope: prefixOrOptions.scope, durable: prefixOrOptions.durable },\n                Array.isArray(prefixOrOptions.version)\n                    ? Array.from(new Set(prefixOrOptions.version))\n                    : prefixOrOptions.version,\n            ];\n    return (target) => {\n        Reflect.defineMetadata(constants_1.CONTROLLER_WATERMARK, true, target);\n        Reflect.defineMetadata(constants_1.PATH_METADATA, path, target);\n        Reflect.defineMetadata(constants_1.HOST_METADATA, host, target);\n        Reflect.defineMetadata(constants_1.SCOPE_OPTIONS_METADATA, scopeOptions, target);\n        Reflect.defineMetadata(constants_1.VERSION_METADATA, versionOptions, target);\n    };\n}\nexports.Controller = Controller;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dependencies = exports.flatten = void 0;\nconst constants_1 = require(\"../../constants\");\nfunction flatten(arr) {\n    const flat = [].concat(...arr);\n    return flat.some(Array.isArray) ? flatten(flat) : flat;\n}\nexports.flatten = flatten;\n/**\n * Decorator that sets required dependencies (required with a vanilla JavaScript objects)\n *\n * @publicApi\n */\nconst Dependencies = (...dependencies) => {\n    const flattenDeps = flatten(dependencies);\n    return (target) => {\n        Reflect.defineMetadata(constants_1.PARAMTYPES_METADATA, flattenDeps, target);\n    };\n};\nexports.Dependencies = Dependencies;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendArrayMetadata = void 0;\nfunction extendArrayMetadata(key, metadata, target) {\n    const previousValue = Reflect.getMetadata(key, target) || [];\n    const value = [...previousValue, ...metadata];\n    Reflect.defineMetadata(key, value, target);\n}\nexports.extendArrayMetadata = extendArrayMetadata;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateEach = exports.InvalidDecoratorItemException = void 0;\nclass InvalidDecoratorItemException extends Error {\n    constructor(decorator, item, context) {\n        const message = `Invalid ${item} passed to ${decorator}() decorator (${context}).`;\n        super(message);\n        this.msg = message;\n    }\n    what() {\n        return this.msg;\n    }\n}\nexports.InvalidDecoratorItemException = InvalidDecoratorItemException;\nfunction validateEach(context, arr, predicate, decorator, item) {\n    if (!context || !context.name) {\n        return true;\n    }\n    const errors = arr.some(str => !predicate(str));\n    if (errors) {\n        throw new InvalidDecoratorItemException(decorator, item, context.name);\n    }\n    return true;\n}\nexports.validateEach = validateEach;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseFilters = void 0;\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds exception filters to the scope of the controller or\n * method, depending on its context.\n *\n * When `@UseFilters` is used at the controller level, the filter will be\n * applied to every handler (method) in the controller.\n *\n * When `@UseFilters` is used at the individual handler level, the filter\n * will apply only to that specific method.\n *\n * @param filters exception filter instance or class, or a list of exception\n * filter instances or classes.\n *\n * @see [Exception filters](https://docs.nestjs.com/exception-filters)\n *\n * @usageNotes\n * Exception filters can also be set up globally for all controllers and routes\n * using `app.useGlobalFilters()`.  [See here for details](https://docs.nestjs.com/exception-filters#binding-filters)\n *\n * @publicApi\n */\nconst UseFilters = (...filters) => addExceptionFiltersMetadata(...filters);\nexports.UseFilters = UseFilters;\nfunction addExceptionFiltersMetadata(...filters) {\n    return (target, key, descriptor) => {\n        const isFilterValid = (filter) => filter &&\n            ((0, shared_utils_1.isFunction)(filter) || (0, shared_utils_1.isFunction)(filter.catch));\n        if (descriptor) {\n            (0, validate_each_util_1.validateEach)(target.constructor, filters, isFilterValid, '@UseFilters', 'filter');\n            (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.EXCEPTION_FILTERS_METADATA, filters, descriptor.value);\n            return descriptor;\n        }\n        (0, validate_each_util_1.validateEach)(target, filters, isFilterValid, '@UseFilters', 'filter');\n        (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.EXCEPTION_FILTERS_METADATA, filters, target);\n        return target;\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Inject = void 0;\nconst constants_1 = require(\"../../constants\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Decorator that marks a constructor parameter as a target for\n * [Dependency Injection (DI)](https://docs.nestjs.com/providers#dependency-injection).\n *\n * Any injected provider must be visible within the module scope (loosely\n * speaking, the containing module) of the class it is being injected into. This\n * can be done by:\n *\n * - defining the provider in the same module scope\n * - exporting the provider from one module scope and importing that module into the\n *   module scope of the class being injected into\n * - exporting the provider from a module that is marked as global using the\n *   `@Global()` decorator\n *\n * #### Injection tokens\n * Can be *types* (class names), *strings* or *symbols*. This depends on how the\n * provider with which it is associated was defined. Providers defined with the\n * `@Injectable()` decorator use the class name. Custom Providers may use strings\n * or symbols as the injection token.\n *\n * @param token lookup key for the provider to be injected (assigned to the constructor\n * parameter).\n *\n * @see [Providers](https://docs.nestjs.com/providers)\n * @see [Custom Providers](https://docs.nestjs.com/fundamentals/custom-providers)\n * @see [Injection Scopes](https://docs.nestjs.com/fundamentals/injection-scopes)\n *\n * @publicApi\n */\nfunction Inject(token) {\n    return (target, key, index) => {\n        const type = token || Reflect.getMetadata('design:type', target, key);\n        if (!(0, shared_utils_1.isUndefined)(index)) {\n            let dependencies = Reflect.getMetadata(constants_1.SELF_DECLARED_DEPS_METADATA, target) || [];\n            dependencies = [...dependencies, { index, param: type }];\n            Reflect.defineMetadata(constants_1.SELF_DECLARED_DEPS_METADATA, dependencies, target);\n            return;\n        }\n        let properties = Reflect.getMetadata(constants_1.PROPERTY_DEPS_METADATA, target.constructor) || [];\n        properties = [...properties, { key, type }];\n        Reflect.defineMetadata(constants_1.PROPERTY_DEPS_METADATA, properties, target.constructor);\n    };\n}\nexports.Inject = Inject;\n", "var IDX=256, HEX=[], SIZE=256, BUFFER;\nwhile (IDX--) HEX[IDX] = (IDX + 256).toString(16).substring(1);\n\nfunction uid(len) {\n\tvar i=0, tmp=(len || 11);\n\tif (!BUFFER || ((IDX + tmp) > SIZE*2)) {\n\t\tfor (BUFFER='',IDX=0; i < SIZE; i++) {\n\t\t\tBUFFER += HEX[Math.random() * 256 | 0];\n\t\t}\n\t}\n\n\treturn BUFFER.substring(IDX, IDX++ + tmp);\n}\n\nexports.uid = uid;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mixin = exports.Injectable = void 0;\nconst uid_1 = require(\"uid\");\nconst constants_1 = require(\"../../constants\");\n/**\n * Decorator that marks a class as a [provider](https://docs.nestjs.com/providers).\n * Providers can be injected into other classes via constructor parameter injection\n * using Nest's built-in [Dependency Injection (DI)](https://docs.nestjs.com/providers#dependency-injection)\n * system.\n *\n * When injecting a provider, it must be visible within the module scope (loosely\n * speaking, the containing module) of the class it is being injected into. This\n * can be done by:\n *\n * - defining the provider in the same module scope\n * - exporting the provider from one module scope and importing that module into the\n *   module scope of the class being injected into\n * - exporting the provider from a module that is marked as global using the\n *   `@Global()` decorator\n *\n * Providers can also be defined in a more explicit and imperative form using\n * various [custom provider](https://docs.nestjs.com/fundamentals/custom-providers) techniques that expose\n * more capabilities of the DI system.\n *\n * @param options options specifying scope of injectable\n *\n * @see [Providers](https://docs.nestjs.com/providers)\n * @see [Custom Providers](https://docs.nestjs.com/fundamentals/custom-providers)\n * @see [Injection Scopes](https://docs.nestjs.com/fundamentals/injection-scopes)\n *\n * @publicApi\n */\nfunction Injectable(options) {\n    return (target) => {\n        Reflect.defineMetadata(constants_1.INJECTABLE_WATERMARK, true, target);\n        Reflect.defineMetadata(constants_1.SCOPE_OPTIONS_METADATA, options, target);\n    };\n}\nexports.Injectable = Injectable;\n/**\n * @publicApi\n */\nfunction mixin(mixinClass) {\n    Object.defineProperty(mixinClass, 'name', {\n        value: (0, uid_1.uid)(21),\n    });\n    Injectable()(mixinClass);\n    return mixinClass;\n}\nexports.mixin = mixin;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Optional = void 0;\nconst constants_1 = require(\"../../constants\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Parameter decorator for an injected dependency marking the\n * dependency as optional.\n *\n * For example:\n * ```typescript\n * constructor(@Optional() @Inject('HTTP_OPTIONS')private readonly httpClient: T) {}\n * ```\n *\n * @see [Optional providers](https://docs.nestjs.com/providers#optional-providers)\n *\n * @publicApi\n */\nfunction Optional() {\n    return (target, key, index) => {\n        if (!(0, shared_utils_1.isUndefined)(index)) {\n            const args = Reflect.getMetadata(constants_1.OPTIONAL_DEPS_METADATA, target) || [];\n            Reflect.defineMetadata(constants_1.OPTIONAL_DEPS_METADATA, [...args, index], target);\n            return;\n        }\n        const properties = Reflect.getMetadata(constants_1.OPTIONAL_PROPERTY_DEPS_METADATA, target.constructor) || [];\n        Reflect.defineMetadata(constants_1.OPTIONAL_PROPERTY_DEPS_METADATA, [...properties, key], target.constructor);\n    };\n}\nexports.Optional = Optional;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetMetadata = void 0;\n/**\n * Decorator that assigns metadata to the class/function using the\n * specified `key`.\n *\n * Requires two parameters:\n * - `key` - a value defining the key under which the metadata is stored\n * - `value` - metadata to be associated with `key`\n *\n * This metadata can be reflected using the `Reflector` class.\n *\n * Example: `@SetMetadata('roles', ['admin'])`\n *\n * @see [Reflection](https://docs.nestjs.com/guards#reflection)\n *\n * @publicApi\n */\nconst SetMetadata = (metadataKey, metadataValue) => {\n    const decoratorFactory = (target, key, descriptor) => {\n        if (descriptor) {\n            Reflect.defineMetadata(metadataKey, metadataValue, descriptor.value);\n            return descriptor;\n        }\n        Reflect.defineMetadata(metadataKey, metadataValue, target);\n        return target;\n    };\n    decoratorFactory.KEY = metadataKey;\n    return decoratorFactory;\n};\nexports.SetMetadata = SetMetadata;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseGuards = void 0;\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds guards to the scope of the controller or method,\n * depending on its context.\n *\n * When `@UseGuards` is used at the controller level, the guard will be\n * applied to every handler (method) in the controller.\n *\n * When `@UseGuards` is used at the individual handler level, the guard\n * will apply only to that specific method.\n *\n * @param guards a single guard instance or class, or a list of guard instances\n * or classes.\n *\n * @see [Guards](https://docs.nestjs.com/guards)\n *\n * @usageNotes\n * Guards can also be set up globally for all controllers and routes\n * using `app.useGlobalGuards()`.  [See here for details](https://docs.nestjs.com/guards#binding-guards)\n *\n * @publicApi\n */\nfunction UseGuards(...guards) {\n    return (target, key, descriptor) => {\n        const isGuardValid = (guard) => guard &&\n            ((0, shared_utils_1.isFunction)(guard) ||\n                (0, shared_utils_1.isFunction)(guard.canActivate));\n        if (descriptor) {\n            (0, validate_each_util_1.validateEach)(target.constructor, guards, isGuardValid, '@UseGuards', 'guard');\n            (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.GUARDS_METADATA, guards, descriptor.value);\n            return descriptor;\n        }\n        (0, validate_each_util_1.validateEach)(target, guards, isGuardValid, '@UseGuards', 'guard');\n        (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.GUARDS_METADATA, guards, target);\n        return target;\n    };\n}\nexports.UseGuards = UseGuards;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseInterceptors = void 0;\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds interceptors to the scope of the controller or method,\n * depending on its context.\n *\n * When `@UseInterceptors` is used at the controller level, the interceptor will\n * be applied to every handler (method) in the controller.\n *\n * When `@UseInterceptors` is used at the individual handler level, the interceptor\n * will apply only to that specific method.\n *\n * @param interceptors a single interceptor instance or class, or a list of\n * interceptor instances or classes.\n *\n * @see [Interceptors](https://docs.nestjs.com/interceptors)\n *\n * @usageNotes\n * Interceptors can also be set up globally for all controllers and routes\n * using `app.useGlobalInterceptors()`.  [See here for details](https://docs.nestjs.com/interceptors#binding-interceptors)\n *\n * @publicApi\n */\nfunction UseInterceptors(...interceptors) {\n    return (target, key, descriptor) => {\n        const isInterceptorValid = (interceptor) => interceptor &&\n            ((0, shared_utils_1.isFunction)(interceptor) ||\n                (0, shared_utils_1.isFunction)(interceptor.intercept));\n        if (descriptor) {\n            (0, validate_each_util_1.validateEach)(target.constructor, interceptors, isInterceptorValid, '@UseInterceptors', 'interceptor');\n            (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.INTERCEPTORS_METADATA, interceptors, descriptor.value);\n            return descriptor;\n        }\n        (0, validate_each_util_1.validateEach)(target, interceptors, isInterceptorValid, '@UseInterceptors', 'interceptor');\n        (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.INTERCEPTORS_METADATA, interceptors, target);\n        return target;\n    };\n}\nexports.UseInterceptors = UseInterceptors;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UsePipes = void 0;\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds pipes to the scope of the controller or method,\n * depending on its context.\n *\n * When `@UsePipes` is used at the controller level, the pipe will be\n * applied to every handler (method) in the controller.\n *\n * When `@UsePipes` is used at the individual handler level, the pipe\n * will apply only to that specific method.\n *\n * @param pipes a single pipe instance or class, or a list of pipe instances or\n * classes.\n *\n * @see [Pipes](https://docs.nestjs.com/pipes)\n *\n * @usageNotes\n * Pipes can also be set up globally for all controllers and routes\n * using `app.useGlobalPipes()`.  [See here for details](https://docs.nestjs.com/pipes#class-validator)\n *\n * @publicApi\n */\nfunction UsePipes(...pipes) {\n    return (target, key, descriptor) => {\n        const isPipeValid = (pipe) => pipe &&\n            ((0, shared_utils_1.isFunction)(pipe) || (0, shared_utils_1.isFunction)(pipe.transform));\n        if (descriptor) {\n            (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.PIPES_METADATA, pipes, descriptor.value);\n            return descriptor;\n        }\n        (0, validate_each_util_1.validateEach)(target, pipes, isPipeValid, '@UsePipes', 'pipe');\n        (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.PIPES_METADATA, pipes, target);\n        return target;\n    };\n}\nexports.UsePipes = UsePipes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyDecorators = void 0;\n/**\n * Function that returns a new decorator that applies all decorators provided by param\n *\n * Useful to build new decorators (or a decorator factory) encapsulating multiple decorators related with the same feature\n *\n * @param decorators one or more decorators (e.g., `ApplyGuard(...)`)\n *\n * @publicApi\n */\nfunction applyDecorators(...decorators) {\n    return (target, propertyKey, descriptor) => {\n        for (const decorator of decorators) {\n            if (target instanceof Function && !descriptor) {\n                decorator(target);\n                continue;\n            }\n            decorator(target, propertyKey, descriptor);\n        }\n    };\n}\nexports.applyDecorators = applyDecorators;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Version = void 0;\nconst constants_1 = require(\"../../constants\");\n/**\n * Sets the version of the endpoint to the passed version\n *\n * @publicApi\n */\nfunction Version(version) {\n    if (Array.isArray(version)) {\n        // Drop duplicated versions\n        version = Array.from(new Set(version));\n    }\n    return (target, key, descriptor) => {\n        Reflect.defineMetadata(constants_1.VERSION_METADATA, version, descriptor.value);\n        return descriptor;\n    };\n}\nexports.Version = Version;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./bind.decorator\"), exports);\ntslib_1.__exportStar(require(\"./catch.decorator\"), exports);\ntslib_1.__exportStar(require(\"./controller.decorator\"), exports);\ntslib_1.__exportStar(require(\"./dependencies.decorator\"), exports);\ntslib_1.__exportStar(require(\"./exception-filters.decorator\"), exports);\ntslib_1.__exportStar(require(\"./inject.decorator\"), exports);\ntslib_1.__exportStar(require(\"./injectable.decorator\"), exports);\ntslib_1.__exportStar(require(\"./optional.decorator\"), exports);\ntslib_1.__exportStar(require(\"./set-metadata.decorator\"), exports);\ntslib_1.__exportStar(require(\"./use-guards.decorator\"), exports);\ntslib_1.__exportStar(require(\"./use-interceptors.decorator\"), exports);\ntslib_1.__exportStar(require(\"./use-pipes.decorator\"), exports);\ntslib_1.__exportStar(require(\"./apply-decorators\"), exports);\ntslib_1.__exportStar(require(\"./version.decorator\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.yellow = exports.clc = void 0;\nconst isColorAllowed = () => !process.env.NO_COLOR;\nconst colorIfAllowed = (colorFn) => (text) => isColorAllowed() ? colorFn(text) : text;\nexports.clc = {\n    bold: colorIfAllowed((text) => `\\x1B[1m${text}\\x1B[0m`),\n    green: colorIfAllowed((text) => `\\x1B[32m${text}\\x1B[39m`),\n    yellow: colorIfAllowed((text) => `\\x1B[33m${text}\\x1B[39m`),\n    red: colorIfAllowed((text) => `\\x1B[31m${text}\\x1B[39m`),\n    magentaBright: colorIfAllowed((text) => `\\x1B[95m${text}\\x1B[39m`),\n    cyanBright: colorIfAllowed((text) => `\\x1B[96m${text}\\x1B[39m`),\n};\nexports.yellow = colorIfAllowed((text) => `\\x1B[38;5;3m${text}\\x1B[39m`);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isLogLevelEnabled = void 0;\nconst LOG_LEVEL_VALUES = {\n    debug: 0,\n    verbose: 1,\n    log: 2,\n    warn: 3,\n    error: 4,\n};\n/**\n * Checks if target level is enabled.\n * @param targetLevel target level\n * @param logLevels array of enabled log levels\n */\nfunction isLogLevelEnabled(targetLevel, logLevels) {\n    var _a;\n    if (!logLevels || (Array.isArray(logLevels) && (logLevels === null || logLevels === void 0 ? void 0 : logLevels.length) === 0)) {\n        return false;\n    }\n    if (logLevels.includes(targetLevel)) {\n        return true;\n    }\n    const highestLogLevelValue = (_a = logLevels\n        .map(level => LOG_LEVEL_VALUES[level])\n        .sort((a, b) => b - a)) === null || _a === void 0 ? void 0 : _a[0];\n    const targetLevelValue = LOG_LEVEL_VALUES[targetLevel];\n    return targetLevelValue >= highestLogLevelValue;\n}\nexports.isLogLevelEnabled = isLogLevelEnabled;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./is-log-level-enabled.util\"), exports);\n", "\"use strict\";\nvar ConsoleLogger_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleLogger = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"../decorators/core\");\nconst cli_colors_util_1 = require(\"../utils/cli-colors.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nconst utils_1 = require(\"./utils\");\nconst DEFAULT_LOG_LEVELS = [\n    'log',\n    'error',\n    'warn',\n    'debug',\n    'verbose',\n];\nconst dateTimeFormatter = new Intl.DateTimeFormat(undefined, {\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    day: '2-digit',\n    month: '2-digit',\n});\nlet ConsoleLogger = ConsoleLogger_1 = class ConsoleLogger {\n    constructor(context, options = {}) {\n        this.context = context;\n        this.options = options;\n        if (!options.logLevels) {\n            options.logLevels = DEFAULT_LOG_LEVELS;\n        }\n        if (context) {\n            this.originalContext = context;\n        }\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log')) {\n            return;\n        }\n        const { messages, context } = this.getContextAndMessagesToPrint([\n            message,\n            ...optionalParams,\n        ]);\n        this.printMessages(messages, context, 'log');\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error')) {\n            return;\n        }\n        const { messages, context, stack } = this.getContextAndStackAndMessagesToPrint([message, ...optionalParams]);\n        this.printMessages(messages, context, 'error', 'stderr');\n        this.printStackTrace(stack);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn')) {\n            return;\n        }\n        const { messages, context } = this.getContextAndMessagesToPrint([\n            message,\n            ...optionalParams,\n        ]);\n        this.printMessages(messages, context, 'warn');\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug')) {\n            return;\n        }\n        const { messages, context } = this.getContextAndMessagesToPrint([\n            message,\n            ...optionalParams,\n        ]);\n        this.printMessages(messages, context, 'debug');\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose')) {\n            return;\n        }\n        const { messages, context } = this.getContextAndMessagesToPrint([\n            message,\n            ...optionalParams,\n        ]);\n        this.printMessages(messages, context, 'verbose');\n    }\n    /**\n     * Set log levels\n     * @param levels log levels\n     */\n    setLogLevels(levels) {\n        if (!this.options) {\n            this.options = {};\n        }\n        this.options.logLevels = levels;\n    }\n    /**\n     * Set logger context\n     * @param context context\n     */\n    setContext(context) {\n        this.context = context;\n    }\n    /**\n     * Resets the logger context to the value that was passed in the constructor.\n     */\n    resetContext() {\n        this.context = this.originalContext;\n    }\n    isLevelEnabled(level) {\n        var _a;\n        const logLevels = (_a = this.options) === null || _a === void 0 ? void 0 : _a.logLevels;\n        return (0, utils_1.isLogLevelEnabled)(level, logLevels);\n    }\n    getTimestamp() {\n        return dateTimeFormatter.format(Date.now());\n    }\n    printMessages(messages, context = '', logLevel = 'log', writeStreamType) {\n        messages.forEach(message => {\n            const pidMessage = this.formatPid(process.pid);\n            const contextMessage = this.formatContext(context);\n            const timestampDiff = this.updateAndGetTimestampDiff();\n            const formattedLogLevel = logLevel.toUpperCase().padStart(7, ' ');\n            const formattedMessage = this.formatMessage(logLevel, message, pidMessage, formattedLogLevel, contextMessage, timestampDiff);\n            process[writeStreamType !== null && writeStreamType !== void 0 ? writeStreamType : 'stdout'].write(formattedMessage);\n        });\n    }\n    formatPid(pid) {\n        return `[Nest] ${pid}  - `;\n    }\n    formatContext(context) {\n        return context ? (0, cli_colors_util_1.yellow)(`[${context}] `) : '';\n    }\n    formatMessage(logLevel, message, pidMessage, formattedLogLevel, contextMessage, timestampDiff) {\n        const output = this.stringifyMessage(message, logLevel);\n        pidMessage = this.colorize(pidMessage, logLevel);\n        formattedLogLevel = this.colorize(formattedLogLevel, logLevel);\n        return `${pidMessage}${this.getTimestamp()} ${formattedLogLevel} ${contextMessage}${output}${timestampDiff}\\n`;\n    }\n    stringifyMessage(message, logLevel) {\n        // If the message is a function, call it and re-resolve its value.\n        return (0, shared_utils_1.isFunction)(message)\n            ? this.stringifyMessage(message(), logLevel)\n            : (0, shared_utils_1.isPlainObject)(message) || Array.isArray(message)\n                ? `${this.colorize('Object:', logLevel)}\\n${JSON.stringify(message, (key, value) => typeof value === 'bigint' ? value.toString() : value, 2)}\\n`\n                : this.colorize(message, logLevel);\n    }\n    colorize(message, logLevel) {\n        const color = this.getColorByLogLevel(logLevel);\n        return color(message);\n    }\n    printStackTrace(stack) {\n        if (!stack) {\n            return;\n        }\n        process.stderr.write(`${stack}\\n`);\n    }\n    updateAndGetTimestampDiff() {\n        var _a;\n        const includeTimestamp = ConsoleLogger_1.lastTimestampAt && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.timestamp);\n        const result = includeTimestamp\n            ? this.formatTimestampDiff(Date.now() - ConsoleLogger_1.lastTimestampAt)\n            : '';\n        ConsoleLogger_1.lastTimestampAt = Date.now();\n        return result;\n    }\n    formatTimestampDiff(timestampDiff) {\n        return (0, cli_colors_util_1.yellow)(` +${timestampDiff}ms`);\n    }\n    getContextAndMessagesToPrint(args) {\n        if ((args === null || args === void 0 ? void 0 : args.length) <= 1) {\n            return { messages: args, context: this.context };\n        }\n        const lastElement = args[args.length - 1];\n        const isContext = (0, shared_utils_1.isString)(lastElement);\n        if (!isContext) {\n            return { messages: args, context: this.context };\n        }\n        return {\n            context: lastElement,\n            messages: args.slice(0, args.length - 1),\n        };\n    }\n    getContextAndStackAndMessagesToPrint(args) {\n        if (args.length === 2) {\n            return this.isStackFormat(args[1])\n                ? {\n                    messages: [args[0]],\n                    stack: args[1],\n                    context: this.context,\n                }\n                : {\n                    messages: [args[0]],\n                    context: args[1],\n                };\n        }\n        const { messages, context } = this.getContextAndMessagesToPrint(args);\n        if ((messages === null || messages === void 0 ? void 0 : messages.length) <= 1) {\n            return { messages, context };\n        }\n        const lastElement = messages[messages.length - 1];\n        const isStack = (0, shared_utils_1.isString)(lastElement);\n        // https://github.com/nestjs/nest/issues/11074#issuecomment-1421680060\n        if (!isStack && !(0, shared_utils_1.isUndefined)(lastElement)) {\n            return { messages, context };\n        }\n        return {\n            stack: lastElement,\n            messages: messages.slice(0, messages.length - 1),\n            context,\n        };\n    }\n    isStackFormat(stack) {\n        if (!(0, shared_utils_1.isString)(stack) && !(0, shared_utils_1.isUndefined)(stack)) {\n            return false;\n        }\n        return /^(.)+\\n\\s+at .+:\\d+:\\d+$/.test(stack);\n    }\n    getColorByLogLevel(level) {\n        switch (level) {\n            case 'debug':\n                return cli_colors_util_1.clc.magentaBright;\n            case 'warn':\n                return cli_colors_util_1.clc.yellow;\n            case 'error':\n                return cli_colors_util_1.clc.red;\n            case 'verbose':\n                return cli_colors_util_1.clc.cyanBright;\n            default:\n                return cli_colors_util_1.clc.green;\n        }\n    }\n};\nConsoleLogger = ConsoleLogger_1 = tslib_1.__decorate([\n    (0, core_1.Injectable)(),\n    tslib_1.__param(0, (0, core_1.Optional)()),\n    tslib_1.__param(1, (0, core_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [String, Object])\n], ConsoleLogger);\nexports.ConsoleLogger = ConsoleLogger;\n", "\"use strict\";\nvar Logger_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"../decorators/core\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nconst console_logger_service_1 = require(\"./console-logger.service\");\nconst utils_1 = require(\"./utils\");\nconst DEFAULT_LOGGER = new console_logger_service_1.ConsoleLogger();\nconst dateTimeFormatter = new Intl.DateTimeFormat(undefined, {\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    day: '2-digit',\n    month: '2-digit',\n});\n/**\n * @publicApi\n */\nlet Logger = Logger_1 = class Logger {\n    constructor(context, options = {}) {\n        this.context = context;\n        this.options = options;\n    }\n    get localInstance() {\n        if (Logger_1.staticInstanceRef === DEFAULT_LOGGER) {\n            return this.registerLocalInstanceRef();\n        }\n        else if (Logger_1.staticInstanceRef instanceof Logger_1) {\n            const prototype = Object.getPrototypeOf(Logger_1.staticInstanceRef);\n            if (prototype.constructor === Logger_1) {\n                return this.registerLocalInstanceRef();\n            }\n        }\n        return Logger_1.staticInstanceRef;\n    }\n    error(message, ...optionalParams) {\n        var _a;\n        optionalParams = this.context\n            ? (optionalParams.length ? optionalParams : [undefined]).concat(this.context)\n            : optionalParams;\n        (_a = this.localInstance) === null || _a === void 0 ? void 0 : _a.error(message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        var _a;\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        (_a = this.localInstance) === null || _a === void 0 ? void 0 : _a.log(message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        var _a;\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        (_a = this.localInstance) === null || _a === void 0 ? void 0 : _a.warn(message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        var _a, _b;\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        (_b = (_a = this.localInstance) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.call(_a, message, ...optionalParams);\n    }\n    verbose(message, ...optionalParams) {\n        var _a, _b;\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        (_b = (_a = this.localInstance) === null || _a === void 0 ? void 0 : _a.verbose) === null || _b === void 0 ? void 0 : _b.call(_a, message, ...optionalParams);\n    }\n    static error(message, ...optionalParams) {\n        var _a;\n        (_a = this.staticInstanceRef) === null || _a === void 0 ? void 0 : _a.error(message, ...optionalParams);\n    }\n    static log(message, ...optionalParams) {\n        var _a;\n        (_a = this.staticInstanceRef) === null || _a === void 0 ? void 0 : _a.log(message, ...optionalParams);\n    }\n    static warn(message, ...optionalParams) {\n        var _a;\n        (_a = this.staticInstanceRef) === null || _a === void 0 ? void 0 : _a.warn(message, ...optionalParams);\n    }\n    static debug(message, ...optionalParams) {\n        var _a, _b;\n        (_b = (_a = this.staticInstanceRef) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.call(_a, message, ...optionalParams);\n    }\n    static verbose(message, ...optionalParams) {\n        var _a, _b;\n        (_b = (_a = this.staticInstanceRef) === null || _a === void 0 ? void 0 : _a.verbose) === null || _b === void 0 ? void 0 : _b.call(_a, message, ...optionalParams);\n    }\n    /**\n     * Print buffered logs and detach buffer.\n     */\n    static flush() {\n        this.isBufferAttached = false;\n        this.logBuffer.forEach(item => item.methodRef(...item.arguments));\n        this.logBuffer = [];\n    }\n    /**\n     * Attach buffer.\n     * Turns on initialization logs buffering.\n     */\n    static attachBuffer() {\n        this.isBufferAttached = true;\n    }\n    /**\n     * Detach buffer.\n     * Turns off initialization logs buffering.\n     */\n    static detachBuffer() {\n        this.isBufferAttached = false;\n    }\n    static getTimestamp() {\n        return dateTimeFormatter.format(Date.now());\n    }\n    static overrideLogger(logger) {\n        var _a;\n        if (Array.isArray(logger)) {\n            Logger_1.logLevels = logger;\n            return (_a = this.staticInstanceRef) === null || _a === void 0 ? void 0 : _a.setLogLevels(logger);\n        }\n        if ((0, shared_utils_1.isObject)(logger)) {\n            if (logger instanceof Logger_1 && logger.constructor !== Logger_1) {\n                const errorMessage = `Using the \"extends Logger\" instruction is not allowed in Nest v9. Please, use \"extends ConsoleLogger\" instead.`;\n                this.staticInstanceRef.error(errorMessage);\n                throw new Error(errorMessage);\n            }\n            this.staticInstanceRef = logger;\n        }\n        else {\n            this.staticInstanceRef = undefined;\n        }\n    }\n    static isLevelEnabled(level) {\n        const logLevels = Logger_1.logLevels;\n        return (0, utils_1.isLogLevelEnabled)(level, logLevels);\n    }\n    registerLocalInstanceRef() {\n        var _a;\n        if (this.localInstanceRef) {\n            return this.localInstanceRef;\n        }\n        this.localInstanceRef = new console_logger_service_1.ConsoleLogger(this.context, {\n            timestamp: (_a = this.options) === null || _a === void 0 ? void 0 : _a.timestamp,\n            logLevels: Logger_1.logLevels,\n        });\n        return this.localInstanceRef;\n    }\n};\nLogger.logBuffer = new Array();\nLogger.staticInstanceRef = DEFAULT_LOGGER;\nLogger.WrapBuffer = (target, propertyKey, descriptor) => {\n    const originalFn = descriptor.value;\n    descriptor.value = function (...args) {\n        if (Logger_1.isBufferAttached) {\n            Logger_1.logBuffer.push({\n                methodRef: originalFn.bind(this),\n                arguments: args,\n            });\n            return;\n        }\n        return originalFn.call(this, ...args);\n    };\n};\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"error\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"log\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"warn\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"debug\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"verbose\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"error\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"log\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"warn\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"debug\", null);\ntslib_1.__decorate([\n    Logger_1.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"verbose\", null);\nLogger = Logger_1 = tslib_1.__decorate([\n    (0, core_1.Injectable)(),\n    tslib_1.__param(0, (0, core_1.Optional)()),\n    tslib_1.__param(1, (0, core_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [String, Object])\n], Logger);\nexports.Logger = Logger;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomStringGenerator = void 0;\nconst uid_1 = require(\"uid\");\nconst randomStringGenerator = () => (0, uid_1.uid)(21);\nexports.randomStringGenerator = randomStringGenerator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONFIGURABLE_MODULE_ID = exports.ASYNC_METHOD_SUFFIX = exports.DEFAULT_FACTORY_CLASS_METHOD_KEY = exports.DEFAULT_METHOD_KEY = void 0;\nexports.DEFAULT_METHOD_KEY = 'register';\nexports.DEFAULT_FACTORY_CLASS_METHOD_KEY = 'create';\nexports.ASYNC_METHOD_SUFFIX = 'Async';\nexports.CONFIGURABLE_MODULE_ID = 'CONFIGURABLE_MODULE_ID';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateOptionsInjectionToken = void 0;\nconst random_string_generator_util_1 = require(\"../../utils/random-string-generator.util\");\nfunction generateOptionsInjectionToken() {\n    const hash = (0, random_string_generator_util_1.randomStringGenerator)();\n    return `CONFIGURABLE_MODULE_OPTIONS[${hash}]`;\n}\nexports.generateOptionsInjectionToken = generateOptionsInjectionToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInjectionProviders = void 0;\n/**\n * check if x is OptionalFactoryDependency, based on prototype presence\n * (to avoid classes with a static 'token' field)\n * @param x\n * @returns x is OptionalFactoryDependency\n */\nfunction isOptionalFactoryDependency(x) {\n    return !!((x === null || x === void 0 ? void 0 : x.token) && !(x === null || x === void 0 ? void 0 : x.prototype));\n}\nconst mapInjectToTokens = (t) => isOptionalFactoryDependency(t) ? t.token : t;\n/**\n *\n * @param providers List of a module's providers\n * @param tokens Injection tokens needed for a useFactory function (usually the module's options' token)\n * @returns All the providers needed for the tokens' injection (searched recursively)\n */\nfunction getInjectionProviders(providers, tokens) {\n    const result = [];\n    let search = tokens.map(mapInjectToTokens);\n    while (search.length > 0) {\n        const match = (providers !== null && providers !== void 0 ? providers : []).filter(p => !result.includes(p) && // this prevents circular loops and duplication\n            (search.includes(p) || search.includes(p === null || p === void 0 ? void 0 : p.provide)));\n        result.push(...match);\n        // get injection tokens of the matched providers, if any\n        search = match\n            .filter(p => p === null || p === void 0 ? void 0 : p.inject)\n            .map(p => p.inject)\n            .flat()\n            .map(mapInjectToTokens);\n    }\n    return result;\n}\nexports.getInjectionProviders = getInjectionProviders;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./generate-options-injection-token.util\"), exports);\ntslib_1.__exportStar(require(\"./get-injection-providers.util\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurableModuleBuilder = void 0;\nconst logger_service_1 = require(\"../services/logger.service\");\nconst random_string_generator_util_1 = require(\"../utils/random-string-generator.util\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"./utils\");\n/**\n * Factory that lets you create configurable modules and\n * provides a way to reduce the majority of dynamic module boilerplate.\n *\n * @publicApi\n */\nclass ConfigurableModuleBuilder {\n    constructor(options = {}, parentBuilder) {\n        this.options = options;\n        this.logger = new logger_service_1.Logger(ConfigurableModuleBuilder.name);\n        if (parentBuilder) {\n            this.staticMethodKey = parentBuilder.staticMethodKey;\n            this.factoryClassMethodKey =\n                parentBuilder.factoryClassMethodKey;\n            this.transformModuleDefinition = parentBuilder.transformModuleDefinition;\n            this.extras = parentBuilder.extras;\n        }\n    }\n    /**\n     * Registers the \"extras\" object (a set of extra options that can be used to modify the dynamic module definition).\n     * Values you specify within the \"extras\" object will be used as default values (that can be overridden by module consumers).\n     *\n     * This method also applies the so-called \"module definition transform function\" that takes the auto-generated\n     * dynamic module object (\"DynamicModule\") and the actual consumer \"extras\" object as input parameters.\n     * The \"extras\" object consists of values explicitly specified by module consumers and default values.\n     *\n     * @example\n     * ```typescript\n     * .setExtras<{ isGlobal?: boolean }>({ isGlobal: false }, (definition, extras) =>\n     *    ({ ...definition, global: extras.isGlobal })\n     * )\n     * ```\n     */\n    setExtras(extras, transformDefinition = def => def) {\n        const builder = new ConfigurableModuleBuilder(this.options, this);\n        builder.extras = extras;\n        builder.transformModuleDefinition = transformDefinition;\n        return builder;\n    }\n    /**\n     * Dynamic modules must expose public static methods that let you pass in\n     * configuration parameters (control the module's behavior from the outside).\n     * Some frequently used names that you may have seen in other modules are:\n     * \"forRoot\", \"forFeature\", \"register\", \"configure\".\n     *\n     * This method \"setClassMethodName\" lets you specify the name of the\n     * method that will be auto-generated.\n     *\n     * @param key name of the method\n     */\n    setClassMethodName(key) {\n        const builder = new ConfigurableModuleBuilder(this.options, this);\n        builder.staticMethodKey = key;\n        return builder;\n    }\n    /**\n     * Asynchronously configured modules (that rely on other modules, i.e. \"ConfigModule\")\n     * let you pass the configuration factory class that will be registered and instantiated as a provider.\n     * This provider then will be used to retrieve the module's configuration. To provide the configuration,\n     * the corresponding factory method must be implemented.\n     *\n     * This method (\"setFactoryMethodName\") lets you control what method name will have to be\n     * implemented by the config factory (default is \"create\").\n     *\n     * @param key name of the method\n     */\n    setFactoryMethodName(key) {\n        const builder = new ConfigurableModuleBuilder(this.options, this);\n        builder.factoryClassMethodKey = key;\n        return builder;\n    }\n    /**\n     * Returns an object consisting of multiple properties that lets you\n     * easily construct dynamic configurable modules. See \"ConfigurableModuleHost\" interface for more details.\n     */\n    build() {\n        var _a, _b, _c, _d;\n        var _e;\n        (_a = this.staticMethodKey) !== null && _a !== void 0 ? _a : (this.staticMethodKey = constants_1.DEFAULT_METHOD_KEY);\n        (_b = this.factoryClassMethodKey) !== null && _b !== void 0 ? _b : (this.factoryClassMethodKey = constants_1.DEFAULT_FACTORY_CLASS_METHOD_KEY);\n        (_c = (_e = this.options).optionsInjectionToken) !== null && _c !== void 0 ? _c : (_e.optionsInjectionToken = this.options.moduleName\n            ? this.constructInjectionTokenString()\n            : (0, utils_1.generateOptionsInjectionToken)());\n        (_d = this.transformModuleDefinition) !== null && _d !== void 0 ? _d : (this.transformModuleDefinition = definition => definition);\n        return {\n            ConfigurableModuleClass: this.createConfigurableModuleCls(),\n            MODULE_OPTIONS_TOKEN: this.options.optionsInjectionToken,\n            ASYNC_OPTIONS_TYPE: this.createTypeProxy('ASYNC_OPTIONS_TYPE'),\n            OPTIONS_TYPE: this.createTypeProxy('OPTIONS_TYPE'),\n        };\n    }\n    constructInjectionTokenString() {\n        const moduleNameInSnakeCase = this.options.moduleName\n            .trim()\n            .split(/(?=[A-Z])/)\n            .join('_')\n            .toUpperCase();\n        return `${moduleNameInSnakeCase}_MODULE_OPTIONS`;\n    }\n    createConfigurableModuleCls() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        const asyncMethodKey = this.staticMethodKey + constants_1.ASYNC_METHOD_SUFFIX;\n        class InternalModuleClass {\n            static [self.staticMethodKey](options) {\n                const providers = [\n                    {\n                        provide: self.options.optionsInjectionToken,\n                        useValue: this.omitExtras(options, self.extras),\n                    },\n                ];\n                if (self.options.alwaysTransient) {\n                    providers.push({\n                        provide: constants_1.CONFIGURABLE_MODULE_ID,\n                        useValue: (0, random_string_generator_util_1.randomStringGenerator)(),\n                    });\n                }\n                return self.transformModuleDefinition({\n                    module: this,\n                    providers,\n                }, Object.assign(Object.assign({}, self.extras), options));\n            }\n            static [asyncMethodKey](options) {\n                const providers = this.createAsyncProviders(options);\n                if (self.options.alwaysTransient) {\n                    providers.push({\n                        provide: constants_1.CONFIGURABLE_MODULE_ID,\n                        useValue: (0, random_string_generator_util_1.randomStringGenerator)(),\n                    });\n                }\n                return self.transformModuleDefinition({\n                    module: this,\n                    imports: options.imports || [],\n                    providers,\n                }, Object.assign(Object.assign({}, self.extras), options));\n            }\n            static omitExtras(input, extras) {\n                if (!extras) {\n                    return input;\n                }\n                const moduleOptions = {};\n                const extrasKeys = Object.keys(extras);\n                Object.keys(input)\n                    .filter(key => !extrasKeys.includes(key))\n                    .forEach(key => {\n                    moduleOptions[key] = input[key];\n                });\n                return moduleOptions;\n            }\n            static createAsyncProviders(options) {\n                if (options.useExisting || options.useFactory) {\n                    if (options.inject && options.provideInjectionTokensFrom) {\n                        return [\n                            this.createAsyncOptionsProvider(options),\n                            ...(0, utils_1.getInjectionProviders)(options.provideInjectionTokensFrom, options.inject),\n                        ];\n                    }\n                    return [this.createAsyncOptionsProvider(options)];\n                }\n                return [\n                    this.createAsyncOptionsProvider(options),\n                    {\n                        provide: options.useClass,\n                        useClass: options.useClass,\n                    },\n                ];\n            }\n            static createAsyncOptionsProvider(options) {\n                if (options.useFactory) {\n                    return {\n                        provide: self.options.optionsInjectionToken,\n                        useFactory: options.useFactory,\n                        inject: options.inject || [],\n                    };\n                }\n                return {\n                    provide: self.options.optionsInjectionToken,\n                    useFactory: async (optionsFactory) => await optionsFactory[self.factoryClassMethodKey](),\n                    inject: [options.useExisting || options.useClass],\n                };\n            }\n        }\n        return InternalModuleClass;\n    }\n    createTypeProxy(typeName) {\n        const proxy = new Proxy({}, {\n            get: () => {\n                throw new Error(`\"${typeName}\" is not supposed to be used as a value.`);\n            },\n        });\n        return proxy;\n    }\n}\nexports.ConfigurableModuleBuilder = ConfigurableModuleBuilder;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurable-module-async-options.interface\"), exports);\ntslib_1.__exportStar(require(\"./configurable-module-cls.interface\"), exports);\ntslib_1.__exportStar(require(\"./configurable-module-host.interface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurable-module.builder\"), exports);\ntslib_1.__exportStar(require(\"./interfaces\"), exports);\n", "\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MODULE_OPTIONS_TOKEN = exports.ConfigurableModuleClass = void 0;\nconst module_utils_1 = require(\"../module-utils\");\n_a = new module_utils_1.ConfigurableModuleBuilder({\n    moduleName: 'Cache',\n})\n    .setFactoryMethodName('createCacheOptions')\n    .build(), exports.ConfigurableModuleClass = _a.ConfigurableModuleClass, exports.MODULE_OPTIONS_TOKEN = _a.MODULE_OPTIONS_TOKEN;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CACHE_MODULE_OPTIONS = exports.CACHE_TTL_METADATA = exports.CACHE_KEY_METADATA = exports.CACHE_MANAGER = void 0;\nconst cache_module_definition_1 = require(\"./cache.module-definition\");\n/**\n * @deprecated `CacheModule` (from the `@nestjs/common` package) is deprecated and will be removed in the next major release. Please, use the `@nestjs/cache-manager` package instead\n * @publicApi\n */\nexports.CACHE_MANAGER = 'CACHE_MANAGER';\nexports.CACHE_KEY_METADATA = 'cache_module:cache_key';\nexports.CACHE_TTL_METADATA = 'cache_module:cache_ttl';\n/**\n * @deprecated `CacheModule` (from the `@nestjs/common` package) is deprecated and will be removed in the next major release. Please, use the `@nestjs/cache-manager` package instead\n * @publicApi\n */\nexports.CACHE_MODULE_OPTIONS = cache_module_definition_1.MODULE_OPTIONS_TOKEN;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Global = void 0;\nconst constants_1 = require(\"../../constants\");\n/**\n * Decorator that makes a module global-scoped.\n *\n * Once imported into any module, a global-scoped module will be visible\n * in all modules. Thereafter, modules that wish to inject a service exported\n * from a global module do not need to import the provider module.\n *\n * @see [Global modules](https://docs.nestjs.com/modules#global-modules)\n *\n * @publicApi\n */\nfunction Global() {\n    return (target) => {\n        Reflect.defineMetadata(constants_1.GLOBAL_MODULE_METADATA, true, target);\n    };\n}\nexports.Global = Global;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateModuleKeys = exports.INVALID_MODULE_CONFIG_MESSAGE = void 0;\nconst constants_1 = require(\"../constants\");\nconst INVALID_MODULE_CONFIG_MESSAGE = (text, property) => `Invalid property '${property}' passed into the @Module() decorator.`;\nexports.INVALID_MODULE_CONFIG_MESSAGE = INVALID_MODULE_CONFIG_MESSAGE;\nconst metadataKeys = [\n    constants_1.MODULE_METADATA.IMPORTS,\n    constants_1.MODULE_METADATA.EXPORTS,\n    constants_1.MODULE_METADATA.CONTROLLERS,\n    constants_1.MODULE_METADATA.PROVIDERS,\n];\nfunction validateModuleKeys(keys) {\n    const validateKey = (key) => {\n        if (metadataKeys.includes(key)) {\n            return;\n        }\n        throw new Error((0, exports.INVALID_MODULE_CONFIG_MESSAGE) `${key}`);\n    };\n    keys.forEach(validateKey);\n}\nexports.validateModuleKeys = validateModuleKeys;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Module = void 0;\nconst validate_module_keys_util_1 = require(\"../../utils/validate-module-keys.util\");\n/**\n * Decorator that marks a class as a [module](https://docs.nestjs.com/modules).\n *\n * Modules are used by Nest to organize the application structure into scopes. Controllers\n * and Providers are scoped by the module they are declared in. Modules and their\n * classes (Controllers and Providers) form a graph that determines how Nest\n * performs [Dependency Injection (DI)](https://docs.nestjs.com/providers#dependency-injection).\n *\n * @param metadata module configuration metadata\n *\n * @see [Modules](https://docs.nestjs.com/modules)\n *\n * @publicApi\n */\nfunction Module(metadata) {\n    const propsKeys = Object.keys(metadata);\n    (0, validate_module_keys_util_1.validateModuleKeys)(propsKeys);\n    return (target) => {\n        for (const property in metadata) {\n            if (metadata.hasOwnProperty(property)) {\n                Reflect.defineMetadata(property, metadata[property], target);\n            }\n        }\n    };\n}\nexports.Module = Module;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./global.decorator\"), exports);\ntslib_1.__exportStar(require(\"./module.decorator\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestMethod = void 0;\nvar RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"GET\"] = 0] = \"GET\";\n    RequestMethod[RequestMethod[\"POST\"] = 1] = \"POST\";\n    RequestMethod[RequestMethod[\"PUT\"] = 2] = \"PUT\";\n    RequestMethod[RequestMethod[\"DELETE\"] = 3] = \"DELETE\";\n    RequestMethod[RequestMethod[\"PATCH\"] = 4] = \"PATCH\";\n    RequestMethod[RequestMethod[\"ALL\"] = 5] = \"ALL\";\n    RequestMethod[RequestMethod[\"OPTIONS\"] = 6] = \"OPTIONS\";\n    RequestMethod[RequestMethod[\"HEAD\"] = 7] = \"HEAD\";\n})(RequestMethod = exports.RequestMethod || (exports.RequestMethod = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.All = exports.Head = exports.Options = exports.Patch = exports.Put = exports.Delete = exports.Get = exports.Post = exports.RequestMapping = void 0;\nconst constants_1 = require(\"../../constants\");\nconst request_method_enum_1 = require(\"../../enums/request-method.enum\");\nconst defaultMetadata = {\n    [constants_1.PATH_METADATA]: '/',\n    [constants_1.METHOD_METADATA]: request_method_enum_1.RequestMethod.GET,\n};\nconst RequestMapping = (metadata = defaultMetadata) => {\n    const pathMetadata = metadata[constants_1.PATH_METADATA];\n    const path = pathMetadata && pathMetadata.length ? pathMetadata : '/';\n    const requestMethod = metadata[constants_1.METHOD_METADATA] || request_method_enum_1.RequestMethod.GET;\n    return (target, key, descriptor) => {\n        Reflect.defineMetadata(constants_1.PATH_METADATA, path, descriptor.value);\n        Reflect.defineMetadata(constants_1.METHOD_METADATA, requestMethod, descriptor.value);\n        return descriptor;\n    };\n};\nexports.RequestMapping = RequestMapping;\nconst createMappingDecorator = (method) => (path) => {\n    return (0, exports.RequestMapping)({\n        [constants_1.PATH_METADATA]: path,\n        [constants_1.METHOD_METADATA]: method,\n    });\n};\n/**\n * Route handler (method) Decorator. Routes HTTP POST requests to the specified path.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n *\n * @publicApi\n */\nexports.Post = createMappingDecorator(request_method_enum_1.RequestMethod.POST);\n/**\n * Route handler (method) Decorator. Routes HTTP GET requests to the specified path.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n *\n * @publicApi\n */\nexports.Get = createMappingDecorator(request_method_enum_1.RequestMethod.GET);\n/**\n * Route handler (method) Decorator. Routes HTTP DELETE requests to the specified path.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n *\n * @publicApi\n */\nexports.Delete = createMappingDecorator(request_method_enum_1.RequestMethod.DELETE);\n/**\n * Route handler (method) Decorator. Routes HTTP PUT requests to the specified path.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n *\n * @publicApi\n */\nexports.Put = createMappingDecorator(request_method_enum_1.RequestMethod.PUT);\n/**\n * Route handler (method) Decorator. Routes HTTP PATCH requests to the specified path.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n *\n * @publicApi\n */\nexports.Patch = createMappingDecorator(request_method_enum_1.RequestMethod.PATCH);\n/**\n * Route handler (method) Decorator. Routes HTTP OPTIONS requests to the specified path.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n *\n * @publicApi\n */\nexports.Options = createMappingDecorator(request_method_enum_1.RequestMethod.OPTIONS);\n/**\n * Route handler (method) Decorator. Routes HTTP HEAD requests to the specified path.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n *\n * @publicApi\n */\nexports.Head = createMappingDecorator(request_method_enum_1.RequestMethod.HEAD);\n/**\n * Route handler (method) Decorator. Routes all HTTP requests to the specified path.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n *\n * @publicApi\n */\nexports.All = createMappingDecorator(request_method_enum_1.RequestMethod.ALL);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RouteParamtypes = void 0;\nvar RouteParamtypes;\n(function (RouteParamtypes) {\n    RouteParamtypes[RouteParamtypes[\"REQUEST\"] = 0] = \"REQUEST\";\n    RouteParamtypes[RouteParamtypes[\"RESPONSE\"] = 1] = \"RESPONSE\";\n    RouteParamtypes[RouteParamtypes[\"NEXT\"] = 2] = \"NEXT\";\n    RouteParamtypes[RouteParamtypes[\"BODY\"] = 3] = \"BODY\";\n    RouteParamtypes[RouteParamtypes[\"QUERY\"] = 4] = \"QUERY\";\n    RouteParamtypes[RouteParamtypes[\"PARAM\"] = 5] = \"PARAM\";\n    RouteParamtypes[RouteParamtypes[\"HEADERS\"] = 6] = \"HEADERS\";\n    RouteParamtypes[RouteParamtypes[\"SESSION\"] = 7] = \"SESSION\";\n    RouteParamtypes[RouteParamtypes[\"FILE\"] = 8] = \"FILE\";\n    RouteParamtypes[RouteParamtypes[\"FILES\"] = 9] = \"FILES\";\n    RouteParamtypes[RouteParamtypes[\"HOST\"] = 10] = \"HOST\";\n    RouteParamtypes[RouteParamtypes[\"IP\"] = 11] = \"IP\";\n})(RouteParamtypes = exports.RouteParamtypes || (exports.RouteParamtypes = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Res = exports.Req = exports.HostParam = exports.Param = exports.Body = exports.Query = exports.Headers = exports.UploadedFiles = exports.UploadedFile = exports.Session = exports.Ip = exports.Next = exports.Response = exports.Request = exports.assignMetadata = void 0;\nconst constants_1 = require(\"../../constants\");\nconst route_paramtypes_enum_1 = require(\"../../enums/route-paramtypes.enum\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nfunction assignMetadata(args, paramtype, index, data, ...pipes) {\n    return Object.assign(Object.assign({}, args), { [`${paramtype}:${index}`]: {\n            index,\n            data,\n            pipes,\n        } });\n}\nexports.assignMetadata = assignMetadata;\nfunction createRouteParamDecorator(paramtype) {\n    return (data) => (target, key, index) => {\n        const args = Reflect.getMetadata(constants_1.ROUTE_ARGS_METADATA, target.constructor, key) || {};\n        Reflect.defineMetadata(constants_1.ROUTE_ARGS_METADATA, assignMetadata(args, paramtype, index, data), target.constructor, key);\n    };\n}\nconst createPipesRouteParamDecorator = (paramtype) => (data, ...pipes) => (target, key, index) => {\n    const args = Reflect.getMetadata(constants_1.ROUTE_ARGS_METADATA, target.constructor, key) || {};\n    const hasParamData = (0, shared_utils_1.isNil)(data) || (0, shared_utils_1.isString)(data);\n    const paramData = hasParamData ? data : undefined;\n    const paramPipes = hasParamData ? pipes : [data, ...pipes];\n    Reflect.defineMetadata(constants_1.ROUTE_ARGS_METADATA, assignMetadata(args, paramtype, index, paramData, ...paramPipes), target.constructor, key);\n};\n/**\n * Route handler parameter decorator. Extracts the `Request`\n * object from the underlying platform and populates the decorated\n * parameter with the value of `Request`.\n *\n * Example: `logout(@Request() req)`\n *\n * @see [Request object](https://docs.nestjs.com/controllers#request-object)\n *\n * @publicApi\n */\nexports.Request = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.REQUEST);\n/**\n * Route handler parameter decorator. Extracts the `Response`\n * object from the underlying platform and populates the decorated\n * parameter with the value of `Response`.\n *\n * Example: `logout(@Response() res)`\n *\n * @publicApi\n */\nconst Response = (options) => (target, key, index) => {\n    if (options === null || options === void 0 ? void 0 : options.passthrough) {\n        Reflect.defineMetadata(constants_1.RESPONSE_PASSTHROUGH_METADATA, options === null || options === void 0 ? void 0 : options.passthrough, target.constructor, key);\n    }\n    return createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.RESPONSE)()(target, key, index);\n};\nexports.Response = Response;\n/**\n * Route handler parameter decorator. Extracts reference to the `Next` function\n * from the underlying platform and populates the decorated\n * parameter with the value of `Next`.\n *\n * @publicApi\n */\nexports.Next = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.NEXT);\n/**\n * Route handler parameter decorator. Extracts the `Ip` property\n * from the `req` object and populates the decorated\n * parameter with the value of `ip`.\n *\n * @see [Request object](https://docs.nestjs.com/controllers#request-object)\n *\n * @publicApi\n */\nexports.Ip = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.IP);\n/**\n * Route handler parameter decorator. Extracts the `Session` object\n * from the underlying platform and populates the decorated\n * parameter with the value of `Session`.\n *\n * @see [Request object](https://docs.nestjs.com/controllers#request-object)\n *\n * @publicApi\n */\nexports.Session = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.SESSION);\n/**\n * Route handler parameter decorator. Extracts the `file` object\n * and populates the decorated parameter with the value of `file`.\n * Used in conjunction with\n * [multer middleware](https://github.com/expressjs/multer) for Express-based applications.\n *\n * For example:\n * ```typescript\n * uploadFile(@UploadedFile() file) {\n *   console.log(file);\n * }\n * ```\n * @see [Request object](https://docs.nestjs.com/techniques/file-upload)\n *\n * @publicApi\n */\nfunction UploadedFile(fileKey, ...pipes) {\n    return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.FILE)(fileKey, ...pipes);\n}\nexports.UploadedFile = UploadedFile;\n/**\n * Route handler parameter decorator. Extracts the `files` object\n * and populates the decorated parameter with the value of `files`.\n * Used in conjunction with\n * [multer middleware](https://github.com/expressjs/multer) for Express-based applications.\n *\n * For example:\n * ```typescript\n * uploadFile(@UploadedFiles() files) {\n *   console.log(files);\n * }\n * ```\n * @see [Request object](https://docs.nestjs.com/techniques/file-upload)\n *\n * @publicApi\n */\nfunction UploadedFiles(...pipes) {\n    return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.FILES)(undefined, ...pipes);\n}\nexports.UploadedFiles = UploadedFiles;\n/**\n * Route handler parameter decorator. Extracts the `headers`\n * property from the `req` object and populates the decorated\n * parameter with the value of `headers`.\n *\n * For example: `async update(@Headers('Cache-Control') cacheControl: string)`\n *\n * @param property name of single header property to extract.\n *\n * @see [Request object](https://docs.nestjs.com/controllers#request-object)\n *\n * @publicApi\n */\nexports.Headers = createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.HEADERS);\n/**\n * Route handler parameter decorator. Extracts the `query`\n * property from the `req` object and populates the decorated\n * parameter with the value of `query`. May also apply pipes to the bound\n * query parameter.\n *\n * For example:\n * ```typescript\n * async find(@Query('user') user: string)\n * ```\n *\n * @param property name of single property to extract from the `query` object\n * @param pipes one or more pipes to apply to the bound query parameter\n *\n * @see [Request object](https://docs.nestjs.com/controllers#request-object)\n *\n * @publicApi\n */\nfunction Query(property, ...pipes) {\n    return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.QUERY)(property, ...pipes);\n}\nexports.Query = Query;\n/**\n * Route handler parameter decorator. Extracts the entire `body` object\n * property, or optionally a named property of the `body` object, from\n * the `req` object and populates the decorated parameter with that value.\n * Also applies pipes to the bound body parameter.\n *\n * For example:\n * ```typescript\n * async create(@Body('role', new ValidationPipe()) role: string)\n * ```\n *\n * @param property name of single property to extract from the `body` object\n * @param pipes one or more pipes - either instances or classes - to apply to\n * the bound body parameter.\n *\n * @see [Request object](https://docs.nestjs.com/controllers#request-object)\n * @see [Working with pipes](https://docs.nestjs.com/custom-decorators#working-with-pipes)\n *\n * @publicApi\n */\nfunction Body(property, ...pipes) {\n    return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.BODY)(property, ...pipes);\n}\nexports.Body = Body;\n/**\n * Route handler parameter decorator. Extracts the `params`\n * property from the `req` object and populates the decorated\n * parameter with the value of `params`. May also apply pipes to the bound\n * parameter.\n *\n * For example, extracting all params:\n * ```typescript\n * findOne(@Param() params: string[])\n * ```\n *\n * For example, extracting a single param:\n * ```typescript\n * findOne(@Param('id') id: string)\n * ```\n * @param property name of single property to extract from the `req` object\n * @param pipes one or more pipes - either instances or classes - to apply to\n * the bound parameter.\n *\n * @see [Request object](https://docs.nestjs.com/controllers#request-object)\n * @see [Working with pipes](https://docs.nestjs.com/custom-decorators#working-with-pipes)\n *\n * @publicApi\n */\nfunction Param(property, ...pipes) {\n    return createPipesRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.PARAM)(property, ...pipes);\n}\nexports.Param = Param;\n/**\n * Route handler parameter decorator. Extracts the `hosts`\n * property from the `req` object and populates the decorated\n * parameter with the value of `params`. May also apply pipes to the bound\n * parameter.\n *\n * For example, extracting all params:\n * ```typescript\n * findOne(@HostParam() params: string[])\n * ```\n *\n * For example, extracting a single param:\n * ```typescript\n * findOne(@HostParam('id') id: string)\n * ```\n * @param property name of single property to extract from the `req` object\n *\n * @see [Request object](https://docs.nestjs.com/controllers#request-object)\n *\n * @publicApi\n */\nfunction HostParam(property) {\n    return createRouteParamDecorator(route_paramtypes_enum_1.RouteParamtypes.HOST)(property);\n}\nexports.HostParam = HostParam;\nexports.Req = exports.Request;\nexports.Res = exports.Response;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpCode = void 0;\nconst constants_1 = require(\"../../constants\");\n/**\n * Request method Decorator.  Defines the HTTP response status code.  Overrides\n * default status code for the decorated request method.\n *\n * @param statusCode HTTP response code to be returned by route handler.\n *\n * @see [Http Status Codes](https://docs.nestjs.com/controllers#status-code)\n *\n * @publicApi\n */\nfunction HttpCode(statusCode) {\n    return (target, key, descriptor) => {\n        Reflect.defineMetadata(constants_1.HTTP_CODE_METADATA, statusCode, descriptor.value);\n        return descriptor;\n    };\n}\nexports.HttpCode = HttpCode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignCustomParameterMetadata = void 0;\nconst constants_1 = require(\"../constants\");\nfunction assignCustomParameterMetadata(args, paramtype, index, factory, data, ...pipes) {\n    return Object.assign(Object.assign({}, args), { [`${paramtype}${constants_1.CUSTOM_ROUTE_ARGS_METADATA}:${index}`]: {\n            index,\n            factory,\n            data,\n            pipes,\n        } });\n}\nexports.assignCustomParameterMetadata = assignCustomParameterMetadata;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createParamDecorator = void 0;\nconst uid_1 = require(\"uid\");\nconst constants_1 = require(\"../../constants\");\nconst assign_custom_metadata_util_1 = require(\"../../utils/assign-custom-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Defines HTTP route param decorator\n *\n * @param factory\n *\n * @publicApi\n */\nfunction createParamDecorator(factory, enhancers = []) {\n    const paramtype = (0, uid_1.uid)(21);\n    return (data, ...pipes) => (target, key, index) => {\n        const args = Reflect.getMetadata(constants_1.ROUTE_ARGS_METADATA, target.constructor, key) || {};\n        const isPipe = (pipe) => pipe &&\n            (((0, shared_utils_1.isFunction)(pipe) &&\n                pipe.prototype &&\n                (0, shared_utils_1.isFunction)(pipe.prototype.transform)) ||\n                (0, shared_utils_1.isFunction)(pipe.transform));\n        const hasParamData = (0, shared_utils_1.isNil)(data) || !isPipe(data);\n        const paramData = hasParamData ? data : undefined;\n        const paramPipes = hasParamData ? pipes : [data, ...pipes];\n        Reflect.defineMetadata(constants_1.ROUTE_ARGS_METADATA, (0, assign_custom_metadata_util_1.assignCustomParameterMetadata)(args, paramtype, index, factory, paramData, ...paramPipes), target.constructor, key);\n        enhancers.forEach(fn => fn(target, key, index));\n    };\n}\nexports.createParamDecorator = createParamDecorator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Render = void 0;\nconst constants_1 = require(\"../../constants\");\n/**\n * Route handler method Decorator.  Defines a template to be rendered by the controller.\n *\n * For example: `@Render('index')`\n *\n * @param template name of the render engine template file\n *\n * @see [Model-View-Controller](https://docs.nestjs.com/techniques/mvc)\n *\n * @publicApi\n */\nfunction Render(template) {\n    return (target, key, descriptor) => {\n        Reflect.defineMetadata(constants_1.RENDER_METADATA, template, descriptor.value);\n        return descriptor;\n    };\n}\nexports.Render = Render;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Header = void 0;\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\n/**\n * Request method Decorator.  Sets a response header.\n *\n * For example:\n * `@Header('Cache-Control', 'none')`\n *\n * @param name string to be used for header name\n * @param value string to be used for header value\n *\n * @see [Headers](https://docs.nestjs.com/controllers#headers)\n *\n * @publicApi\n */\nfunction Header(name, value) {\n    return (target, key, descriptor) => {\n        (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.HEADERS_METADATA, [{ name, value }], descriptor.value);\n        return descriptor;\n    };\n}\nexports.Header = Header;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Redirect = void 0;\nconst constants_1 = require(\"../../constants\");\n/**\n * Redirects request to the specified URL.\n *\n * @publicApi\n */\nfunction Redirect(url = '', statusCode) {\n    return (target, key, descriptor) => {\n        Reflect.defineMetadata(constants_1.REDIRECT_METADATA, { statusCode, url }, descriptor.value);\n        return descriptor;\n    };\n}\nexports.Redirect = Redirect;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sse = void 0;\nconst constants_1 = require(\"../../constants\");\nconst request_method_enum_1 = require(\"../../enums/request-method.enum\");\n/**\n * Declares this route as a Server-Sent-Events endpoint\n *\n * @publicApi\n */\nfunction Sse(path) {\n    return (target, key, descriptor) => {\n        path = path && path.length ? path : '/';\n        Reflect.defineMetadata(constants_1.PATH_METADATA, path, descriptor.value);\n        Reflect.defineMetadata(constants_1.METHOD_METADATA, request_method_enum_1.RequestMethod.GET, descriptor.value);\n        Reflect.defineMetadata(constants_1.SSE_METADATA, true, descriptor.value);\n        return descriptor;\n    };\n}\nexports.Sse = Sse;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./request-mapping.decorator\"), exports);\ntslib_1.__exportStar(require(\"./route-params.decorator\"), exports);\ntslib_1.__exportStar(require(\"./http-code.decorator\"), exports);\ntslib_1.__exportStar(require(\"./create-route-param-metadata.decorator\"), exports);\ntslib_1.__exportStar(require(\"./render.decorator\"), exports);\ntslib_1.__exportStar(require(\"./header.decorator\"), exports);\ntslib_1.__exportStar(require(\"./redirect.decorator\"), exports);\ntslib_1.__exportStar(require(\"./sse.decorator\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./core\"), exports);\ntslib_1.__exportStar(require(\"./modules\"), exports);\ntslib_1.__exportStar(require(\"./http\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadPackage = void 0;\nconst logger_service_1 = require(\"../services/logger.service\");\nconst MISSING_REQUIRED_DEPENDENCY = (name, reason) => `The \"${name}\" package is missing. Please, make sure to install this library ($ npm install ${name}) to take advantage of ${reason}.`;\nconst logger = new logger_service_1.Logger('PackageLoader');\nfunction loadPackage(packageName, context, loaderFn) {\n    try {\n        return loaderFn ? loaderFn() : require(packageName);\n    }\n    catch (e) {\n        logger.error(MISSING_REQUIRED_DEPENDENCY(packageName, context));\n        logger_service_1.Logger.flush();\n        process.exit(1);\n    }\n}\nexports.loadPackage = loadPackage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultCacheOptions = void 0;\nexports.defaultCacheOptions = {\n    ttl: 5,\n    max: 100,\n    store: 'memory',\n};\n", "throw new Error(`Could not resolve \"cache-manager\" imported by \"@nestjs/common\". Is it installed?`)", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createCacheManager = void 0;\nconst load_package_util_1 = require(\"../utils/load-package.util\");\nconst cache_constants_1 = require(\"./cache.constants\");\nconst cache_module_definition_1 = require(\"./cache.module-definition\");\nconst default_options_1 = require(\"./default-options\");\n/**\n * Creates a CacheManager Provider.\n *\n * @publicApi\n */\nfunction createCacheManager() {\n    return {\n        provide: cache_constants_1.CACHE_MANAGER,\n        useFactory: async (options) => {\n            const cacheManager = (0, load_package_util_1.loadPackage)('cache-manager', 'CacheModule', () => require('cache-manager'));\n            const cacheManagerIsv5OrGreater = 'memoryStore' in cacheManager;\n            const cachingFactory = async (store, options) => {\n                if (!cacheManagerIsv5OrGreater) {\n                    return cacheManager.caching(Object.assign(Object.assign({}, default_options_1.defaultCacheOptions), Object.assign(Object.assign({}, options), { store })));\n                }\n                let cache = 'memory';\n                default_options_1.defaultCacheOptions.ttl *= 1000;\n                if (typeof store === 'object') {\n                    if ('create' in store) {\n                        cache = store.create;\n                    }\n                    else {\n                        cache = store;\n                    }\n                }\n                else if (typeof store === 'function') {\n                    cache = store;\n                }\n                return cacheManager.caching(cache, Object.assign(Object.assign({}, default_options_1.defaultCacheOptions), options));\n            };\n            return Array.isArray(options)\n                ? cacheManager.multiCaching(await Promise.all(options.map(option => cachingFactory(option.store, option))))\n                : cachingFactory(options.store, options);\n        },\n        inject: [cache_module_definition_1.MODULE_OPTIONS_TOKEN],\n    };\n}\nexports.createCacheManager = createCacheManager;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst decorators_1 = require(\"../decorators\");\nconst cache_constants_1 = require(\"./cache.constants\");\nconst cache_module_definition_1 = require(\"./cache.module-definition\");\nconst cache_providers_1 = require(\"./cache.providers\");\n/**\n * Module that provides Nest cache-manager.\n *\n * @see [Caching](https://docs.nestjs.com/techniques/caching)\n * @deprecated `CacheModule` (from the `@nestjs/common` package) is deprecated and will be removed in the next major release. Please, use the `@nestjs/cache-manager` package instead\n * @publicApi\n */\nlet CacheModule = class CacheModule extends cache_module_definition_1.ConfigurableModuleClass {\n    /**\n     * Configure the cache manager statically.\n     *\n     * @param options options to configure the cache manager\n     *\n     * @see [Customize caching](https://docs.nestjs.com/techniques/caching#customize-caching)\n     */\n    static register(options = {}) {\n        return Object.assign({ global: options.isGlobal }, super.register(options));\n    }\n    /**\n     * Configure the cache manager dynamically.\n     *\n     * @param options method for dynamically supplying cache manager configuration\n     * options\n     *\n     * @see [Async configuration](https://docs.nestjs.com/techniques/caching#async-configuration)\n     */\n    static registerAsync(options) {\n        const moduleDefinition = super.registerAsync(options);\n        return Object.assign(Object.assign({ global: options.isGlobal }, moduleDefinition), { providers: options.extraProviders\n                ? moduleDefinition.providers.concat(options.extraProviders)\n                : moduleDefinition.providers });\n    }\n};\nCacheModule = tslib_1.__decorate([\n    (0, decorators_1.Module)({\n        providers: [(0, cache_providers_1.createCacheManager)()],\n        exports: [cache_constants_1.CACHE_MANAGER],\n    })\n], CacheModule);\nexports.CacheModule = CacheModule;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheKey = void 0;\nconst decorators_1 = require(\"../../decorators\");\nconst cache_constants_1 = require(\"../cache.constants\");\n/**\n * Decorator that sets the caching key used to store/retrieve cached items for\n * Web sockets or Microservice based apps.\n *\n * For example:\n * `@CacheKey('events')`\n *\n * @param key string naming the field to be used as a cache key\n *\n * @see [Caching](https://docs.nestjs.com/techniques/caching)\n *\n * @deprecated `CacheModule` (from the `@nestjs/common` package) is deprecated and will be removed in the next major release. Please, use the `@nestjs/cache-manager` package instead\n * @publicApi\n */\nconst CacheKey = (key) => (0, decorators_1.SetMetadata)(cache_constants_1.CACHE_KEY_METADATA, key);\nexports.CacheKey = CacheKey;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheTTL = void 0;\nconst decorators_1 = require(\"../../decorators\");\nconst cache_constants_1 = require(\"../cache.constants\");\nconst CacheTTL = (ttl) => (0, decorators_1.SetMetadata)(cache_constants_1.CACHE_TTL_METADATA, ttl);\nexports.CacheTTL = CacheTTL;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./cache-key.decorator\"), exports);\ntslib_1.__exportStar(require(\"./cache-ttl.decorator\"), exports);\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { observeOn } from '../operators/observeOn';\nimport { AsyncSubject } from '../AsyncSubject';\n\nexport function bindCallbackInternals(\n  isNodeStyle: boolean,\n  callbackFunc: any,\n  resultSelector?: any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // The user provided a result selector.\n      return function (this: any, ...args: any[]) {\n        return (bindCallbackInternals(isNodeStyle, callbackFunc, scheduler) as any)\n          .apply(this, args)\n          .pipe(mapOneOrManyArgs(resultSelector as any));\n      };\n    }\n  }\n\n  // If a scheduler was passed, use our `subscribeOn` and `observeOn` operators\n  // to compose that behavior for the user.\n  if (scheduler) {\n    return function (this: any, ...args: any[]) {\n      return (bindCallbackInternals(isNodeStyle, callbackFunc) as any)\n        .apply(this, args)\n        .pipe(subscribeOn(scheduler!), observeOn(scheduler!));\n    };\n  }\n\n  return function (this: any, ...args: any[]): Observable<any> {\n    // We're using AsyncSubject, because it emits when it completes,\n    // and it will play the value to all late-arriving subscribers.\n    const subject = new AsyncSubject<any>();\n\n    // If this is true, then we haven't called our function yet.\n    let uninitialized = true;\n    return new Observable((subscriber) => {\n      // Add our subscriber to the subject.\n      const subs = subject.subscribe(subscriber);\n\n      if (uninitialized) {\n        uninitialized = false;\n        // We're going to execute the bound function\n        // This bit is to signal that we are hitting the callback asynchronously.\n        // Because we don't have any anti-\"Zalgo\" guarantees with whatever\n        // function we are handed, we use this bit to figure out whether or not\n        // we are getting hit in a callback synchronously during our call.\n        let isAsync = false;\n\n        // This is used to signal that the callback completed synchronously.\n        let isComplete = false;\n\n        // Call our function that has a callback. If at any time during this\n        // call, an error is thrown, it will be caught by the Observable\n        // subscription process and sent to the consumer.\n        callbackFunc.apply(\n          // Pass the appropriate `this` context.\n          this,\n          [\n            // Pass the arguments.\n            ...args,\n            // And our callback handler.\n            (...results: any[]) => {\n              if (isNodeStyle) {\n                // If this is a node callback, shift the first value off of the\n                // results and check it, as it is the error argument. By shifting,\n                // we leave only the argument(s) we want to pass to the consumer.\n                const err = results.shift();\n                if (err != null) {\n                  subject.error(err);\n                  // If we've errored, we can stop processing this function\n                  // as there's nothing else to do. Just return to escape.\n                  return;\n                }\n              }\n              // If we have one argument, notify the consumer\n              // of it as a single value, otherwise, if there's more than one, pass\n              // them as an array. Note that if there are no arguments, `undefined`\n              // will be emitted.\n              subject.next(1 < results.length ? results : results[0]);\n              // Flip this flag, so we know we can complete it in the synchronous\n              // case below.\n              isComplete = true;\n              // If we're not asynchronous, we need to defer the `complete` call\n              // until after the call to the function is over. This is because an\n              // error could be thrown in the function after it calls our callback,\n              // and if that is the case, if we complete here, we are unable to notify\n              // the consumer than an error occurred.\n              if (isAsync) {\n                subject.complete();\n              }\n            },\n          ]\n        );\n        // If we flipped `isComplete` during the call, we resolved synchronously,\n        // notify complete, because we skipped it in the callback to wait\n        // to make sure there were no errors during the call.\n        if (isComplete) {\n          subject.complete();\n        }\n\n        // We're no longer synchronous. If the callback is called at this point\n        // we can notify complete on the spot.\n        isAsync = true;\n      }\n\n      // Return the subscription from adding our subscriber to the subject.\n      return subs;\n    });\n  };\n}\n", "/* @prettier */\nimport { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some object and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (n, s, cb) => {\n *   cb(n, s, { someProperty: 'someValue' });\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction(5, 'some string').subscribe((values) => {\n *   console.log(values); // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback, asyncScheduler } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod\n *   .call(someObject) // make sure methodWithCallback has access to someObject\n *   .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n */\nexport function bindCallback(\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n}\n", "/* @prettier */\nimport { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindNodeCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n */\nexport function bindNodeCallback(\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any> {\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n}\n", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n", "import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnection\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n// These constants are used to create handler registry functions using array mapping below.\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'] as const;\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'] as const;\nconst jqueryMethods = ['on', 'off'] as const;\n\nexport interface NodeStyleEventEmitter {\n  addListener(eventName: string | symbol, handler: NodeEventHandler): this;\n  removeListener(eventName: string | symbol, handler: NodeEventHandler): this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener(eventName: string, handler: NodeEventHandler): void | {};\n  removeListener(eventName: string, handler: NodeEventHandler): void | {};\n}\n\n// Use handler types like those in @types/jquery. See:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/blob/847731ba1d7fa6db6b911c0e43aa0afe596e7723/types/jquery/misc.d.ts#L6395\nexport interface JQueryStyleEventEmitter<TContext, T> {\n  on(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n  off(eventName: string, handler: (this: TContext, t: T, ...args: any[]) => any): void;\n}\n\nexport interface EventListenerObject<E> {\n  handleEvent(evt: E): void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: ((evt: E) => void) | EventListenerObject<E> | null,\n    options?: EventListenerOptions | boolean\n  ): void;\n}\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\nexport function fromEvent<T>(target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>, eventName: string): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  resultSelector: (event: T) => R\n): Observable<R>;\nexport function fromEvent<T>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: HasEventTargetAddRemove<T> | ArrayLike<HasEventTargetAddRemove<T>>,\n  eventName: string,\n  options: EventListenerOptions,\n  resultSelector: (event: T) => R\n): Observable<R>;\n\nexport function fromEvent(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeStyleEventEmitter | ArrayLike<NodeStyleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string\n): Observable<unknown>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function fromEvent<T>(target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>, eventName: string): Observable<T>;\nexport function fromEvent<R>(\n  target: NodeCompatibleEventEmitter | ArrayLike<NodeCompatibleEventEmitter>,\n  eventName: string,\n  resultSelector: (...args: any[]) => R\n): Observable<R>;\n\nexport function fromEvent<T>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string\n): Observable<T>;\nexport function fromEvent<T, R>(\n  target: JQueryStyleEventEmitter<any, T> | ArrayLike<JQueryStyleEventEmitter<any, T>>,\n  eventName: string,\n  resultSelector: (value: T, ...args: any[]) => R\n): Observable<R>;\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n *\n * Emit clicks happening on the DOM document\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * Use `addEventListener` with capture option\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * // note optional configuration parameter which will be passed to addEventListener\n * const clicksInDocument = fromEvent(document, 'click', { capture: true });\n * const clicksInDiv = fromEvent(div, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n */\nexport function fromEvent<T>(\n  target: any,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: (...args: any[]) => T\n): Observable<T> {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    return fromEvent<T>(target, eventName, options as EventListenerOptions).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  // Figure out our add and remove methods. In order to do this,\n  // we are going to analyze the target in a preferred order, if\n  // the target matches a given signature, we take the two \"add\" and \"remove\"\n  // method names and apply them to a map to create opposite versions of the\n  // same function. This is because they all operate in duplicate pairs,\n  // `addListener(name, handler)`, `removeListener(name, handler)`, for example.\n  // The call only differs by method name, as to whether or not you're adding or removing.\n  const [add, remove] =\n    // If it is an EventTarget, we need to use a slightly different method than the other two patterns.\n    isEventTarget(target)\n      ? eventTargetMethods.map((methodName) => (handler: any) => target[methodName](eventName, handler, options as EventListenerOptions))\n      : // In all other cases, the call pattern is identical with the exception of the method names.\n      isNodeStyleEventEmitter(target)\n      ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n      : isJQueryStyleEventEmitter(target)\n      ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n      : [];\n\n  // If add is falsy, it's because we didn't match a pattern above.\n  // Check to see if it is an ArrayLike, because if it is, we want to\n  // try to apply fromEvent to all of it's items. We do this check last,\n  // because there are may be some types that are both ArrayLike *and* implement\n  // event registry points, and we'd rather delegate to that when possible.\n  if (!add) {\n    if (isArrayLike(target)) {\n      return mergeMap((subTarget: any) => fromEvent(subTarget, eventName, options as EventListenerOptions))(\n        innerFrom(target)\n      ) as Observable<T>;\n    }\n  }\n\n  // If add is falsy and we made it here, it's because we didn't\n  // match any valid target objects above.\n  if (!add) {\n    throw new TypeError('Invalid event target');\n  }\n\n  return new Observable<T>((subscriber) => {\n    // The handler we are going to register. Forwards the event object, by itself, or\n    // an array of arguments to the event handler, if there is more than one argument,\n    // to the consumer.\n    const handler = (...args: any[]) => subscriber.next(1 < args.length ? args : args[0]);\n    // Do the work of adding the handler to the target.\n    add(handler);\n    // When we finalize, we want to remove the handler and free up memory.\n    return () => remove!(handler);\n  });\n}\n\n/**\n * Used to create `add` and `remove` functions to register and unregister event handlers\n * from a target in the most common handler pattern, where there are only two arguments.\n * (e.g.  `on(name, fn)`, `off(name, fn)`, `addListener(name, fn)`, or `removeListener(name, fn)`)\n * @param target The target we're calling methods on\n * @param eventName The event name for the event we're creating register or unregister functions for\n */\nfunction toCommonHandlerRegistry(target: any, eventName: string) {\n  return (methodName: string) => (handler: any) => target[methodName](eventName, handler);\n}\n\n/**\n * Checks to see if the target implements the required node-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isNodeStyleEventEmitter(target: any): target is NodeStyleEventEmitter {\n  return isFunction(target.addListener) && isFunction(target.removeListener);\n}\n\n/**\n * Checks to see if the target implements the required jQuery-style EventEmitter methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isJQueryStyleEventEmitter(target: any): target is JQueryStyleEventEmitter<any, any> {\n  return isFunction(target.on) && isFunction(target.off);\n}\n\n/**\n * Checks to see if the target implements the required EventTarget methods\n * for adding and removing event handlers.\n * @param target the object to check\n */\nfunction isEventTarget(target: any): target is HasEventTargetAddRemove<any> {\n  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n", "import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\n\ntype ConditionFunc<S> = (state: S) => boolean;\ntype IterateFunc<S> = (state: S) => S;\ntype ResultFunc<S, T> = (state: S) => T;\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Produces sequence of numbers\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Use `asapScheduler`\n *\n * ```ts\n * import { generate, asapScheduler } from 'rxjs';\n *\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asapScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 2\n * // 3\n * // 5\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<T, S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  resultSelector: ResultFunc<S, T>,\n  scheduler?: SchedulerLike\n): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * ![](generate.png)\n *\n * `generate` allows you to create a stream of values generated with a loop very similar to\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * then the loop continues, if not, it stops. The third value is a function which takes the\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in a traditional for loop: the first expression\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\n * will be modified on every step (for example, the index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\n * emits the currently stored value (initial value at the first iteration) and finally updates\n * that value with iterate function. If at some point the condition returns false, then the Observable\n * completes at that moment.\n *\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\n * to immediately map the value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * a single object to the operator instead where the object has the properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, or in other words the resulting Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\n * function or not). In case of a single-parameter call, you can provide it as a\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\n * the next iteration of the loop will happen and therefore when the next value will be emitted\n * by the Observable. For example, to ensure that each value is pushed to the Observer\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * ## Examples\n *\n * Use with condition and iterate functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * Use with condition, iterate and resultSelector functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use with options object\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 'Complete!'\n * ```\n *\n * Use options object without condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!') // This will never run\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n * ```\n *\n * @see {@link from}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  scheduler?: SchedulerLike\n): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * Use options object with condition and iterate function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1,\n *   resultSelector: x => x\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 'Complete!'\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(\n  initialStateOrOptions: S | GenerateOptions<T, S>,\n  condition?: ConditionFunc<S>,\n  iterate?: IterateFunc<S>,\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\n  scheduler?: SchedulerLike\n): Observable<T> {\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  // TODO: Remove this as we move away from deprecated signatures\n  // and move towards a configuration object argument.\n  if (arguments.length === 1) {\n    // If we only have one argument, we can assume it is a configuration object.\n    // Note that folks not using TypeScript may trip over this.\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity as ResultFunc<S, T>,\n      scheduler,\n    } = initialStateOrOptions as GenerateOptions<T, S>);\n  } else {\n    // Deprecated arguments path. Figure out what the user\n    // passed and set it here.\n    initialState = initialStateOrOptions as S;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity as ResultFunc<S, T>;\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\n    } else {\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\n    }\n  }\n\n  // The actual generator used to \"generate\" values.\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\n      yield resultSelector(state);\n    }\n  }\n\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\n  return defer(\n    (scheduler\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\n        // happens on the scheduler.\n        () => scheduleIterable(gen(), scheduler!)\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\n        // `defer` and executing it will return the generator (which is iterable).\n        gen) as () => ObservableInput<T>\n  );\n}\n", "import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike } from '../types';\nimport { timer } from './timer';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n *\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n */\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (period < 0) {\n    // We cannot schedule an interval in the past.\n    period = 0;\n  }\n\n  return timer(period, period, scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { onErrorResumeNext, of, map } from 'rxjs';\n *\n * onErrorResumeNext(\n *   of(1, 2, 3, 0).pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *       return 10 / x;\n *     })\n *   ),\n *   of(1, 2, 3)\n * )\n * .subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(err),     // Will never be called.\n *   complete: () => console.log('done')\n * });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'done'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  const nextSources: ObservableInputTuple<A> = argsOrArgArray(sources) as any;\n\n  return new Observable((subscriber) => {\n    let sourceIndex = 0;\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource: Observable<A[number]>;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n", "export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \n}", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition a set of numbers into odds and evens observables\n *\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n", "import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T extends ObservableInput<any>>(\n  resourceFactory: () => Unsubscribable | void,\n  observableFactory: (resource: Unsubscribable | void) => T | void\n): Observable<ObservedValueOf<T>> {\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\n    const resource = resourceFactory();\n    const result = observableFactory(resource);\n    const source = result ? innerFrom(result) : EMPTY;\n    source.subscribe(subscriber);\n    return () => {\n      // NOTE: Optional chaining did not work here.\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { EMPTY } from './empty';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { popResultSelector } from '../util/args';\n\nexport function zip<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\nexport function zip<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\nexport function zip<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n *\n * Combine age and name from different sources\n *\n * ```ts\n * import { of, zip, map } from 'rxjs';\n *\n * const age$ = of(27, 25, 29);\n * const name$ = of('Foo', 'Bar', 'Beer');\n * const isDev$ = of(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev }))\n * )\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n *\n * @param sources\n * @return {Observable<R>}\n */\nexport function zip(...args: unknown[]): Observable<unknown> {\n  const resultSelector = popResultSelector(args);\n\n  const sources = argsOrArgArray(args) as Observable<unknown>[];\n\n  return sources.length\n    ? new Observable<unknown[]>((subscriber) => {\n        // A collection of buffers of values from each source.\n        // Keyed by the same index with which the sources were passed in.\n        let buffers: unknown[][] = sources.map(() => []);\n\n        // An array of flags of whether or not the sources have completed.\n        // This is used to check to see if we should complete the result.\n        // Keyed by the same index with which the sources were passed in.\n        let completed = sources.map(() => false);\n\n        // When everything is done, release the arrays above.\n        subscriber.add(() => {\n          buffers = completed = null!;\n        });\n\n        // Loop over our sources and subscribe to each one. The index `i` is\n        // especially important here, because we use it in closures below to\n        // access the related buffers and completion properties\n        for (let sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {\n          innerFrom(sources[sourceIndex]).subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                buffers[sourceIndex].push(value);\n                // if every buffer has at least one value in it, then we\n                // can shift out the oldest value from each buffer and emit\n                // them as an array.\n                if (buffers.every((buffer) => buffer.length)) {\n                  const result: any = buffers.map((buffer) => buffer.shift()!);\n                  // Emit the array. If theres' a result selector, use that.\n                  subscriber.next(resultSelector ? resultSelector(...result) : result);\n                  // If any one of the sources is both complete and has an empty buffer\n                  // then we complete the result. This is because we cannot possibly have\n                  // any more values to zip together.\n                  if (buffers.some((buffer, i) => !buffer.length && completed[i])) {\n                    subscriber.complete();\n                  }\n                }\n              },\n              () => {\n                // This source completed. Mark it as complete so we can check it later\n                // if we have to.\n                completed[sourceIndex] = true;\n                // But, if this complete source has nothing in its buffer, then we\n                // can complete the result, because we can't possibly have any more\n                // values from this to zip together with the other values.\n                !buffers[sourceIndex].length && subscriber.complete();\n              }\n            )\n          );\n        }\n\n        // When everything is done, release the arrays above.\n        return () => {\n          buffers = completed = null!;\n        };\n      })\n    : EMPTY;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\n\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.svg)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, audit, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    let durationSubscriber: Subscriber<any> | null = null;\n    let isComplete = false;\n\n    const endDuration = () => {\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n      isComplete && subscriber.complete();\n    };\n\n    const cleanupDuration = () => {\n      durationSubscriber = null;\n      isComplete && subscriber.complete();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          lastValue = value;\n          if (!durationSubscriber) {\n            innerFrom(durationSelector(value)).subscribe(\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\n            );\n          }\n        },\n        () => {\n          isComplete = true;\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, auditTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * `ObservableInput` (that internally gets converted to an Observable)\n * emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval, buffer } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param closingNotifier An `ObservableInput` that signals the\n * buffer to be emitted on the output Observable.\n * @return A function that returns an Observable of buffers, which are arrays\n * of values.\n */\nexport function buffer<T>(closingNotifier: ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The current buffered values.\n    let currentBuffer: T[] = [];\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => currentBuffer.push(value),\n        () => {\n          subscriber.next(currentBuffer);\n          subscriber.complete();\n        }\n      )\n    );\n\n    // Subscribe to the closing notifier.\n    innerFrom(closingNotifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          // Start a new buffer and emit the previous one.\n          const b = currentBuffer;\n          currentBuffer = [];\n          subscriber.next(b);\n        },\n        noop\n      )\n    );\n\n    return () => {\n      // Ensure buffered values are released on finalization.\n      currentBuffer = null!;\n    };\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\n  // If no `startBufferEvery` value was supplied, then we're\n  // opening and closing on the bufferSize itself.\n  startBufferEvery = startBufferEvery ?? bufferSize;\n\n  return operate((source, subscriber) => {\n    let buffers: T[][] = [];\n    let count = 0;\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          let toEmit: T[][] | null = null;\n\n          // Check to see if we need to start a buffer.\n          // This will start one at the first value, and then\n          // a new one every N after that.\n          if (count++ % startBufferEvery! === 0) {\n            buffers.push([]);\n          }\n\n          // Push our value into our active buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n            // Check to see if we're over the bufferSize\n            // if we are, record it so we can emit it later.\n            // If we emitted it now and removed it, it would\n            // mutate the `buffers` array while we're looping\n            // over it.\n            if (bufferSize <= buffer.length) {\n              toEmit = toEmit ?? [];\n              toEmit.push(buffer);\n            }\n          }\n\n          if (toEmit) {\n            // We have found some buffers that are over the\n            // `bufferSize`. Emit them, and remove them from our\n            // buffers list.\n            for (const buffer of toEmit) {\n              arrRemove(buffers, buffer);\n              subscriber.next(buffer);\n            }\n          }\n        },\n        () => {\n          // When the source completes, emit all of our\n          // active buffers.\n          for (const buffer of buffers) {\n            subscriber.next(buffer);\n          }\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Clean up our memory when we finalize\n          buffers = null!;\n        }\n      )\n    );\n  });\n}\n", "import { Subscription } from '../Subscription';\nimport { OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(\n  bufferTimeSpan: number,\n  bufferCreationInterval: number | null | undefined,\n  maxBufferSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent, bufferTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferTime<T>(bufferTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, T[]> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const bufferCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxBufferSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active buffers, their related subscriptions, and removal functions.\n    let bufferRecords: { buffer: T[]; subs: Subscription }[] | null = [];\n    // If true, it means that every time we emit a buffer, we want to start a new buffer\n    // this is only really used for when *just* the buffer time span is passed.\n    let restartOnEmit = false;\n\n    /**\n     * Does the work of emitting the buffer from the record, ensuring that the\n     * record is removed before the emission so reentrant code (from some custom scheduling, perhaps)\n     * does not alter the buffer. Also checks to see if a new buffer needs to be started\n     * after the emit.\n     */\n    const emit = (record: { buffer: T[]; subs: Subscription }) => {\n      const { buffer, subs } = record;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    /**\n     * Called every time we start a new buffer. This does\n     * the work of scheduling a job at the requested bufferTimeSpan\n     * that will emit the buffer (if it's not unsubscribed before then).\n     */\n    const startBuffer = () => {\n      if (bufferRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const buffer: T[] = [];\n        const record = {\n          buffer,\n          subs,\n        };\n        bufferRecords.push(record);\n        executeSchedule(subs, scheduler, () => emit(record), bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      // The user passed both a bufferTimeSpan (required), and a creation interval\n      // That means we need to start new buffers on the interval, and those buffers need\n      // to wait the required time span before emitting.\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n\n    const bufferTimeSubscriber = createOperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Copy the records, so if we need to remove one we\n        // don't mutate the array. It's hard, but not impossible to\n        // set up a buffer time that could mutate the array and\n        // cause issues here.\n        const recordsCopy = bufferRecords!.slice();\n        for (const record of recordsCopy) {\n          // Loop over all buffers and\n          const { buffer } = record;\n          buffer.push(value);\n          // If the buffer is over the max size, we need to emit it.\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      },\n      () => {\n        // The source completed, emit all of the active\n        // buffers we have before we complete.\n        while (bufferRecords?.length) {\n          subscriber.next(bufferRecords.shift()!.buffer);\n        }\n        bufferTimeSubscriber?.unsubscribe();\n        subscriber.complete();\n        subscriber.unsubscribe();\n      },\n      // Pass all errors through to consumer.\n      undefined,\n      // Clean up\n      () => (bufferRecords = null)\n    );\n\n    source.subscribe(bufferTimeSubscriber);\n  });\n}\n", "import { Subscription } from '../Subscription';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, bufferToggle, EMPTY } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (value: O) => ObservableInput<any>\n): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    const buffers: T[][] = [];\n\n    // Subscribe to the openings notifier first\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const buffer: T[] = [];\n          buffers.push(buffer);\n          // We use this composite subscription, so that\n          // when the closing notifier emits, we can tear it down.\n          const closingSubscription = new Subscription();\n\n          const emitBuffer = () => {\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n            closingSubscription.unsubscribe();\n          };\n\n          // The line below will add the subscription to the parent subscriber *and* the closing subscription.\n          closingSubscription.add(innerFrom(closingSelector(openValue)).subscribe(createOperatorSubscriber(subscriber, emitBuffer, noop)));\n        },\n        noop\n      )\n    );\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Value from our source. Add it to all pending buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n          }\n        },\n        () => {\n          // Source complete. Emit all pending buffers.\n          while (buffers.length > 0) {\n            subscriber.next(buffers.shift()!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.svg)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\n * );\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The buffer we keep and emit.\n    let buffer: T[] | null = null;\n    // A reference to the subscriber used to subscribe to\n    // the closing notifier. We need to hold this so we can\n    // end the subscription after the first notification.\n    let closingSubscriber: Subscriber<T> | null = null;\n\n    // Ends the previous closing notifier subscription, so it\n    // terminates after the first emission, then emits\n    // the current buffer  if there is one, starts a new buffer, and starts a\n    // new closing notifier.\n    const openBuffer = () => {\n      // Make sure to finalize the closing subscription, we only cared\n      // about one notification.\n      closingSubscriber?.unsubscribe();\n      // emit the buffer if we have one, and start a new buffer.\n      const b = buffer;\n      buffer = [];\n      b && subscriber.next(b);\n\n      // Get a new closing notifier and subscribe to it.\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n    };\n\n    // Start the first buffer.\n    openBuffer();\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Add every new value to the current buffer.\n        (value) => buffer?.push(value),\n        // When we complete, emit the buffer if we have one,\n        // then complete the result.\n        () => {\n          buffer && subscriber.next(buffer);\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        // Release memory on finalization\n        () => (buffer = closingSubscriber = null!)\n      )\n    );\n  });\n}\n", "import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n", "import { scanInternals } from './scanInternals';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n *\n * Count the number of click events that happened in 5 seconds\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click')\n *   .pipe(takeUntil(interval(5000)));\n *\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n *\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\n * called on each source value.\n * @param {A} [seed] The initial accumulation value.\n * @return A function that returns an Observable that emits a single value that\n * is the result of accumulating the values emitted by the source Observable.\n */\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n", "import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to encapsulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\n\n/**\n * Collects all of the inner sources from source observable. Then, once the\n * source completes, joins the values using the given static.\n *\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\n * same behavior of collecting all inner observables, then operating on them.\n *\n * @param joinFn The type of static join to apply to the sources collected\n * @param project The projection function to apply to the values, if any\n */\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\n  return pipe(\n    // Collect all inner sources into an array, and emit them when the\n    // source completes.\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\n    // Run the join function on the collected array of inner sources.\n    mergeMap((sources) => joinFn(sources)),\n    // If a projection function was supplied, apply it to each result.\n    project ? mapOneOrManyArgs(project) : (identity as any)\n  );\n}\n", "import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ## Example\n *\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\n *   take(2)\n * );\n * const result = higherOrder.pipe(combineLatestAll());\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n", "import { combineLatestAll } from './combineLatestAll';\n\n/**\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\n */\nexport const combineAll = combineLatestAll;\n", "import { combineLatestInit } from '../observable/combineLatest';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  sources: [...ObservableInputTuple<A>],\n  project: (...values: [T, ...A]) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(\n  ...sourcesAndProject: [...ObservableInputTuple<A>, (...values: [T, ...A]) => R]\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8. */\nexport function combineLatest<T, A extends readonly unknown[], R>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, [T, ...A]>;\n\n/**\n * @deprecated Replaced with {@link combineLatestWith}. Will be removed in v8.\n */\nexport function combineLatest<T, R>(...args: (ObservableInput<any> | ((...values: any[]) => R))[]): OperatorFunction<T, unknown> {\n  const resultSelector = popResultSelector(args);\n  return resultSelector\n    ? pipe(combineLatest(...(args as Array<ObservableInput<any>>)), mapOneOrManyArgs(resultSelector))\n    : operate((source, subscriber) => {\n        combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n      });\n}\n", "import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { combineLatest } from './combineLatest';\n\n/**\n * Create an observable that combines the latest values from all passed observables and the source\n * into arrays and emits them.\n *\n * Returns an observable, that when subscribed to, will subscribe to the source observable and all\n * sources provided as arguments. Once all sources emit at least one value, all of the latest values\n * will be emitted as an array. After that, every time any source emits a value, all of the latest values\n * will be emitted as an array.\n *\n * This is a useful operator for eagerly calculating values based off of changed inputs.\n *\n * ## Example\n *\n * Simple concatenation of values from two inputs\n *\n * ```ts\n * import { fromEvent, combineLatestWith, map } from 'rxjs';\n *\n * // Setup: Add two inputs to the page\n * const input1 = document.createElement('input');\n * document.body.appendChild(input1);\n * const input2 = document.createElement('input');\n * document.body.appendChild(input2);\n *\n * // Get streams of changes\n * const input1Changes$ = fromEvent(input1, 'change');\n * const input2Changes$ = fromEvent(input2, 'change');\n *\n * // Combine the changes by adding them together\n * input1Changes$.pipe(\n *   combineLatestWith(input2Changes$),\n *   map(([e1, e2]) => (<HTMLInputElement>e1.target).value + ' - ' + (<HTMLInputElement>e2.target).value)\n * )\n * .subscribe(x => console.log(x));\n * ```\n *\n * @param otherSources the other sources to subscribe to.\n * @return A function that returns an Observable that emits the latest\n * emissions from both source and provided Observables.\n */\nexport function combineLatestWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, Cons<T, A>> {\n  return combineLatest(...otherSources);\n}\n", "import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n", "import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable of values merged together by\n * joining the passed Observable with itself, one after the other, for each\n * value emitted from the source.\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\n */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\n}\n", "import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\n */\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\n  const scheduler = popScheduler(args);\n  return operate((source, subscriber) => {\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { concat } from './concat';\n\n/**\n * Emits all of the values from the source observable, then, once it completes, subscribes\n * to each observable source provided, one at a time, emitting all of their values, and not subscribing\n * to the next one until it completes.\n *\n * `concat(a$, b$, c$)` is the same as `a$.pipe(concatWith(b$, c$))`.\n *\n * ## Example\n *\n * Listen for one mouse click, then listen for all mouse moves.\n *\n * ```ts\n * import { fromEvent, map, take, concatWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click');\n * const moves$ = fromEvent(document, 'mousemove');\n *\n * clicks$.pipe(\n *   map(() => 'click'),\n *   take(1),\n *   concatWith(\n *     moves$.pipe(\n *       map(() => 'move')\n *     )\n *   )\n * )\n * .subscribe(x => console.log(x));\n *\n * // 'click'\n * // 'move'\n * // 'move'\n * // 'move'\n * // ...\n * ```\n *\n * @param otherSources Other observable sources to subscribe to, in sequence, after the original source is complete.\n * @return A function that returns an Observable that concatenates\n * subscriptions to the source and provided Observables subscribing to the next\n * only once the current subscription completes.\n */\nexport function concatWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return concat(...otherSources);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { reduce } from './reduce';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n *\n * ```ts\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n *\n * ```ts\n * import { range, count } from 'rxjs';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param predicate A function that is used to analyze the value and the index and\n * determine whether or not to increment the count. Return `true` to increment the count,\n * and return `false` to keep the count the same.\n * If the predicate is not provided, every value will be counted.\n * @return A function that returns an Observable that emits one number that\n * represents the count of emissions.\n */\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n", "import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.svg)\n *\n * `debounce` delays notifications emitted by the source Observable, but drops previous\n * pending delayed emissions if a new notification arrives on the source Observable.\n * This operator keeps track of the most recent notification from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The notification is emitted only when the duration\n * Observable emits a next notification, and if no other notification was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * notification appears before the duration Observable emits, the previous notification will\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\n * If the completing event happens during the scheduled duration the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during the scheduled duration or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   scan(i => ++i, 1),\n *   debounce(i => interval(200 * i))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n */\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    // The subscriber/subscription for the current debounce, if there is one.\n    let durationSubscriber: Subscriber<any> | null = null;\n\n    const emit = () => {\n      // Unsubscribe any current debounce subscription we have,\n      // we only cared about the first notification from it, and we\n      // want to clean that subscription up as soon as possible.\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        // We have a value! Free up memory first, then emit the value.\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Cancel any pending debounce duration. We don't\n          // need to null it out here yet tho, because we're just going\n          // to create another one in a few lines.\n          durationSubscriber?.unsubscribe();\n          hasValue = true;\n          lastValue = value;\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\n          // and we're going to emit the value.\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n          // Subscribe to the duration.\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = durationSubscriber = null;\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n", "import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an {@link ObservableInput},\n * that is internally converted to an Observable that is called the \"duration\"\n * Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param delayDurationSelector A function that returns an `ObservableInput` for\n * each `value` emitted by the source Observable, which is then used to delay the\n * emission of that `value` on the output Observable until the `ObservableInput`\n * returned from this function emits a next value. When called, beside `value`,\n * this function receives a zero-based `index` of the emission order.\n * @param subscriptionDelay An Observable that triggers the subscription to the\n * source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n", "import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n *\n * A simple example with numbers\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .pipe(distinct())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * An example using the `keySelector` function\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo'},\n *   { age: 7, name: 'Bar'},\n *   { age: 5, name: 'Foo'}\n * )\n * .pipe(distinct(({ name }) => name))\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param keySelector Optional `function` to select which value you want to check as distinct.\n * @param flushes Optional `ObservableInput` for flushing the internal HashSet of the operator.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const distinctKeys = new Set();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const key = keySelector ? keySelector(value) : value;\n        if (!distinctKeys.has(key)) {\n          distinctKeys.add(key);\n          subscriber.next(value);\n        }\n      })\n    );\n\n    flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n", "import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n", "import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n", "import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n *\n * Emit only the third click event\n *\n * ```ts\n * import { fromEvent, elementAt } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return A function that returns an Observable that emits a single item, if\n * it is found. Otherwise, it will emit the default value if given. If not, it\n * emits an error.\n */\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      filter((v, i) => i === index),\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\n    );\n}\n", "/** prettier */\nimport { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ValueFromArray } from '../types';\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function endWith<T, A extends unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\n\nexport function endWith<T, A extends unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that will emit all values from the source, then synchronously emit\n * the provided value(s) immediately after the source completes.\n *\n * NOTE: Passing a last argument of a Scheduler is _deprecated_, and may result in incorrect\n * types in TypeScript.\n *\n * This is useful for knowing when an observable ends. Particularly when paired with an\n * operator like {@link takeUntil}\n *\n * ![](endWith.png)\n *\n * ## Example\n *\n * Emit values to know when an interval starts and stops. The interval will\n * stop when a user clicks anywhere on the document.\n *\n * ```ts\n * import { interval, map, fromEvent, startWith, takeUntil, endWith } from 'rxjs';\n *\n * const ticker$ = interval(5000).pipe(\n *   map(() => 'tick')\n * );\n *\n * const documentClicks$ = fromEvent(document, 'click');\n *\n * ticker$.pipe(\n *   startWith('interval started'),\n *   takeUntil(documentClicks$),\n *   endWith('interval ended by click')\n * )\n * .subscribe(x => console.log(x));\n *\n * // Result (assuming a user clicks after 15 seconds)\n * // 'interval started'\n * // 'tick'\n * // 'tick'\n * // 'tick'\n * // 'interval ended by click'\n * ```\n *\n * @see {@link startWith}\n * @see {@link concat}\n * @see {@link takeUntil}\n *\n * @param values Items you want the modified Observable to emit last.\n * @return A function that returns an Observable that emits all values from the\n * source, then synchronously emits the provided value(s) immediately after the\n * source completes.\n */\nexport function endWith<T>(...values: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...values)) as Observable<T>;\n}\n", "import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T>(\n  predicate: BooleanConstructor,\n  thisArg: any\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, boolean>;\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\n * otherwise emit false, then complete.</span>\n *\n * ![](every.png)\n *\n * ## Example\n *\n * A simple example emitting true if all elements are less than 5, false otherwise\n *\n * ```ts\n * import { of, every } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5, 6)\n *   .pipe(every(x => x < 5))\n *   .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return A function that returns an Observable of booleans that determines if\n * all items of the source Observable meet the condition specified.\n */\nexport function every<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          if (!predicate.call(thisArg, value, index++, source)) {\n            subscriber.next(false);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaustAll}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaustAll.svg)\n *\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(5)))\n * );\n * const result = higherOrder.pipe(exhaustAll());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable that takes a source of\n * Observables and propagates the first Observable exclusively until it\n * completes before subscribing to the next.\n */\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return exhaustMap(identity);\n}\n", "import { exhaustAll } from './exhaustAll';\n\n/**\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\n */\nexport const exhaust = exhaustAll;\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent: number | undefined,\n  scheduler: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n *\n * Start emitting the powers of two on every click, at most 10 of them\n *\n * ```ts\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   map(() => 1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10)\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return A function that returns an Observable that emits the source values\n * and also result of applying the projection function to each value emitted on\n * the output Observable and merging the results of the Observables obtained\n * from this transformation.\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent = Infinity,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>> {\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n  return operate((source, subscriber) =>\n    mergeInternals(\n      // General merge params\n      source,\n      subscriber,\n      project,\n      concurrent,\n\n      // onBeforeNext\n      undefined,\n\n      // Expand-specific\n      true, // Use expand path\n      scheduler // Inner subscription scheduler\n    )\n  );\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n", "import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n *\n * Emit the index of first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, findIndex } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n\nexport interface BasicGroupByOptions<K, T> {\n  element?: undefined;\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\n  connector?: () => SubjectLike<T>;\n}\n\nexport interface GroupByOptionsWithElement<K, E, T> {\n  element: (value: T) => E;\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\n  connector?: () => SubjectLike<E>;\n}\n\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\n\nexport function groupBy<T, K, E>(\n  key: (value: T) => K,\n  options: GroupByOptionsWithElement<K, E, T>\n): OperatorFunction<T, GroupedObservable<K, E>>;\n\nexport function groupBy<T, K extends T>(\n  key: (value: T) => value is K\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\n\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K>(\n  key: (value: T) => K,\n  element: void,\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the key function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the `key` field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the element function.\n *\n * ## Examples\n *\n * Group objects by `id` and return as array\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\n * // [{ id: 3, name: 'TSLint' }]\n * ```\n *\n * Pivot data on the `id` field\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id, { element: p => p.name }),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param key A function that extracts the key\n * for each item.\n * @param element A function that extracts the\n * return element for each item.\n * @param duration\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @param connector Factory function to create an\n * intermediate Subject through which grouped elements are emitted.\n * @return A function that returns an Observable that emits GroupedObservables,\n * each of which corresponds to a unique key value and each of which emits\n * those items from the source Observable that share that key value.\n *\n * @deprecated Use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n  connector?: () => Subject<R>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n// Impl\nexport function groupBy<T, K, R>(\n  keySelector: (value: T) => K,\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\n  connector?: () => SubjectLike<any>\n): OperatorFunction<T, GroupedObservable<K, R>> {\n  return operate((source, subscriber) => {\n    let element: ((value: any) => any) | void;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions as ((value: any) => any);\n    } else {\n      ({ duration, element, connector } = elementOrOptions);\n    }\n\n    // A lookup for the groups that we have so far.\n    const groups = new Map<K, SubjectLike<any>>();\n\n    // Used for notifying all groups and the subscriber in the same way.\n    const notify = (cb: (group: Observer<any>) => void) => {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    // Used to handle errors from the source, AND errors that occur during the\n    // next call from the source.\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\n\n    // The number of actively subscribed groups\n    let activeGroups = 0;\n\n    // Whether or not teardown was attempted on this subscription.\n    let teardownAttempted = false;\n\n    // Capturing a reference to this, because we need a handle to it\n    // in `createGroupedObservable` below. This is what we use to\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\n    // in cases where a user unsubscribes from the main resulting subscription, but\n    // still has groups from this subscription subscribed and would expect values from it\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\n    const groupBySourceSubscriber = new OperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Because we have to notify all groups of any errors that occur in here,\n        // we have to add our own try/catch to ensure that those errors are propagated.\n        // OperatorSubscriber will only send the error to the main subscriber.\n        try {\n          const key = keySelector(value);\n\n          let group = groups.get(key);\n          if (!group) {\n            // Create our group subject\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\n\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\n            // because the grouped observable has special semantics around reference counting\n            // to ensure we don't sever our connection to the source prematurely.\n            const grouped = createGroupedObservable(key, group);\n            subscriber.next(grouped);\n\n            if (duration) {\n              const durationSubscriber = createOperatorSubscriber(\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\n                // when the duration subscription is torn down. That is important, because then\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\n                // after the connection to the source has been severed, they will get an\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\n                group as any,\n                () => {\n                  // Our duration notified! We can complete the group.\n                  // The group will be removed from the map in the finalization phase.\n                  group!.complete();\n                  durationSubscriber?.unsubscribe();\n                },\n                // Completions are also sent to the group, but just the group.\n                undefined,\n                // Errors on the duration subscriber are sent to the group\n                // but only the group. They are not sent to the main subscription.\n                undefined,\n                // Finalization: Remove this group from our map.\n                () => groups.delete(key)\n              );\n\n              // Start our duration notifier.\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n            }\n          }\n\n          // Send the value to our group.\n          group.next(element ? element(value) : value);\n        } catch (err) {\n          handleError(err);\n        }\n      },\n      // Source completes.\n      () => notify((consumer) => consumer.complete()),\n      // Error from the source.\n      handleError,\n      // Free up memory.\n      // When the source subscription is _finally_ torn down, release the subjects and keys\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\n      // don't have to.\n      () => groups.clear(),\n      () => {\n        teardownAttempted = true;\n        // We only kill our subscription to the source if we have\n        // no active groups. As stated above, consider this scenario:\n        // source$.pipe(groupBy(fn), take(2)).\n        return activeGroups === 0;\n      }\n    );\n\n    // Subscribe to the source\n    source.subscribe(groupBySourceSubscriber);\n\n    /**\n     * Creates the actual grouped observable returned.\n     * @param key The key of the group\n     * @param groupSubject The subject that fuels the group\n     */\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\n      const result: any = new Observable<T>((groupSubscriber) => {\n        activeGroups++;\n        const innerSub = groupSubject.subscribe(groupSubscriber);\n        return () => {\n          innerSub.unsubscribe();\n          // We can kill the subscription to our source if we now have no more\n          // active groups subscribed, and a finalization was already attempted on\n          // the source.\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\n/**\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\n * contains a `key` property for the grouping.\n */\nexport interface GroupedObservable<K, T> extends Observable<T> {\n  /**\n   * The key value for the grouped notifications.\n   */\n  readonly key: K;\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { EMPTY } from '../observable/empty';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Waits for the source to complete, then emits the last N values from the source,\n * as specified by the `count` argument.\n *\n * ![](takeLast.png)\n *\n * `takeLast` results in an observable that will hold values up to `count` values in memory,\n * until the source completes. It then pushes all values in memory to the consumer, in the\n * order they were received from the source, then notifies the consumer that it is\n * complete.\n *\n * If for some reason the source completes before the `count` supplied to `takeLast` is reached,\n * all values received until that point are emitted, and then completion is notified.\n *\n * **Warning**: Using `takeLast` with an observable that never completes will result\n * in an observable that never emits a value.\n *\n * ## Example\n *\n * Take the last 3 values of an Observable with many values\n *\n * ```ts\n * import { range, takeLast } from 'rxjs';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return A function that returns an Observable that emits at most the last\n * `count` values emitted by the source Observable.\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        // This buffer will hold the values we are going to emit\n        // when the source completes. Since we only want to take the\n        // last N values, we can't emit until we're sure we're not getting\n        // any more values.\n        let buffer: T[] = [];\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              // Add the most recent value onto the end of our buffer.\n              buffer.push(value);\n              // If our buffer is now larger than the number of values we\n              // want to take, we remove the oldest value from the buffer.\n              count < buffer.length && buffer.shift();\n            },\n            () => {\n              // The source completed, we now know what are last values\n              // are, emit them in the order they were received.\n              for (const value of buffer) {\n                subscriber.next(value);\n              }\n              subscriber.complete();\n            },\n            // Errors are passed through to the consumer\n            undefined,\n            () => {\n              // During finalization release the values in our buffer.\n              buffer = null!;\n            }\n          )\n        );\n      });\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Notification } from '../Notification';\nimport { OperatorFunction, ObservableNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n *\n * Convert a faulty Observable to an Observable of Notifications\n *\n * ```ts\n * import { of, materialize, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n *\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return A function that returns an Observable that emits\n * {@link Notification} objects that wrap the original emissions from the\n * source Observable with metadata.\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          subscriber.next(Notification.createNext(value));\n        },\n        () => {\n          subscriber.next(Notification.createComplete());\n          subscriber.complete();\n        },\n        (err) => {\n          subscriber.next(Notification.createError(err));\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n *\n * Get the maximal value of a series of numbers\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(max())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 8\n * ```\n *\n * Use a comparer function to get the maximal item\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   max((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * largest value.\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\n}\n", "import { mergeMap } from './mergeMap';\n\n/**\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\n */\nexport const flatMap = mergeMap;\n", "import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n", "import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represents the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n *\n * Count the number of click events\n *\n * ```ts\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(map(() => 1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed)\n * );\n *\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n", "import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\n  });\n}\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { merge } from './merge';\n\n/**\n * Merge the values from all observables to a single observable result.\n *\n * Creates an observable, that when subscribed to, subscribes to the source\n * observable, and all other sources provided as arguments. All values from\n * every source are emitted from the resulting subscription.\n *\n * When all sources complete, the resulting observable will complete.\n *\n * When any source errors, the resulting observable will error.\n *\n * ## Example\n *\n * Joining all outputs from multiple user input event streams\n *\n * ```ts\n * import { fromEvent, map, mergeWith } from 'rxjs';\n *\n * const clicks$ = fromEvent(document, 'click').pipe(map(() => 'click'));\n * const mousemoves$ = fromEvent(document, 'mousemove').pipe(map(() => 'mousemove'));\n * const dblclicks$ = fromEvent(document, 'dblclick').pipe(map(() => 'dblclick'));\n *\n * mousemoves$\n *   .pipe(mergeWith(clicks$, dblclicks$))\n *   .subscribe(x => console.log(x));\n *\n * // result (assuming user interactions)\n * // 'mousemove'\n * // 'mousemove'\n * // 'mousemove'\n * // 'click'\n * // 'click'\n * // 'dblclick'\n * ```\n *\n * @see {@link merge}\n *\n * @param otherSources the sources to combine the current source with.\n * @return A function that returns an Observable that merges the values from\n * all given Observables.\n */\nexport function mergeWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return merge(...otherSources);\n}\n", "import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n *\n * Get the minimal value of a series of numbers\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(min())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 2\n * ```\n *\n * Use a comparer function to get the minimal item\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   min((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Bar'\n * ```\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * smallest value.\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { onErrorResumeNext as oERNCreate } from '../observable/onErrorResumeNext';\n\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables, subscribes to next one on error or complete.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { of, onErrorResumeNext, map } from 'rxjs';\n *\n * of(1, 2, 3, 0)\n *   .pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *\n *       return 10 / x;\n *     }),\n *     onErrorResumeNext(of(1, 2, 3))\n *   )\n *   .subscribe({\n *     next: val => console.log(val),\n *     error: err => console.log(err),          // Will never be called.\n *     complete: () => console.log('that\\'s it!')\n *   });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'that's it!'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables passed either directly or as an array.\n * @return A function that returns an Observable that emits values from source\n * Observable, but - if it errors - subscribes to the next passed Observable\n * and so on, until it completes or runs out of Observables.\n */\nexport function onErrorResumeNextWith<T, A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  // For some reason, TS 4.1 RC gets the inference wrong here and infers the\n  // result to be `A[number][]` - completely dropping the ObservableInput part\n  // of the type. This makes no sense whatsoever. As a workaround, the type is\n  // asserted explicitly.\n  const nextSources = argsOrArgArray(sources) as unknown as ObservableInputTuple<A>;\n\n  return (source) => oERNCreate(source, ...nextSources);\n}\n\n/**\n * @deprecated Renamed. Use {@link onErrorResumeNextWith} instead. Will be removed in v8.\n */\nexport const onErrorResumeNext = onErrorResumeNextWith;\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n", "import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n", "import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\n *\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishBehavior(initValue))` is equivalent to\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported the selector function.\n  return (source) => {\n    const subject = new BehaviorSubject<T>(initialValue);\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n", "import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\n *\n * const connectable = <ConnectableObservable<number>>interval(1000)\n *   .pipe(\n *     tap(x => console.log('side effect', x)),\n *     take(3),\n *     publishLast()\n *   );\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. A', x),\n *   error: err => console.log('Sub. A Error', err),\n *   complete: () => console.log('Sub. A Complete')\n * });\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. B', x),\n *   error: err => console.log('Sub. B Error', err),\n *   complete: () => console.log('Sub. B Complete')\n * });\n *\n * connectable.connect();\n *\n * // Results:\n * // 'side effect 0'   - after one second\n * // 'side effect 1'   - after two seconds\n * // 'side effect 2'   - after three seconds\n * // 'Sub. A 2'        - immediately after 'side effect 2'\n * // 'Sub. B 2'\n * // 'Sub. A Complete'\n * // 'Sub. B Complete'\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return A function that returns an Observable that emits elements of a\n * sequence produced by multicasting the source sequence.\n * @deprecated Will be removed in v8. To create a connectable observable with an\n * {@link AsyncSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishLast())` is equivalent to\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\n * `source.pipe(publishLast(), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\n  return (source) => {\n    const subject = new AsyncSubject<T>();\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n", "import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n", "import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n", "import { Subscription } from '../Subscription';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\n\nexport interface RepeatConfig {\n  /**\n   * The number of times to repeat the source. Defaults to `Infinity`.\n   */\n  count?: number;\n\n  /**\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\n   * If a function, it will provide the number of times the source has been subscribed to,\n   * and the return value should be a valid observable input that will notify when the source\n   * should be repeated. If the notifier observable is empty, the result will complete.\n   */\n  delay?: number | ((count: number) => ObservableInput<any>);\n}\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\n * as it can be used to restart a source again from scratch.\n *\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\n * `repeat` will resubscribe if the source completes.\n *\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\n *\n * - `repeat(0)` returns an empty observable\n * - `repeat()` will repeat forever\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\n *\n * ## Example\n *\n * Repeat a message stream\n *\n * ```ts\n * import { of, repeat } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const result = source.pipe(repeat(3));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results\n * // 'Repeat message'\n * // 'Repeat message'\n * // 'Repeat message'\n * ```\n *\n * Repeat 3 values, 2 times\n *\n * ```ts\n * import { interval, take, repeat } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(take(3), repeat(2));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Defining two complex repeats with delays on the same source.\n * Note that the second repeat cannot be called until the first\n * repeat as exhausted it's count.\n *\n * ```ts\n * import { defer, of, repeat } from 'rxjs';\n *\n * const source = defer(() => {\n *    return of(`Hello, it is ${new Date()}`)\n * });\n *\n * source.pipe(\n *    // Repeat 3 times with a delay of 1 second between repetitions\n *    repeat({\n *      count: 3,\n *      delay: 1000,\n *    }),\n *\n *    // *Then* repeat forever, but with an exponential step-back\n *    // maxing out at 1 minute.\n *    repeat({\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\n *    })\n * )\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n */\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\n  let count = Infinity;\n  let delay: RepeatConfig['delay'];\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      ({ count = Infinity, delay } = countOrConfig);\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let sourceSub: Subscription | null;\n\n        const resubscribe = () => {\n          sourceSub?.unsubscribe();\n          sourceSub = null;\n          if (delay != null) {\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n              notifierSubscriber.unsubscribe();\n              subscribeToSource();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            subscribeToSource();\n          }\n        };\n\n        const subscribeToSource = () => {\n          let syncUnsub = false;\n          sourceSub = source.subscribe(\n            createOperatorSubscriber(subscriber, undefined, () => {\n              if (++soFar < count) {\n                if (sourceSub) {\n                  resubscribe();\n                } else {\n                  syncUnsub = true;\n                }\n              } else {\n                subscriber.complete();\n              }\n            })\n          );\n\n          if (syncUnsub) {\n            resubscribe();\n          }\n        };\n\n        subscribeToSource();\n      });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n *\n * Repeat a message stream on click\n *\n * ```ts\n * import { of, fromEvent, repeatWhen } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * const result = source.pipe(repeatWhen(() => documentClick$));\n *\n * result.subscribe(data => console.log(data))\n * ```\n *\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param notifier Function that receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of a `complete`.\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s {@link RepeatConfig#delay delay} option instead.\n * Instead of `repeatWhen(() => notify$)`, use: `repeat({ delay: () => notify$ })`.\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let completions$: Subject<void>;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n\n    /**\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\n     */\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    /**\n     * Gets the subject to send errors through. If it doesn't exist,\n     * we know we need to setup the notifier.\n     */\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\n        // In the main subscription -- in `subscribeForRepeatWhen`.\n        innerFrom(notifier(completions$)).subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            () => {\n              if (innerSub) {\n                subscribeForRepeatWhen();\n              } else {\n                // If we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                syncResub = true;\n              }\n            },\n            () => {\n              isNotifierComplete = true;\n              checkComplete();\n            }\n          )\n        );\n      }\n      return completions$;\n    };\n\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, () => {\n          isMainComplete = true;\n          // Check to see if we are complete, and complete if so.\n          // If we are not complete. Get the subject. This calls the `notifier` function.\n          // If that function fails, it will throw and `.next()` will not be reached on this\n          // line. The thrown error is caught by the _complete handler in this\n          // `OperatorSubscriber` and handled appropriately.\n          !checkComplete() && getCompletionSubject().next();\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        // It is important to null this out. Not only to free up memory, but\n        // to make sure code above knows we are in a subscribing state to\n        // handle synchronous resubscription.\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flags.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRepeatWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRepeatWhen();\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the `ObservableInput` returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param notifier Function that receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n * Will be removed in v9 or v10. Use {@link retry}'s {@link RetryConfig#delay delay} option instead.\n * Instead of `retryWhen(() => notify$)`, use: `retry({ delay: () => notify$ })`.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            innerFrom(notifier(errors$)).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` `ObservableInput` emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` `ObservableInput` emits a value, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n *\n * On every click, sample the most recent `seconds` timer\n *\n * ```ts\n * import { fromEvent, interval, sample } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param notifier The `ObservableInput` to use for sampling the\n * source Observable.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable whenever the notifier\n * Observable emits value or completes.\n */\nexport function sample<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        hasValue = true;\n        lastValue = value;\n      })\n    );\n    innerFrom(notifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          if (hasValue) {\n            hasValue = false;\n            const value = lastValue!;\n            lastValue = null;\n            subscriber.next(value);\n          }\n        },\n        noop\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n *\n * Every second, emit the most recent click at most once\n *\n * ```ts\n * import { fromEvent, sampleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so far (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to source observable and `compareTo` `ObservableInput` (that internally\n * gets converted to an observable) and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n *\n * Figure out if the Konami code matches\n *\n * ```ts\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param compareTo The `ObservableInput` sequence to compare the source sequence to.\n * @param comparator An optional function to compare each value pair.\n *\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided `ObservableInput` were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: ObservableInput<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = createOperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in its buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubjectLike, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\n\nexport interface ShareConfig<T> {\n  /**\n   * The factory used to create the subject that will connect the source observable to\n   * multicast consumers.\n   */\n  connector?: () => SubjectLike<T>;\n  /**\n   * If `true`, the resulting observable will reset internal state on error from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"retried\" in the event of an error.\n   * If `false`, when an error comes from the source it will push the error into the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent retries\n   * or resubscriptions will resubscribe to that same subject. In all cases, RxJS subjects will emit the same error again, however\n   * {@link ReplaySubject} will also push its buffered values before pushing the error.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnError?: boolean | ((error: any) => ObservableInput<any>);\n  /**\n   * If `true`, the resulting observable will reset internal state on completion from source and return to a \"cold\" state. This\n   * allows the resulting observable to be \"repeated\" after it is done.\n   * If `false`, when the source completes, it will push the completion through the connecting subject, and the subject\n   * will remain the connecting subject, meaning the resulting observable will not go \"cold\" again, and subsequent repeats\n   * or resubscriptions will resubscribe to that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnComplete?: boolean | (() => ObservableInput<any>);\n  /**\n   * If `true`, when the number of subscribers to the resulting observable reaches zero due to those subscribers unsubscribing, the\n   * internal state will be reset and the resulting observable will return to a \"cold\" state. This means that the next\n   * time the resulting observable is subscribed to, a new subject will be created and the source will be subscribed to\n   * again.\n   * If `false`, when the number of subscribers to the resulting observable reaches zero due to unsubscription, the subject\n   * will remain connected to the source, and new subscriptions to the result will be connected through that same subject.\n   * It is also possible to pass a notifier factory returning an `ObservableInput` instead which grants more fine-grained\n   * control over how and when the reset should happen. This allows behaviors like conditional or delayed resets.\n   */\n  resetOnRefCountZero?: boolean | (() => ObservableInput<any>);\n}\n\nexport function share<T>(): MonoTypeOperatorFunction<T>;\n\nexport function share<T>(options: ShareConfig<T>): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * The subscription to the underlying source Observable can be reset (unsubscribe and resubscribe for new subscribers),\n * if the subscriber count to the shared observable drops to 0, or if the source Observable errors or completes. It is\n * possible to use notifier factories for the resets to allow for behaviors like conditional or delayed resets. Please\n * note that resetting on error or complete of the source Observable does not behave like a transparent retry or restart\n * of the source because the error or complete will be forwarded to all subscribers and their subscription will be\n * closed. Only new subscribers after a reset on error or complete happened will cause a fresh subscription to the\n * source. To achieve transparent retries or restarts pipe the source through appropriate operators before sharing.\n *\n * ![](share.png)\n *\n * ## Example\n *\n * Generate new multicast Observable from the `source` Observable value\n *\n * ```ts\n * import { interval, tap, map, take, share } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   tap(x => console.log('Processing: ', x)),\n *   map(x => x * x),\n *   take(6),\n *   share()\n * );\n *\n * source.subscribe(x => console.log('subscription 1: ', x));\n * source.subscribe(x => console.log('subscription 2: ', x));\n *\n * // Logs:\n * // Processing: 0\n * // subscription 1: 0\n * // subscription 2: 0\n * // Processing: 1\n * // subscription 1: 1\n * // subscription 2: 1\n * // Processing: 2\n * // subscription 1: 4\n * // subscription 2: 4\n * // Processing: 3\n * // subscription 1: 9\n * // subscription 2: 9\n * // Processing: 4\n * // subscription 1: 16\n * // subscription 2: 16\n * // Processing: 5\n * // subscription 1: 25\n * // subscription 2: 25\n * ```\n *\n * ## Example with notifier factory: Delayed reset\n *\n * ```ts\n * import { interval, take, share, timer } from 'rxjs';\n *\n * const source = interval(1000).pipe(\n *   take(3),\n *   share({\n *     resetOnRefCountZero: () => timer(1000)\n *   })\n * );\n *\n * const subscriptionOne = source.subscribe(x => console.log('subscription 1: ', x));\n * setTimeout(() => subscriptionOne.unsubscribe(), 1300);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 2: ', x)), 1700);\n *\n * setTimeout(() => source.subscribe(x => console.log('subscription 3: ', x)), 5000);\n *\n * // Logs:\n * // subscription 1:  0\n * // (subscription 1 unsubscribes here)\n * // (subscription 2 subscribes here ~400ms later, source was not reset)\n * // subscription 2:  1\n * // subscription 2:  2\n * // (subscription 2 unsubscribes here)\n * // (subscription 3 subscribes here ~2000ms later, source did reset before)\n * // subscription 3:  0\n * // subscription 3:  1\n * // subscription 3:  2\n * ```\n *\n * @see {@link shareReplay}\n *\n * @return A function that returns an Observable that mirrors the source.\n */\nexport function share<T>(options: ShareConfig<T> = {}): MonoTypeOperatorFunction<T> {\n  const { connector = () => new Subject<T>(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n  // It's necessary to use a wrapper here, as the _operator_ must be\n  // referentially transparent. Otherwise, it cannot be used in calls to the\n  // static `pipe` function - to create a partial pipeline.\n  //\n  // The _operator function_ - the function returned by the _operator_ - will\n  // not be referentially transparent - as it shares its source - but the\n  // _operator function_ is called when the complete pipeline is composed via a\n  // call to a source observable's `pipe` method - not when the static `pipe`\n  // function is called.\n  return (wrapperSource) => {\n    let connection: SafeSubscriber<T> | undefined;\n    let resetConnection: Subscription | undefined;\n    let subject: SubjectLike<T> | undefined;\n    let refCount = 0;\n    let hasCompleted = false;\n    let hasErrored = false;\n\n    const cancelReset = () => {\n      resetConnection?.unsubscribe();\n      resetConnection = undefined;\n    };\n    // Used to reset the internal state to a \"cold\"\n    // state, as though it had never been subscribed to.\n    const reset = () => {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    const resetAndUnsubscribe = () => {\n      // We need to capture the connection before\n      // we reset (if we need to reset).\n      const conn = connection;\n      reset();\n      conn?.unsubscribe();\n    };\n\n    return operate<T, T>((source, subscriber) => {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      // Create the subject if we don't have one yet. Grab a local reference to\n      // it as well, which avoids non-null assertions when using it and, if we\n      // connect to it now, then error/complete need a reference after it was\n      // reset.\n      const dest = (subject = subject ?? connector());\n\n      // Add the finalization directly to the subscriber - instead of returning it -\n      // so that the handling of the subscriber's unsubscription will be wired\n      // up _before_ the subscription to the source occurs. This is done so that\n      // the assignment to the source connection's `closed` property will be seen\n      // by synchronous firehose sources.\n      subscriber.add(() => {\n        refCount--;\n\n        // If we're resetting on refCount === 0, and it's 0, we only want to do\n        // that on \"unsubscribe\", really. Resetting on error or completion is a different\n        // configuration.\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n\n      // The following line adds the subscription to the subscriber passed.\n      // Basically, `subscriber === dest.subscribe(subscriber)` is `true`.\n      dest.subscribe(subscriber);\n\n      if (\n        !connection &&\n        // Check this shareReplay is still activate - it can be reset to 0\n        // and be \"unsubscribed\" _before_ it actually subscribes.\n        // If we were to subscribe then, it'd leak and get stuck.\n        refCount > 0\n      ) {\n        // We need to create a subscriber here - rather than pass an observer and\n        // assign the returned subscription to connection - because it's possible\n        // for reentrant subscriptions to the shared observable to occur and in\n        // those situations we want connection to be already-assigned so that we\n        // don't create another connection to the source.\n        connection = new SafeSubscriber({\n          next: (value) => dest.next(value),\n          error: (err) => {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: () => {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          },\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset<T extends unknown[] = never[]>(\n  reset: () => void,\n  on: boolean | ((...args: T) => ObservableInput<any>),\n  ...args: T\n): Subscription | undefined {\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  const onSubscriber = new SafeSubscriber({\n    next: () => {\n      onSubscriber.unsubscribe();\n      reset();\n    },\n  });\n\n  return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n", "import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only `name` beginning with `'B'`\n *\n * ```ts\n * import { of, single } from 'rxjs';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe(x => console.log(x));\n * // Emits 'Ben'\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * than one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of, skipLast } from 'rxjs';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\n * requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\n * emitting a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\n * within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the `notifier` Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n", "import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\n *\n * ## Example\n *\n * Skip some super heroes\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n * // Skip the heroes until SuperGirl\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\n * // output: SuperGirl, Black Canary\n * example.subscribe(femaleHero => console.log(femaleHero));\n * ```\n *\n * Skip values from the array until index 5\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\n * // output: 6, 7, 9, 10\n * example.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return A function that returns an Observable that begins emitting items\n * emitted by the source Observable when the specified predicate becomes false.\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\n    );\n  });\n}\n", "import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n *\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one\n *\n * ```ts\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map(() => interval(1000)));\n *\n * source\n *   .pipe(switchAll())\n *   .subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 0\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // 0\n * // 1\n * // 2\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n *\n * @return A function that returns an Observable that converts a higher-order\n * Observable into a first-order Observable producing values only from the most\n * recent Observable sequence.\n */\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return switchMap(identity);\n}\n", "import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n", "import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\n\n// TODO: Generate a marble diagram for these docs.\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, emitting values\n * only from the most recently returned Observable.\n *\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\n * Observable returned by the accumulator is merged into the outer Observable.</span>\n *\n * @see {@link scan}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @return A function that returns an observable of the accumulated values.\n */\nexport function switchScan<T, R, O extends ObservableInput<any>>(\n  accumulator: (acc: R, value: T, index: number) => O,\n  seed: R\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    // The state we will keep up to date to pass into our\n    // accumulator function at each new value from the source.\n    let state = seed;\n\n    // Use `switchMap` on our `source` to do the work of creating\n    // this operator. Note the backwards order here of `switchMap()(source)`\n    // to avoid needing to use `pipe` unnecessarily\n    switchMap(\n      // On each value from the source, call the accumulator with\n      // our previous state, the value and the index.\n      (value: T, index) => accumulator(state, value, index),\n      // Using the deprecated result selector here as a dirty trick\n      // to update our state with the flattened value.\n      (_, innerValue) => ((state = innerValue), innerValue)\n    )(source).subscribe(subscriber);\n\n    return () => {\n      // Release state on finalization\n      state = null!;\n    };\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n", "import { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * An object interface used by {@link throttle} or {@link throttleTime} that ensure\n * configuration options of these operators.\n *\n * @see {@link throttle}\n * @see {@link throttleTime}\n */\nexport interface ThrottleConfig {\n  /**\n   * If `true`, the resulting Observable will emit the first value from the source\n   * Observable at the **start** of the \"throttling\" process (when starting an\n   * internal timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the first value from the source Observable at the\n   * start of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `true`.\n   */\n  leading?: boolean;\n  /**\n   * If `true`, the resulting Observable will emit the last value from the source\n   * Observable at the **end** of the \"throttling\" process (when ending an internal\n   * timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the last value from the source Observable at the\n   * end of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `false`.\n   */\n  trailing?: boolean;\n}\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.svg)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttle, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(() => interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function that receives a value from the source\n * Observable, for computing the silencing duration for each source value,\n * returned as an `ObservableInput`.\n * @param config A configuration object to define `leading` and `trailing`\n * behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttle<T>(durationSelector: (value: T) => ObservableInput<any>, config?: ThrottleConfig): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const { leading = true, trailing = false } = config ?? {};\n    let hasValue = false;\n    let sendValue: T | null = null;\n    let throttled: Subscription | null = null;\n    let isComplete = false;\n\n    const endThrottling = () => {\n      throttled?.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    const startThrottle = (value: T) =>\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n\n    const send = () => {\n      if (hasValue) {\n        // Ensure we clear out our value and hasValue flag\n        // before we emit, otherwise reentrant code can cause\n        // issues here.\n        hasValue = false;\n        const value = sendValue!;\n        sendValue = null;\n        // Emit the value.\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Regarding the presence of throttled.closed in the following\n        // conditions, if a synchronous duration selector is specified - weird,\n        // but legal - an already-closed subscription will be assigned to\n        // throttled, so the subscription's closed property needs to be checked,\n        // too.\n        (value) => {\n          hasValue = true;\n          sendValue = value;\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        },\n        () => {\n          isComplete = true;\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { throttle, ThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * ### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config A configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config?: ThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n", "import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\nimport { timeout } from './timeout';\n\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n\n/**\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\n * and switch the subscription to another observable.\n *\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\n *\n * Useful in cases where:\n *\n * - You want to switch to a different source that may be faster.\n * - You want to notify a user that the data stream is slow.\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\n *   by the default usage of {@link timeout}.\n *\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\n * it will unsubscribe from the source and switch the subscription to another observable.\n *\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\n *\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\n * the `first` configuration to get the same effect.\n *\n * ## Examples\n *\n * Fallback to a faster observable\n *\n * ```ts\n * import { interval, timeoutWith } from 'rxjs';\n *\n * const slow$ = interval(1000);\n * const faster$ = interval(500);\n *\n * slow$\n *   .pipe(timeoutWith(900, faster$))\n *   .subscribe(console.log);\n * ```\n *\n * Emit your own custom timeout error\n *\n * ```ts\n * import { interval, timeoutWith, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(1000);\n *\n * slow$\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\n *   .subscribe({\n *     error: err => console.error(err.message)\n *   });\n * ```\n *\n * @see {@link timeout}\n *\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\n * @param withObservable The observable to switch to when timeout occurs.\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it starts emitting values\n * from the `ObservableInput` passed as a second parameter.\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\n */\nexport function timeoutWith<T, R>(\n  due: number | Date,\n  withObservable: ObservableInput<R>,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T | R> {\n  let first: number | Date | undefined;\n  let each: number | undefined;\n  let _with: () => ObservableInput<R>;\n  scheduler = scheduler ?? async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = () => withObservable;\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout<T, ObservableInput<R>>({\n    first,\n    each,\n    scheduler,\n    with: _with,\n  });\n}\n", "import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n", "import { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * `windowBoundaries` emits an item. `windowBoundaries` can be any type that\n * `ObservableInput` accepts. It internally gets converted to an Observable.\n * Because each window is an Observable, the output is a higher-order Observable.\n *\n * ## Example\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const sec = interval(1000);\n * const result = clicks.pipe(\n *   window(sec),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param windowBoundaries An `ObservableInput` that completes the\n * previous window and starts a new window.\n * @return A function that returns an Observable of windows, which are\n * Observables emitting values of the source Observable.\n */\nexport function window<T>(windowBoundaries: ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let windowSubject: Subject<T> = new Subject<T>();\n\n    subscriber.next(windowSubject.asObservable());\n\n    const errorHandler = (err: any) => {\n      windowSubject.error(err);\n      subscriber.error(err);\n    };\n\n    // Subscribe to our source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => windowSubject?.next(value),\n        () => {\n          windowSubject.complete();\n          subscriber.complete();\n        },\n        errorHandler\n      )\n    );\n\n    // Subscribe to the window boundaries.\n    innerFrom(windowBoundaries).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          windowSubject.complete();\n          subscriber.next((windowSubject = new Subject()));\n        },\n        noop,\n        errorHandler\n      )\n    );\n\n    return () => {\n      // Unsubscribing the subject ensures that anyone who has captured\n      // a reference to this window that tries to use it after it can\n      // no longer get values from the source will get an ObjectUnsubscribedError.\n      windowSubject?.unsubscribe();\n      windowSubject = null!;\n    };\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n *\n * Ignore every 3rd click event, starting from the first one\n *\n * ```ts\n * import { fromEvent, windowCount, map, skip, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n *\n * ```ts\n * import { fromEvent, windowCount, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll() // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of windows, which in turn are\n * Observable of values.\n */\nexport function windowCount<T>(windowSize: number, startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  const startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n\n  return operate((source, subscriber) => {\n    let windows = [new Subject<T>()];\n    let starts: number[] = [];\n    let count = 0;\n\n    // Open the first window.\n    subscriber.next(windows[0].asObservable());\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Emit the value through all current windows.\n          // We don't need to create a new window yet, we\n          // do that as soon as we close one.\n          for (const window of windows) {\n            window.next(value);\n          }\n          // Here we're using the size of the window array to figure\n          // out if the oldest window has emitted enough values. We can do this\n          // because the size of the window array is a function of the values\n          // seen by the subscription. If it's time to close it, we complete\n          // it and remove it.\n          const c = count - windowSize + 1;\n          if (c >= 0 && c % startEvery === 0) {\n            windows.shift()!.complete();\n          }\n\n          // Look to see if the next count tells us it's time to open a new window.\n          // TODO: We need to figure out if this really makes sense. We're technically\n          // emitting windows *before* we have a value to emit them for. It's probably\n          // more expected that we should be emitting the window when the start\n          // count is reached -- not before.\n          if (++count % startEvery === 0) {\n            const window = new Subject<T>();\n            windows.push(window);\n            subscriber.next(window.asObservable());\n          }\n        },\n        () => {\n          while (windows.length > 0) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        (err) => {\n          while (windows.length > 0) {\n            windows.shift()!.error(err);\n          }\n          subscriber.error(err);\n        },\n        () => {\n          starts = null!;\n          windows = null!;\n        }\n      )\n    );\n  });\n}\n", "import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number | null | void,\n  maxWindowSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with `maxWindowCount` instead of `take`\n *\n * ```ts\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\n *   mergeAll()                 // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\n * @param windowCreationInterval The interval at which to start new\n * windows.\n * @param maxWindowSize Max number of\n * values each window can emit before completion.\n * @param scheduler The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active windows, their related subscriptions, and removal functions.\n    let windowRecords: WindowRecord<T>[] | null = [];\n    // If true, it means that every time we close a window, we want to start a new window.\n    // This is only really used for when *just* the time span is passed.\n    let restartOnClose = false;\n\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\n      const { window, subs } = record;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    /**\n     * Called every time we start a new window. This also does\n     * the work of scheduling the job to close the window.\n     */\n    const startWindow = () => {\n      if (windowRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const window = new Subject<T>();\n        const record = {\n          window,\n          subs,\n          seen: 0,\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      // The user passed both a windowTimeSpan (required), and a creation interval\n      // That means we need to start new window on the interval, and those windows need\n      // to wait the required time span before completing.\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    /**\n     * We need to loop over a copy of the window records several times in this operator.\n     * This is to save bytes over the wire more than anything.\n     * The reason we copy the array is that reentrant code could mutate the array while\n     * we are iterating over it.\n     */\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\n\n    /**\n     * Used to notify all of the windows and the subscriber in the same way\n     * in the error and complete handlers.\n     */\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\n      loop(({ window }) => cb(window));\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Notify all windows of the value.\n          loop((record) => {\n            record.window.next(value);\n            // If the window is over the max size, we need to close it.\n            maxWindowSize <= ++record.seen && closeWindow(record);\n          });\n        },\n        // Complete the windows and the downstream subscriber and clean up.\n        () => terminate((consumer) => consumer.complete()),\n        // Notify the windows and the downstream subscriber of the error and clean up.\n        (err) => terminate((consumer) => consumer.error(err))\n      )\n    );\n\n    // Additional finalization. This will be called when the\n    // destination tears down. Other finalizations are registered implicitly\n    // above via subscription.\n    return () => {\n      // Ensure that the buffer is released.\n      windowRecords = null!;\n    };\n  });\n}\n\ninterface WindowRecord<T> {\n  seen: number;\n  window: Subject<T>;\n  subs: Subscription;\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, windowToggle, EMPTY, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits a next notification, signals that the\n * associated window should complete.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowToggle<T, O>(\n  openings: ObservableInput<O>,\n  closingSelector: (openValue: O) => ObservableInput<any>\n): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    const windows: Subject<T>[] = [];\n\n    const handleError = (err: any) => {\n      while (0 < windows.length) {\n        windows.shift()!.error(err);\n      }\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (openValue) => {\n          const window = new Subject<T>();\n          windows.push(window);\n          const closingSubscription = new Subscription();\n          const closeWindow = () => {\n            arrRemove(windows, window);\n            window.complete();\n            closingSubscription.unsubscribe();\n          };\n\n          let closingNotifier: Observable<any>;\n          try {\n            closingNotifier = innerFrom(closingSelector(openValue));\n          } catch (err) {\n            handleError(err);\n            return;\n          }\n\n          subscriber.next(window.asObservable());\n\n          closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        },\n        noop\n      )\n    );\n\n    // Subscribe to the source to get things started.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Copy the windows array before we emit to\n          // make sure we don't have issues with reentrant code.\n          const windowsCopy = windows.slice();\n          for (const window of windowsCopy) {\n            window.next(value);\n          }\n        },\n        () => {\n          // Complete all of our windows before we complete.\n          while (0 < windows.length) {\n            windows.shift()!.complete();\n          }\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Add this finalization so that all window subjects are\n          // disposed of. This way, if a user tries to subscribe\n          // to a window *after* the outer subscription has been unsubscribed,\n          // they will get an error, instead of waiting forever to\n          // see if a value arrives.\n          while (0 < windows.length) {\n            windows.shift()!.unsubscribe();\n          }\n        }\n      )\n    );\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n *\n * Emit only the first two clicks events in every window of [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let window: Subject<T> | null;\n    let closingSubscriber: Subscriber<any> | undefined;\n\n    /**\n     * When we get an error, we have to notify both the\n     * destination subscriber and the window.\n     */\n    const handleError = (err: any) => {\n      window!.error(err);\n      subscriber.error(err);\n    };\n\n    /**\n     * Called every time we need to open a window.\n     * Recursive, as it will start the closing notifier, which\n     * inevitably *should* call openWindow -- but may not if\n     * it is a \"never\" observable.\n     */\n    const openWindow = () => {\n      // We need to clean up our closing subscription,\n      // we only cared about the first next or complete notification.\n      closingSubscriber?.unsubscribe();\n\n      // Close our window before starting a new one.\n      window?.complete();\n\n      // Start the new window.\n      window = new Subject<T>();\n      subscriber.next(window.asObservable());\n\n      // Get our closing notifier.\n      let closingNotifier: Observable<any>;\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      // Subscribe to the closing notifier, be sure\n      // to capture the subscriber (aka Subscription)\n      // so we can clean it up when we close the window\n      // and open a new one.\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n    };\n\n    // Start the first window.\n    openWindow();\n\n    // Subscribe to the source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => window!.next(value),\n        () => {\n          // The source completed, close the window and complete.\n          window!.complete();\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Be sure to clean up our closing subscription\n          // when this tears down.\n          closingSubscriber?.unsubscribe();\n          window = null!;\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\n\nexport function withLatestFrom<T, O extends unknown[]>(...inputs: [...ObservableInputTuple<O>]): OperatorFunction<T, [T, ...O]>;\n\nexport function withLatestFrom<T, O extends unknown[], R>(\n  ...inputs: [...ObservableInputTuple<O>, (...value: [T, ...O]) => R]\n): OperatorFunction<T, R>;\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n *\n * On every click event, emit an array with the latest timer event plus the click event\n *\n * ```ts\n * import { fromEvent, interval, withLatestFrom } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return A function that returns an Observable of projected values from the\n * most recent values from each input Observable, or an array of the most\n * recent values from each input Observable.\n */\nexport function withLatestFrom<T, R>(...inputs: any[]): OperatorFunction<T, R | any[]> {\n  const project = popResultSelector(inputs) as ((...args: any[]) => R) | undefined;\n\n  return operate((source, subscriber) => {\n    const len = inputs.length;\n    const otherValues = new Array(len);\n    // An array of whether or not the other sources have emitted. Matched with them by index.\n    // TODO: At somepoint, we should investigate the performance implications here, and look\n    // into using a `Set()` and checking the `size` to see if we're ready.\n    let hasValue = inputs.map(() => false);\n    // Flipped true when we have at least one value from all other sources and\n    // we are ready to start emitting values.\n    let ready = false;\n\n    // Other sources. Note that here we are not checking `subscriber.closed`,\n    // this causes all inputs to be subscribed to, even if nothing can be emitted\n    // from them. This is an important distinction because subscription constitutes\n    // a side-effect.\n    for (let i = 0; i < len; i++) {\n      innerFrom(inputs[i]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            otherValues[i] = value;\n            if (!ready && !hasValue[i]) {\n              // If we're not ready yet, flag to show this observable has emitted.\n              hasValue[i] = true;\n              // Intentionally terse code.\n              // If all of our other observables have emitted, set `ready` to `true`,\n              // so we know we can start emitting values, then clean up the `hasValue` array,\n              // because we don't need it anymore.\n              (ready = hasValue.every(identity)) && (hasValue = null!);\n            }\n          },\n          // Completing one of the other sources has\n          // no bearing on the completion of our result.\n          noop\n        )\n      );\n    }\n\n    // Source subscription\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        if (ready) {\n          // We have at least one value from the other sources. Go ahead and emit.\n          const values = [value, ...otherValues];\n          subscriber.next(project ? project(...values) : values);\n        }\n      })\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n", "import { zip as zipStatic } from '../observable/zip';\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { operate } from '../util/lift';\n\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  otherInputsAndProject: [...ObservableInputTuple<A>],\n  project: (...values: Cons<T, A>) => R\n): OperatorFunction<T, R>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\nexport function zip<T, A extends readonly unknown[], R>(\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\n): OperatorFunction<T, R>;\n\n/**\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\n */\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\n  return operate((source, subscriber) => {\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\n  });\n}\n", "import { ObservableInputTuple, OperatorFunction, Cons } from '../types';\nimport { zip } from './zip';\n\n/**\n * Subscribes to the source, and the observable inputs provided as arguments, and combines their values, by index, into arrays.\n *\n * What is meant by \"combine by index\": The first value from each will be made into a single array, then emitted,\n * then the second value from each will be combined into a single array and emitted, then the third value\n * from each will be combined into a single array and emitted, and so on.\n *\n * This will continue until it is no longer able to combine values of the same index into an array.\n *\n * After the last value from any one completed source is emitted in an array, the resulting observable will complete,\n * as there is no way to continue \"zipping\" values together by index.\n *\n * Use-cases for this operator are limited. There are memory concerns if one of the streams is emitting\n * values at a much faster rate than the others. Usage should likely be limited to streams that emit\n * at a similar pace, or finite streams of known length.\n *\n * In many cases, authors want `combineLatestWith` and not `zipWith`.\n *\n * @param otherInputs other observable inputs to collate values from.\n * @return A function that returns an Observable that emits items by index\n * combined from the source Observable and provided Observables, in form of an\n * array.\n */\nexport function zipWith<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>> {\n  return zip(...otherInputs);\n}\n", "//////////////////////////////////////////////////////////\n// Here we need to reference our other deep imports\n// so VS code will figure out where they are\n// see conversation here:\n// https://github.com/microsoft/TypeScript/issues/43034\n//////////////////////////////////////////////////////////\n\n// tslint:disable: no-reference\n// It's tempting to add references to all of the deep-import locations, but\n// adding references to those that require DOM types breaks Node projects.\n/// <reference path=\"./operators/index.ts\" />\n/// <reference path=\"./testing/index.ts\" />\n// tslint:enable: no-reference\n\n/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\nexport { animationFrames } from './internal/observable/dom/animationFrames';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Promise Conversion */\nexport { lastValueFrom } from './internal/lastValueFrom';\nexport { firstValueFrom } from './internal/firstValueFrom';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { NotFoundError } from './internal/util/NotFoundError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { SequenceError } from './internal/util/SequenceError';\nexport { TimeoutError } from './internal/operators/timeout';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { connectable } from './internal/observable/connectable';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config, GlobalConfig } from './internal/config';\n\n/* Operators */\nexport { audit } from './internal/operators/audit';\nexport { auditTime } from './internal/operators/auditTime';\nexport { buffer } from './internal/operators/buffer';\nexport { bufferCount } from './internal/operators/bufferCount';\nexport { bufferTime } from './internal/operators/bufferTime';\nexport { bufferToggle } from './internal/operators/bufferToggle';\nexport { bufferWhen } from './internal/operators/bufferWhen';\nexport { catchError } from './internal/operators/catchError';\nexport { combineAll } from './internal/operators/combineAll';\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\nexport { concatAll } from './internal/operators/concatAll';\nexport { concatMap } from './internal/operators/concatMap';\nexport { concatMapTo } from './internal/operators/concatMapTo';\nexport { concatWith } from './internal/operators/concatWith';\nexport { connect, ConnectConfig } from './internal/operators/connect';\nexport { count } from './internal/operators/count';\nexport { debounce } from './internal/operators/debounce';\nexport { debounceTime } from './internal/operators/debounceTime';\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\nexport { delay } from './internal/operators/delay';\nexport { delayWhen } from './internal/operators/delayWhen';\nexport { dematerialize } from './internal/operators/dematerialize';\nexport { distinct } from './internal/operators/distinct';\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from './internal/operators/elementAt';\nexport { endWith } from './internal/operators/endWith';\nexport { every } from './internal/operators/every';\nexport { exhaust } from './internal/operators/exhaust';\nexport { exhaustAll } from './internal/operators/exhaustAll';\nexport { exhaustMap } from './internal/operators/exhaustMap';\nexport { expand } from './internal/operators/expand';\nexport { filter } from './internal/operators/filter';\nexport { finalize } from './internal/operators/finalize';\nexport { find } from './internal/operators/find';\nexport { findIndex } from './internal/operators/findIndex';\nexport { first } from './internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\nexport { ignoreElements } from './internal/operators/ignoreElements';\nexport { isEmpty } from './internal/operators/isEmpty';\nexport { last } from './internal/operators/last';\nexport { map } from './internal/operators/map';\nexport { mapTo } from './internal/operators/mapTo';\nexport { materialize } from './internal/operators/materialize';\nexport { max } from './internal/operators/max';\nexport { mergeAll } from './internal/operators/mergeAll';\nexport { flatMap } from './internal/operators/flatMap';\nexport { mergeMap } from './internal/operators/mergeMap';\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\nexport { mergeScan } from './internal/operators/mergeScan';\nexport { mergeWith } from './internal/operators/mergeWith';\nexport { min } from './internal/operators/min';\nexport { multicast } from './internal/operators/multicast';\nexport { observeOn } from './internal/operators/observeOn';\nexport { onErrorResumeNextWith } from './internal/operators/onErrorResumeNextWith';\nexport { pairwise } from './internal/operators/pairwise';\nexport { pluck } from './internal/operators/pluck';\nexport { publish } from './internal/operators/publish';\nexport { publishBehavior } from './internal/operators/publishBehavior';\nexport { publishLast } from './internal/operators/publishLast';\nexport { publishReplay } from './internal/operators/publishReplay';\nexport { raceWith } from './internal/operators/raceWith';\nexport { reduce } from './internal/operators/reduce';\nexport { repeat, RepeatConfig } from './internal/operators/repeat';\nexport { repeatWhen } from './internal/operators/repeatWhen';\nexport { retry, RetryConfig } from './internal/operators/retry';\nexport { retryWhen } from './internal/operators/retryWhen';\nexport { refCount } from './internal/operators/refCount';\nexport { sample } from './internal/operators/sample';\nexport { sampleTime } from './internal/operators/sampleTime';\nexport { scan } from './internal/operators/scan';\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\nexport { share, ShareConfig } from './internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\nexport { single } from './internal/operators/single';\nexport { skip } from './internal/operators/skip';\nexport { skipLast } from './internal/operators/skipLast';\nexport { skipUntil } from './internal/operators/skipUntil';\nexport { skipWhile } from './internal/operators/skipWhile';\nexport { startWith } from './internal/operators/startWith';\nexport { subscribeOn } from './internal/operators/subscribeOn';\nexport { switchAll } from './internal/operators/switchAll';\nexport { switchMap } from './internal/operators/switchMap';\nexport { switchMapTo } from './internal/operators/switchMapTo';\nexport { switchScan } from './internal/operators/switchScan';\nexport { take } from './internal/operators/take';\nexport { takeLast } from './internal/operators/takeLast';\nexport { takeUntil } from './internal/operators/takeUntil';\nexport { takeWhile } from './internal/operators/takeWhile';\nexport { tap, TapObserver } from './internal/operators/tap';\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\nexport { throttleTime } from './internal/operators/throttleTime';\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\nexport { timeInterval } from './internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\nexport { timeoutWith } from './internal/operators/timeoutWith';\nexport { timestamp } from './internal/operators/timestamp';\nexport { toArray } from './internal/operators/toArray';\nexport { window } from './internal/operators/window';\nexport { windowCount } from './internal/operators/windowCount';\nexport { windowTime } from './internal/operators/windowTime';\nexport { windowToggle } from './internal/operators/windowToggle';\nexport { windowWhen } from './internal/operators/windowWhen';\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\nexport { zipAll } from './internal/operators/zipAll';\nexport { zipWith } from './internal/operators/zipWith';\n", "import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition click events into those on DIV elements and those elsewhere\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { partition } from 'rxjs/operators';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const [clicksOnDivs, clicksElsewhere] = clicks.pipe(partition(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n *\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an array with two Observables: one with\n * values that passed the predicate, and another with values that did not pass\n * the predicate.\n * @deprecated Replaced with the `partition` static creation function. Will be removed in v8.\n */\nexport function partition<T>(\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) =>\n    [filter(predicate, thisArg)(source), filter(not(predicate, thisArg))(source)] as [Observable<T>, Observable<T>];\n}\n", "import { ObservableInputTuple, OperatorFunction } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { raceWith } from './raceWith';\n\n/** @deprecated Replaced with {@link raceWith}. Will be removed in v8. */\nexport function race<T, A extends readonly unknown[]>(otherSources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link raceWith}. Will be removed in v8. */\nexport function race<T, A extends readonly unknown[]>(...otherSources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of this Observable and supplied Observables.\n * @param args Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n * @deprecated Replaced with {@link raceWith}. Will be removed in v8.\n */\nexport function race<T>(...args: any[]): OperatorFunction<T, unknown> {\n  return raceWith(...argsOrArgArray(args));\n}\n", "/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatestAll } from '../internal/operators/combineLatestAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { combineLatestWith } from '../internal/operators/combineLatestWith';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { concatWith } from '../internal/operators/concatWith';\nexport { connect, ConnectConfig } from '../internal/operators/connect';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustAll } from '../internal/operators/exhaustAll';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { flatMap } from '../internal/operators/flatMap';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { mergeWith } from '../internal/operators/mergeWith';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNextWith';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { raceWith } from '../internal/operators/raceWith';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat, RepeatConfig } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry, RetryConfig } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share, ShareConfig } from '../internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { switchScan } from '../internal/operators/switchScan';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap, TapObserver } from '../internal/operators/tap';\nexport { throttle, ThrottleConfig } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\nexport { zipWith } from '../internal/operators/zipWith';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpStatus = void 0;\n/**\n * @publicApi\n */\nvar HttpStatus;\n(function (HttpStatus) {\n    HttpStatus[HttpStatus[\"CONTINUE\"] = 100] = \"CONTINUE\";\n    HttpStatus[HttpStatus[\"SWITCHING_PROTOCOLS\"] = 101] = \"SWITCHING_PROTOCOLS\";\n    HttpStatus[HttpStatus[\"PROCESSING\"] = 102] = \"PROCESSING\";\n    HttpStatus[HttpStatus[\"EARLYHINTS\"] = 103] = \"EARLYHINTS\";\n    HttpStatus[HttpStatus[\"OK\"] = 200] = \"OK\";\n    HttpStatus[HttpStatus[\"CREATED\"] = 201] = \"CREATED\";\n    HttpStatus[HttpStatus[\"ACCEPTED\"] = 202] = \"ACCEPTED\";\n    HttpStatus[HttpStatus[\"NON_AUTHORITATIVE_INFORMATION\"] = 203] = \"NON_AUTHORITATIVE_INFORMATION\";\n    HttpStatus[HttpStatus[\"NO_CONTENT\"] = 204] = \"NO_CONTENT\";\n    HttpStatus[HttpStatus[\"RESET_CONTENT\"] = 205] = \"RESET_CONTENT\";\n    HttpStatus[HttpStatus[\"PARTIAL_CONTENT\"] = 206] = \"PARTIAL_CONTENT\";\n    HttpStatus[HttpStatus[\"AMBIGUOUS\"] = 300] = \"AMBIGUOUS\";\n    HttpStatus[HttpStatus[\"MOVED_PERMANENTLY\"] = 301] = \"MOVED_PERMANENTLY\";\n    HttpStatus[HttpStatus[\"FOUND\"] = 302] = \"FOUND\";\n    HttpStatus[HttpStatus[\"SEE_OTHER\"] = 303] = \"SEE_OTHER\";\n    HttpStatus[HttpStatus[\"NOT_MODIFIED\"] = 304] = \"NOT_MODIFIED\";\n    HttpStatus[HttpStatus[\"TEMPORARY_REDIRECT\"] = 307] = \"TEMPORARY_REDIRECT\";\n    HttpStatus[HttpStatus[\"PERMANENT_REDIRECT\"] = 308] = \"PERMANENT_REDIRECT\";\n    HttpStatus[HttpStatus[\"BAD_REQUEST\"] = 400] = \"BAD_REQUEST\";\n    HttpStatus[HttpStatus[\"UNAUTHORIZED\"] = 401] = \"UNAUTHORIZED\";\n    HttpStatus[HttpStatus[\"PAYMENT_REQUIRED\"] = 402] = \"PAYMENT_REQUIRED\";\n    HttpStatus[HttpStatus[\"FORBIDDEN\"] = 403] = \"FORBIDDEN\";\n    HttpStatus[HttpStatus[\"NOT_FOUND\"] = 404] = \"NOT_FOUND\";\n    HttpStatus[HttpStatus[\"METHOD_NOT_ALLOWED\"] = 405] = \"METHOD_NOT_ALLOWED\";\n    HttpStatus[HttpStatus[\"NOT_ACCEPTABLE\"] = 406] = \"NOT_ACCEPTABLE\";\n    HttpStatus[HttpStatus[\"PROXY_AUTHENTICATION_REQUIRED\"] = 407] = \"PROXY_AUTHENTICATION_REQUIRED\";\n    HttpStatus[HttpStatus[\"REQUEST_TIMEOUT\"] = 408] = \"REQUEST_TIMEOUT\";\n    HttpStatus[HttpStatus[\"CONFLICT\"] = 409] = \"CONFLICT\";\n    HttpStatus[HttpStatus[\"GONE\"] = 410] = \"GONE\";\n    HttpStatus[HttpStatus[\"LENGTH_REQUIRED\"] = 411] = \"LENGTH_REQUIRED\";\n    HttpStatus[HttpStatus[\"PRECONDITION_FAILED\"] = 412] = \"PRECONDITION_FAILED\";\n    HttpStatus[HttpStatus[\"PAYLOAD_TOO_LARGE\"] = 413] = \"PAYLOAD_TOO_LARGE\";\n    HttpStatus[HttpStatus[\"URI_TOO_LONG\"] = 414] = \"URI_TOO_LONG\";\n    HttpStatus[HttpStatus[\"UNSUPPORTED_MEDIA_TYPE\"] = 415] = \"UNSUPPORTED_MEDIA_TYPE\";\n    HttpStatus[HttpStatus[\"REQUESTED_RANGE_NOT_SATISFIABLE\"] = 416] = \"REQUESTED_RANGE_NOT_SATISFIABLE\";\n    HttpStatus[HttpStatus[\"EXPECTATION_FAILED\"] = 417] = \"EXPECTATION_FAILED\";\n    HttpStatus[HttpStatus[\"I_AM_A_TEAPOT\"] = 418] = \"I_AM_A_TEAPOT\";\n    HttpStatus[HttpStatus[\"MISDIRECTED\"] = 421] = \"MISDIRECTED\";\n    HttpStatus[HttpStatus[\"UNPROCESSABLE_ENTITY\"] = 422] = \"UNPROCESSABLE_ENTITY\";\n    HttpStatus[HttpStatus[\"FAILED_DEPENDENCY\"] = 424] = \"FAILED_DEPENDENCY\";\n    HttpStatus[HttpStatus[\"PRECONDITION_REQUIRED\"] = 428] = \"PRECONDITION_REQUIRED\";\n    HttpStatus[HttpStatus[\"TOO_MANY_REQUESTS\"] = 429] = \"TOO_MANY_REQUESTS\";\n    HttpStatus[HttpStatus[\"INTERNAL_SERVER_ERROR\"] = 500] = \"INTERNAL_SERVER_ERROR\";\n    HttpStatus[HttpStatus[\"NOT_IMPLEMENTED\"] = 501] = \"NOT_IMPLEMENTED\";\n    HttpStatus[HttpStatus[\"BAD_GATEWAY\"] = 502] = \"BAD_GATEWAY\";\n    HttpStatus[HttpStatus[\"SERVICE_UNAVAILABLE\"] = 503] = \"SERVICE_UNAVAILABLE\";\n    HttpStatus[HttpStatus[\"GATEWAY_TIMEOUT\"] = 504] = \"GATEWAY_TIMEOUT\";\n    HttpStatus[HttpStatus[\"HTTP_VERSION_NOT_SUPPORTED\"] = 505] = \"HTTP_VERSION_NOT_SUPPORTED\";\n})(HttpStatus = exports.HttpStatus || (exports.HttpStatus = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShutdownSignal = void 0;\n/**\n * System signals which shut down a process\n */\nvar ShutdownSignal;\n(function (ShutdownSignal) {\n    ShutdownSignal[\"SIGHUP\"] = \"SIGHUP\";\n    ShutdownSignal[\"SIGINT\"] = \"SIGINT\";\n    ShutdownSignal[\"SIGQUIT\"] = \"SIGQUIT\";\n    ShutdownSignal[\"SIGILL\"] = \"SIGILL\";\n    ShutdownSignal[\"SIGTRAP\"] = \"SIGTRAP\";\n    ShutdownSignal[\"SIGABRT\"] = \"SIGABRT\";\n    ShutdownSignal[\"SIGBUS\"] = \"SIGBUS\";\n    ShutdownSignal[\"SIGFPE\"] = \"SIGFPE\";\n    ShutdownSignal[\"SIGSEGV\"] = \"SIGSEGV\";\n    ShutdownSignal[\"SIGUSR2\"] = \"SIGUSR2\";\n    ShutdownSignal[\"SIGTERM\"] = \"SIGTERM\";\n})(ShutdownSignal = exports.ShutdownSignal || (exports.ShutdownSignal = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VersioningType = void 0;\n/**\n * @publicApi\n */\nvar VersioningType;\n(function (VersioningType) {\n    VersioningType[VersioningType[\"URI\"] = 0] = \"URI\";\n    VersioningType[VersioningType[\"HEADER\"] = 1] = \"HEADER\";\n    VersioningType[VersioningType[\"MEDIA_TYPE\"] = 2] = \"MEDIA_TYPE\";\n    VersioningType[VersioningType[\"CUSTOM\"] = 3] = \"CUSTOM\";\n})(VersioningType = exports.VersioningType || (exports.VersioningType = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./request-method.enum\"), exports);\ntslib_1.__exportStar(require(\"./http-status.enum\"), exports);\ntslib_1.__exportStar(require(\"./shutdown-signal.enum\"), exports);\ntslib_1.__exportStar(require(\"./version-type.enum\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamableFile = void 0;\nconst stream_1 = require(\"stream\");\nconst util_1 = require(\"util\");\nconst enums_1 = require(\"../enums\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\n/**\n * @see [Streaming files](https://docs.nestjs.com/techniques/streaming-files)\n *\n * @publicApi\n */\nclass StreamableFile {\n    constructor(bufferOrReadStream, options = {}) {\n        var _a;\n        var _b;\n        this.options = options;\n        this.handleError = (err, res) => {\n            if (res.destroyed) {\n                return;\n            }\n            if (res.headersSent) {\n                res.end();\n                return;\n            }\n            res.statusCode = enums_1.HttpStatus.BAD_REQUEST;\n            res.send(err.message);\n        };\n        if (util_1.types.isUint8Array(bufferOrReadStream)) {\n            this.stream = new stream_1.Readable();\n            this.stream.push(bufferOrReadStream);\n            this.stream.push(null);\n            (_a = (_b = this.options).length) !== null && _a !== void 0 ? _a : (_b.length = bufferOrReadStream.length);\n        }\n        else if (bufferOrReadStream.pipe && (0, shared_utils_1.isFunction)(bufferOrReadStream.pipe)) {\n            this.stream = bufferOrReadStream;\n        }\n    }\n    getStream() {\n        return this.stream;\n    }\n    getHeaders() {\n        const { type = 'application/octet-stream', disposition = undefined, length = undefined, } = this.options;\n        return {\n            type,\n            disposition,\n            length,\n        };\n    }\n    get errorHandler() {\n        return this.handleError;\n    }\n    setErrorHandler(handler) {\n        this.handleError = handler;\n        return this;\n    }\n}\nexports.StreamableFile = StreamableFile;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./streamable-file\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CacheInterceptor = void 0;\nconst tslib_1 = require(\"tslib\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst decorators_1 = require(\"../../decorators\");\nconst file_stream_1 = require(\"../../file-stream\");\nconst logger_service_1 = require(\"../../services/logger.service\");\nconst load_package_util_1 = require(\"../../utils/load-package.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst cache_constants_1 = require(\"../cache.constants\");\n/** @deprecated */\nconst HTTP_ADAPTER_HOST = 'HttpAdapterHost';\n/** @deprecated */\nconst REFLECTOR = 'Reflector';\n/**\n * @see [Caching](https://docs.nestjs.com/techniques/caching)\n *\n * @deprecated `CacheModule` (from the `@nestjs/common` package) is deprecated and will be removed in the next major release. Please, use the `@nestjs/cache-manager` package instead\n * @publicApi\n */\nlet CacheInterceptor = class CacheInterceptor {\n    constructor(cacheManager, reflector) {\n        this.cacheManager = cacheManager;\n        this.reflector = reflector;\n        this.allowedMethods = ['GET'];\n        // We need to check if the cache-manager package is v5 or greater\n        // because the set method signature changed in v5\n        const cacheManagerPackage = (0, load_package_util_1.loadPackage)('cache-manager', 'CacheModule', () => require('cache-manager'));\n        this.cacheManagerIsv5OrGreater = 'memoryStore' in cacheManagerPackage;\n        logger_service_1.Logger.warn('DEPRECATED! \"CacheModule\" (from the \"@nestjs/common\" package) is deprecated and will be removed in the next major release. Please, use the \"@nestjs/cache-manager\" package instead.');\n    }\n    async intercept(context, next) {\n        var _a;\n        const key = this.trackBy(context);\n        const ttlValueOrFactory = (_a = this.reflector.get(cache_constants_1.CACHE_TTL_METADATA, context.getHandler())) !== null && _a !== void 0 ? _a : null;\n        if (!key) {\n            return next.handle();\n        }\n        try {\n            const value = await this.cacheManager.get(key);\n            if (!(0, shared_utils_1.isNil)(value)) {\n                return (0, rxjs_1.of)(value);\n            }\n            const ttl = (0, shared_utils_1.isFunction)(ttlValueOrFactory)\n                ? await ttlValueOrFactory(context)\n                : ttlValueOrFactory;\n            return next.handle().pipe((0, operators_1.tap)(async (response) => {\n                if (response instanceof file_stream_1.StreamableFile) {\n                    return;\n                }\n                const args = [key, response];\n                if (!(0, shared_utils_1.isNil)(ttl)) {\n                    args.push(this.cacheManagerIsv5OrGreater ? ttl : { ttl });\n                }\n                try {\n                    await this.cacheManager.set(...args);\n                }\n                catch (err) {\n                    logger_service_1.Logger.error(`An error has occurred when inserting \"key: ${key}\", \"value: ${response}\"`, 'CacheInterceptor');\n                }\n            }));\n        }\n        catch (_b) {\n            return next.handle();\n        }\n    }\n    trackBy(context) {\n        const httpAdapter = this.httpAdapterHost.httpAdapter;\n        const isHttpApp = httpAdapter && !!httpAdapter.getRequestMethod;\n        const cacheMetadata = this.reflector.get(cache_constants_1.CACHE_KEY_METADATA, context.getHandler());\n        if (!isHttpApp || cacheMetadata) {\n            return cacheMetadata;\n        }\n        const request = context.getArgByIndex(0);\n        if (!this.isRequestCacheable(context)) {\n            return undefined;\n        }\n        return httpAdapter.getRequestUrl(request);\n    }\n    isRequestCacheable(context) {\n        const req = context.switchToHttp().getRequest();\n        return this.allowedMethods.includes(req.method);\n    }\n};\ntslib_1.__decorate([\n    (0, decorators_1.Optional)(),\n    (0, decorators_1.Inject)(HTTP_ADAPTER_HOST),\n    tslib_1.__metadata(\"design:type\", Object)\n], CacheInterceptor.prototype, \"httpAdapterHost\", void 0);\nCacheInterceptor = tslib_1.__decorate([\n    (0, decorators_1.Injectable)(),\n    tslib_1.__param(0, (0, decorators_1.Inject)(cache_constants_1.CACHE_MANAGER)),\n    tslib_1.__param(1, (0, decorators_1.Inject)(REFLECTOR)),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object])\n], CacheInterceptor);\nexports.CacheInterceptor = CacheInterceptor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./cache.interceptor\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./cache-manager.interface\"), exports);\ntslib_1.__exportStar(require(\"./cache-module.interface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./cache.constants\"), exports);\ntslib_1.__exportStar(require(\"./cache.module\"), exports);\ntslib_1.__exportStar(require(\"./decorators\"), exports);\ntslib_1.__exportStar(require(\"./interceptors\"), exports);\ntslib_1.__exportStar(require(\"./interfaces\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./console-logger.service\"), exports);\ntslib_1.__exportStar(require(\"./logger.service\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpException = void 0;\nconst services_1 = require(\"../services\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\n/**\n * Defines the base Nest HTTP exception, which is handled by the default\n * Exceptions Handler.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass HttpException extends Error {\n    /**\n     * Instantiate a plain HTTP Exception.\n     *\n     * @example\n     * throw new HttpException()\n     * throw new HttpException('message', HttpStatus.BAD_REQUEST)\n     * throw new HttpException({ reason: 'this can be a human readable reason' }, HttpStatus.BAD_REQUEST)\n     * throw new HttpException(new Error('Cause Error'), HttpStatus.BAD_REQUEST)\n     * throw new HttpException('custom message', HttpStatus.BAD_REQUEST, {\n     *  cause: new Error('Cause Error'),\n     * })\n     *\n     *\n     * @usageNotes\n     * The constructor arguments define the response and the HTTP response status code.\n     * - The `response` argument (required) defines the JSON response body. alternatively, it can also be\n     *  an error object that is used to define an error [cause](https://nodejs.org/en/blog/release/v16.9.0/#error-cause).\n     * - The `status` argument (required) defines the HTTP Status Code.\n     * - The `options` argument (optional) defines additional error options. Currently, it supports the `cause` attribute,\n     *  and can be used as an alternative way to specify the error cause: `const error = new HttpException('description', 400, { cause: new Error() });`\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: the Http Status Code.\n     * - `message`: a short description of the HTTP error by default; override this\n     * by supplying a string in the `response` parameter.\n     *\n     * To override the entire JSON response body, pass an object to the `createBody`\n     * method. Nest will serialize the object and return it as the JSON response body.\n     *\n     * The `status` argument is required, and should be a valid HTTP status code.\n     * Best practice is to use the `HttpStatus` enum imported from `nestjs/common`.\n     *\n     * @param response string, object describing the error condition or the error cause.\n     * @param status HTTP response status code.\n     * @param options An object used to add an error cause.\n     */\n    constructor(response, status, options) {\n        super();\n        this.response = response;\n        this.status = status;\n        this.options = options;\n        this.initMessage();\n        this.initName();\n        this.initCause();\n    }\n    /**\n     * Configures error chaining support\n     *\n     * See:\n     * - https://nodejs.org/en/blog/release/v16.9.0/#error-cause\n     * - https://github.com/microsoft/TypeScript/issues/45167\n     */\n    initCause() {\n        var _a;\n        if ((_a = this.options) === null || _a === void 0 ? void 0 : _a.cause) {\n            this.cause = this.options.cause;\n            return;\n        }\n        if (this.response instanceof Error) {\n            services_1.Logger.warn('DEPRECATED! Passing the error cause as the first argument to HttpException constructor is deprecated. You should use the \"options\" parameter instead: new HttpException(\"message\", 400, { cause: new Error(\"Some Error\") }) ');\n            this.cause = this.response;\n        }\n    }\n    initMessage() {\n        var _a, _b;\n        if ((0, shared_utils_1.isString)(this.response)) {\n            this.message = this.response;\n        }\n        else if ((0, shared_utils_1.isObject)(this.response) &&\n            (0, shared_utils_1.isString)(this.response.message)) {\n            this.message = this.response.message;\n        }\n        else if (this.constructor) {\n            this.message =\n                (_b = (_a = this.constructor.name.match(/[A-Z][a-z]+|[0-9]+/g)) === null || _a === void 0 ? void 0 : _a.join(' ')) !== null && _b !== void 0 ? _b : 'Error';\n        }\n    }\n    initName() {\n        this.name = this.constructor.name;\n    }\n    getResponse() {\n        return this.response;\n    }\n    getStatus() {\n        return this.status;\n    }\n    static createBody(objectOrErrorMessage, description, statusCode) {\n        if (!objectOrErrorMessage) {\n            return { statusCode, message: description };\n        }\n        return (0, shared_utils_1.isObject)(objectOrErrorMessage) &&\n            !Array.isArray(objectOrErrorMessage)\n            ? objectOrErrorMessage\n            : { statusCode, message: objectOrErrorMessage, error: description };\n    }\n    static getDescriptionFrom(descriptionOrOptions) {\n        return (0, shared_utils_1.isString)(descriptionOrOptions)\n            ? descriptionOrOptions\n            : descriptionOrOptions === null || descriptionOrOptions === void 0 ? void 0 : descriptionOrOptions.description;\n    }\n    static getHttpExceptionOptionsFrom(descriptionOrOptions) {\n        return (0, shared_utils_1.isString)(descriptionOrOptions) ? {} : descriptionOrOptions;\n    }\n    /**\n     * Utility method used to extract the error description and httpExceptionOptions from the given argument.\n     * This is used by inheriting classes to correctly parse both options.\n     * @returns the error description and the httpExceptionOptions as an object.\n     */\n    static extractDescriptionAndOptionsFrom(descriptionOrOptions) {\n        const description = (0, shared_utils_1.isString)(descriptionOrOptions)\n            ? descriptionOrOptions\n            : descriptionOrOptions === null || descriptionOrOptions === void 0 ? void 0 : descriptionOrOptions.description;\n        const httpExceptionOptions = (0, shared_utils_1.isString)(descriptionOrOptions)\n            ? {}\n            : descriptionOrOptions;\n        return {\n            description,\n            httpExceptionOptions,\n        };\n    }\n}\nexports.HttpException = HttpException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BadRequestException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Bad Request* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass BadRequestException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `BadRequestException` Exception.\n     *\n     * @example\n     * `throw new BadRequestException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 400.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 400.\n     * - `message`: the string `'Bad Request'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Bad Request') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.BAD_REQUEST), http_status_enum_1.HttpStatus.BAD_REQUEST, httpExceptionOptions);\n    }\n}\nexports.BadRequestException = BadRequestException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnauthorizedException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Unauthorized* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass UnauthorizedException extends http_exception_1.HttpException {\n    /**\n     * Instantiate an `UnauthorizedException` Exception.\n     *\n     * @example\n     * `throw new UnauthorizedException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 401.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 401.\n     * - `message`: the string `'Unauthorized'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Unauthorized') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.UNAUTHORIZED), http_status_enum_1.HttpStatus.UNAUTHORIZED, httpExceptionOptions);\n    }\n}\nexports.UnauthorizedException = UnauthorizedException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MethodNotAllowedException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Method Not Allowed* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass MethodNotAllowedException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `MethodNotAllowedException` Exception.\n     *\n     * @example\n     * `throw new MethodNotAllowedException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 405.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 405.\n     * - `message`: the string `'Method Not Allowed'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Method Not Allowed') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.METHOD_NOT_ALLOWED), http_status_enum_1.HttpStatus.METHOD_NOT_ALLOWED, httpExceptionOptions);\n    }\n}\nexports.MethodNotAllowedException = MethodNotAllowedException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotFoundException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Not Found* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass NotFoundException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `NotFoundException` Exception.\n     *\n     * @example\n     * `throw new NotFoundException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 404.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 404.\n     * - `message`: the string `'Not Found'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Not Found') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.NOT_FOUND), http_status_enum_1.HttpStatus.NOT_FOUND, httpExceptionOptions);\n    }\n}\nexports.NotFoundException = NotFoundException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForbiddenException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Forbidden* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass ForbiddenException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `ForbiddenException` Exception.\n     *\n     * @example\n     * `throw new ForbiddenException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 403.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 403.\n     * - `message`: the string `'Forbidden'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Forbidden') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.FORBIDDEN), http_status_enum_1.HttpStatus.FORBIDDEN, httpExceptionOptions);\n    }\n}\nexports.ForbiddenException = ForbiddenException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotAcceptableException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Not Acceptable* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass NotAcceptableException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `NotAcceptableException` Exception.\n     *\n     * @example\n     * `throw new NotAcceptableException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 406.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 406.\n     * - `error`: the string `'Not Acceptable'` by default; override this by supplying\n     * a string in the `error` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Not Acceptable') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.NOT_ACCEPTABLE), http_status_enum_1.HttpStatus.NOT_ACCEPTABLE, httpExceptionOptions);\n    }\n}\nexports.NotAcceptableException = NotAcceptableException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestTimeoutException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Request Timeout* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass RequestTimeoutException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `RequestTimeoutException` Exception.\n     *\n     * @example\n     * `throw new RequestTimeoutException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 408.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 408.\n     * - `message`: the string `'Request Timeout'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Request Timeout') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.REQUEST_TIMEOUT), http_status_enum_1.HttpStatus.REQUEST_TIMEOUT, httpExceptionOptions);\n    }\n}\nexports.RequestTimeoutException = RequestTimeoutException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConflictException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Conflict* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass ConflictException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `ConflictException` Exception.\n     *\n     * @example\n     * `throw new ConflictException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 409.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 409.\n     * - `message`: the string `'Conflict'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Conflict') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.CONFLICT), http_status_enum_1.HttpStatus.CONFLICT, httpExceptionOptions);\n    }\n}\nexports.ConflictException = ConflictException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoneException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Gone* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass GoneException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `GoneException` Exception.\n     *\n     * @example\n     * `throw new GoneException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 410.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 410.\n     * - `message`: the string `'Gone'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Gone') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.GONE), http_status_enum_1.HttpStatus.GONE, httpExceptionOptions);\n    }\n}\nexports.GoneException = GoneException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PayloadTooLargeException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Payload Too Large* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass PayloadTooLargeException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `PayloadTooLargeException` Exception.\n     *\n     * @example\n     * `throw new PayloadTooLargeException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 413.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 413.\n     * - `message`: the string `'Payload Too Large'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Payload Too Large') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.PAYLOAD_TOO_LARGE), http_status_enum_1.HttpStatus.PAYLOAD_TOO_LARGE, httpExceptionOptions);\n    }\n}\nexports.PayloadTooLargeException = PayloadTooLargeException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsupportedMediaTypeException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Unsupported Media Type* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass UnsupportedMediaTypeException extends http_exception_1.HttpException {\n    /**\n     * Instantiate an `UnsupportedMediaTypeException` Exception.\n     *\n     * @example\n     * `throw new UnsupportedMediaTypeException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 415.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 415.\n     * - `message`: the string `'Unsupported Media Type'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Unsupported Media Type') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.UNSUPPORTED_MEDIA_TYPE), http_status_enum_1.HttpStatus.UNSUPPORTED_MEDIA_TYPE, httpExceptionOptions);\n    }\n}\nexports.UnsupportedMediaTypeException = UnsupportedMediaTypeException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnprocessableEntityException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Unprocessable Entity* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass UnprocessableEntityException extends http_exception_1.HttpException {\n    /**\n     * Instantiate an `UnprocessableEntityException` Exception.\n     *\n     * @example\n     * `throw new UnprocessableEntityException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 422.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 422.\n     * - `message`: the string `'Unprocessable Entity'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Unprocessable Entity') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.UNPROCESSABLE_ENTITY), http_status_enum_1.HttpStatus.UNPROCESSABLE_ENTITY, httpExceptionOptions);\n    }\n}\nexports.UnprocessableEntityException = UnprocessableEntityException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalServerErrorException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Internal Server Error* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass InternalServerErrorException extends http_exception_1.HttpException {\n    /**\n     * Instantiate an `InternalServerErrorException` Exception.\n     *\n     * @example\n     * `throw new InternalServerErrorException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 500.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 500.\n     * - `message`: the string `'Internal Server Error'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Internal Server Error') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.INTERNAL_SERVER_ERROR), http_status_enum_1.HttpStatus.INTERNAL_SERVER_ERROR, httpExceptionOptions);\n    }\n}\nexports.InternalServerErrorException = InternalServerErrorException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotImplementedException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Not Implemented* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass NotImplementedException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `NotImplementedException` Exception.\n     *\n     * @example\n     * `throw new NotImplementedException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 501.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 501.\n     * - `message`: the string `'Not Implemented'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     * @param error a short description of the HTTP error.\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Not Implemented') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.NOT_IMPLEMENTED), http_status_enum_1.HttpStatus.NOT_IMPLEMENTED, httpExceptionOptions);\n    }\n}\nexports.NotImplementedException = NotImplementedException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpVersionNotSupportedException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Http Version Not Supported* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass HttpVersionNotSupportedException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `HttpVersionNotSupportedException` Exception.\n     *\n     * @example\n     * `throw new HttpVersionNotSupportedException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 505.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 505.\n     * - `message`: the string `'HTTP Version Not Supported'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'HTTP Version Not Supported') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.HTTP_VERSION_NOT_SUPPORTED), http_status_enum_1.HttpStatus.HTTP_VERSION_NOT_SUPPORTED, httpExceptionOptions);\n    }\n}\nexports.HttpVersionNotSupportedException = HttpVersionNotSupportedException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BadGatewayException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Bad Gateway* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass BadGatewayException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `BadGatewayException` Exception.\n     *\n     * @example\n     * `throw new BadGatewayException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 502.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 502.\n     * - `message`: the string `'Bad Gateway'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Bad Gateway') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.BAD_GATEWAY), http_status_enum_1.HttpStatus.BAD_GATEWAY, httpExceptionOptions);\n    }\n}\nexports.BadGatewayException = BadGatewayException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceUnavailableException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Service Unavailable* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass ServiceUnavailableException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `ServiceUnavailableException` Exception.\n     *\n     * @example\n     * `throw new ServiceUnavailableException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 503.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 503.\n     * - `message`: the string `'Service Unavailable'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Service Unavailable') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.SERVICE_UNAVAILABLE), http_status_enum_1.HttpStatus.SERVICE_UNAVAILABLE, httpExceptionOptions);\n    }\n}\nexports.ServiceUnavailableException = ServiceUnavailableException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GatewayTimeoutException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Gateway Timeout* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass GatewayTimeoutException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `GatewayTimeoutException` Exception.\n     *\n     * @example\n     * `throw new GatewayTimeoutException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 504.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 504.\n     * - `message`: the string `'Gateway Timeout'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Gateway Timeout') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.GATEWAY_TIMEOUT), http_status_enum_1.HttpStatus.GATEWAY_TIMEOUT, httpExceptionOptions);\n    }\n}\nexports.GatewayTimeoutException = GatewayTimeoutException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImATeapotException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *ImATeapotException* type errors.\n *\n * Any attempt to brew coffee with a teapot should result in the error code\n * \"418 I'm a teapot\". The resulting entity body MAY be short and stout.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass ImATeapotException extends http_exception_1.HttpException {\n    /**\n     * Instantiate an `ImATeapotException` Exception.\n     *\n     * @example\n     * `throw new ImATeapotException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 418.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 418.\n     * - `message`: the string `\"I'm a Teapot\"` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = `I'm a teapot`) {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.I_AM_A_TEAPOT), http_status_enum_1.HttpStatus.I_AM_A_TEAPOT, httpExceptionOptions);\n    }\n}\nexports.ImATeapotException = ImATeapotException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PreconditionFailedException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Precondition Failed* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass PreconditionFailedException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `PreconditionFailedException` Exception.\n     *\n     * @example\n     * `throw new PreconditionFailedException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 412.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 412.\n     * - `message`: the string `'Precondition Failed'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Precondition Failed') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.PRECONDITION_FAILED), http_status_enum_1.HttpStatus.PRECONDITION_FAILED, httpExceptionOptions);\n    }\n}\nexports.PreconditionFailedException = PreconditionFailedException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MisdirectedException = void 0;\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_exception_1 = require(\"./http.exception\");\n/**\n * Defines an HTTP exception for *Misdirected* type errors.\n *\n * @see [Built-in HTTP exceptions](https://docs.nestjs.com/exception-filters#built-in-http-exceptions)\n *\n * @publicApi\n */\nclass MisdirectedException extends http_exception_1.HttpException {\n    /**\n     * Instantiate a `MisdirectedException` Exception.\n     *\n     * @example\n     * `throw new MisdirectedException()`\n     *\n     * @usageNotes\n     * The HTTP response status code will be 421.\n     * - The `objectOrError` argument defines the JSON response body or the message string.\n     * - The `descriptionOrOptions` argument contains either a short description of the HTTP error or an options object used to provide an underlying error cause.\n     *\n     * By default, the JSON response body contains two properties:\n     * - `statusCode`: this will be the value 421.\n     * - `message`: the string `'Bad Gateway'` by default; override this by supplying\n     * a string in the `objectOrError` parameter.\n     *\n     * If the parameter `objectOrError` is a string, the response body will contain an\n     * additional property, `error`, with a short description of the HTTP error. To override the\n     * entire JSON response body, pass an object instead. Nest will serialize the object\n     * and return it as the JSON response body.\n     *\n     * @param objectOrError string or object describing the error condition.\n     * @param descriptionOrOptions either a short description of the HTTP error or an options object used to provide an underlying error cause\n     */\n    constructor(objectOrError, descriptionOrOptions = 'Misdirected') {\n        const { description, httpExceptionOptions } = http_exception_1.HttpException.extractDescriptionAndOptionsFrom(descriptionOrOptions);\n        super(http_exception_1.HttpException.createBody(objectOrError, description, http_status_enum_1.HttpStatus.MISDIRECTED), http_status_enum_1.HttpStatus.MISDIRECTED, httpExceptionOptions);\n    }\n}\nexports.MisdirectedException = MisdirectedException;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./bad-request.exception\"), exports);\ntslib_1.__exportStar(require(\"./http.exception\"), exports);\ntslib_1.__exportStar(require(\"./unauthorized.exception\"), exports);\ntslib_1.__exportStar(require(\"./method-not-allowed.exception\"), exports);\ntslib_1.__exportStar(require(\"./not-found.exception\"), exports);\ntslib_1.__exportStar(require(\"./forbidden.exception\"), exports);\ntslib_1.__exportStar(require(\"./not-acceptable.exception\"), exports);\ntslib_1.__exportStar(require(\"./request-timeout.exception\"), exports);\ntslib_1.__exportStar(require(\"./conflict.exception\"), exports);\ntslib_1.__exportStar(require(\"./gone.exception\"), exports);\ntslib_1.__exportStar(require(\"./payload-too-large.exception\"), exports);\ntslib_1.__exportStar(require(\"./unsupported-media-type.exception\"), exports);\ntslib_1.__exportStar(require(\"./unprocessable-entity.exception\"), exports);\ntslib_1.__exportStar(require(\"./internal-server-error.exception\"), exports);\ntslib_1.__exportStar(require(\"./not-implemented.exception\"), exports);\ntslib_1.__exportStar(require(\"./http-version-not-supported.exception\"), exports);\ntslib_1.__exportStar(require(\"./bad-gateway.exception\"), exports);\ntslib_1.__exportStar(require(\"./service-unavailable.exception\"), exports);\ntslib_1.__exportStar(require(\"./gateway-timeout.exception\"), exports);\ntslib_1.__exportStar(require(\"./im-a-teapot.exception\"), exports);\ntslib_1.__exportStar(require(\"./precondition-failed.exception\"), exports);\ntslib_1.__exportStar(require(\"./misdirected.exception\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./before-application-shutdown.interface\"), exports);\ntslib_1.__exportStar(require(\"./on-application-bootstrap.interface\"), exports);\ntslib_1.__exportStar(require(\"./on-application-shutdown.interface\"), exports);\ntslib_1.__exportStar(require(\"./on-destroy.interface\"), exports);\ntslib_1.__exportStar(require(\"./on-init.interface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./http-server.interface\"), exports);\ntslib_1.__exportStar(require(\"./message-event.interface\"), exports);\ntslib_1.__exportStar(require(\"./raw-body-request.interface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./middleware-config-proxy.interface\"), exports);\ntslib_1.__exportStar(require(\"./middleware-configuration.interface\"), exports);\ntslib_1.__exportStar(require(\"./middleware-consumer.interface\"), exports);\ntslib_1.__exportStar(require(\"./nest-middleware.interface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./dynamic-module.interface\"), exports);\ntslib_1.__exportStar(require(\"./forward-reference.interface\"), exports);\ntslib_1.__exportStar(require(\"./injection-token.interface\"), exports);\ntslib_1.__exportStar(require(\"./introspection-result.interface\"), exports);\ntslib_1.__exportStar(require(\"./module-metadata.interface\"), exports);\ntslib_1.__exportStar(require(\"./nest-module.interface\"), exports);\ntslib_1.__exportStar(require(\"./optional-factory-dependency.interface\"), exports);\ntslib_1.__exportStar(require(\"./provider.interface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Scope = void 0;\n/**\n * @publicApi\n */\nvar Scope;\n(function (Scope) {\n    /**\n     * The provider can be shared across multiple classes. The provider lifetime\n     * is strictly tied to the application lifecycle. Once the application has\n     * bootstrapped, all providers have been instantiated.\n     */\n    Scope[Scope[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    /**\n     * A new private instance of the provider is instantiated for every use\n     */\n    Scope[Scope[\"TRANSIENT\"] = 1] = \"TRANSIENT\";\n    /**\n     * A new instance is instantiated for each request processing pipeline\n     */\n    Scope[Scope[\"REQUEST\"] = 2] = \"REQUEST\";\n})(Scope = exports.Scope || (exports.Scope = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION_NEUTRAL = void 0;\n/**\n * Indicates that this will work for any version passed in the request, or no version.\n *\n * @publicApi\n */\nexports.VERSION_NEUTRAL = Symbol('VERSION_NEUTRAL');\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./abstract.interface\"), exports);\ntslib_1.__exportStar(require(\"./controllers/controller-metadata.interface\"), exports);\ntslib_1.__exportStar(require(\"./controllers/controller.interface\"), exports);\ntslib_1.__exportStar(require(\"./exceptions/exception-filter.interface\"), exports);\ntslib_1.__exportStar(require(\"./exceptions/rpc-exception-filter.interface\"), exports);\ntslib_1.__exportStar(require(\"./exceptions/ws-exception-filter.interface\"), exports);\ntslib_1.__exportStar(require(\"./external/validation-error.interface\"), exports);\ntslib_1.__exportStar(require(\"./features/arguments-host.interface\"), exports);\ntslib_1.__exportStar(require(\"./features/can-activate.interface\"), exports);\ntslib_1.__exportStar(require(\"./features/custom-route-param-factory.interface\"), exports);\ntslib_1.__exportStar(require(\"./features/execution-context.interface\"), exports);\ntslib_1.__exportStar(require(\"./features/nest-interceptor.interface\"), exports);\ntslib_1.__exportStar(require(\"./features/paramtype.interface\"), exports);\ntslib_1.__exportStar(require(\"./features/pipe-transform.interface\"), exports);\ntslib_1.__exportStar(require(\"./global-prefix-options.interface\"), exports);\ntslib_1.__exportStar(require(\"./hooks\"), exports);\ntslib_1.__exportStar(require(\"./http\"), exports);\ntslib_1.__exportStar(require(\"./injectable.interface\"), exports);\ntslib_1.__exportStar(require(\"./microservices/nest-hybrid-application-options.interface\"), exports);\ntslib_1.__exportStar(require(\"./middleware\"), exports);\ntslib_1.__exportStar(require(\"./modules\"), exports);\ntslib_1.__exportStar(require(\"./nest-application-context.interface\"), exports);\ntslib_1.__exportStar(require(\"./nest-application-options.interface\"), exports);\ntslib_1.__exportStar(require(\"./nest-application.interface\"), exports);\ntslib_1.__exportStar(require(\"./nest-microservice.interface\"), exports);\ntslib_1.__exportStar(require(\"./scope-options.interface\"), exports);\ntslib_1.__exportStar(require(\"./type.interface\"), exports);\ntslib_1.__exportStar(require(\"./version-options.interface\"), exports);\ntslib_1.__exportStar(require(\"./websockets/web-socket-adapter.interface\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultValuePipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\n/**\n * Defines the built-in DefaultValue Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet DefaultValuePipe = class DefaultValuePipe {\n    constructor(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    transform(value, _metadata) {\n        if ((0, shared_utils_1.isNil)(value) ||\n            ((0, shared_utils_1.isNumber)(value) && isNaN(value))) {\n            return this.defaultValue;\n        }\n        return value;\n    }\n};\nDefaultValuePipe = tslib_1.__decorate([\n    (0, injectable_decorator_1.Injectable)(),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], DefaultValuePipe);\nexports.DefaultValuePipe = DefaultValuePipe;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpErrorByCode = void 0;\nconst enums_1 = require(\"../enums\");\nconst exceptions_1 = require(\"../exceptions\");\nexports.HttpErrorByCode = {\n    [enums_1.HttpStatus.BAD_GATEWAY]: exceptions_1.BadGatewayException,\n    [enums_1.HttpStatus.BAD_REQUEST]: exceptions_1.BadRequestException,\n    [enums_1.HttpStatus.CONFLICT]: exceptions_1.ConflictException,\n    [enums_1.HttpStatus.FORBIDDEN]: exceptions_1.ForbiddenException,\n    [enums_1.HttpStatus.GATEWAY_TIMEOUT]: exceptions_1.GatewayTimeoutException,\n    [enums_1.HttpStatus.GONE]: exceptions_1.GoneException,\n    [enums_1.HttpStatus.I_AM_A_TEAPOT]: exceptions_1.ImATeapotException,\n    [enums_1.HttpStatus.INTERNAL_SERVER_ERROR]: exceptions_1.InternalServerErrorException,\n    [enums_1.HttpStatus.METHOD_NOT_ALLOWED]: exceptions_1.MethodNotAllowedException,\n    [enums_1.HttpStatus.NOT_ACCEPTABLE]: exceptions_1.NotAcceptableException,\n    [enums_1.HttpStatus.NOT_FOUND]: exceptions_1.NotFoundException,\n    [enums_1.HttpStatus.NOT_IMPLEMENTED]: exceptions_1.NotImplementedException,\n    [enums_1.HttpStatus.PAYLOAD_TOO_LARGE]: exceptions_1.PayloadTooLargeException,\n    [enums_1.HttpStatus.PRECONDITION_FAILED]: exceptions_1.PreconditionFailedException,\n    [enums_1.HttpStatus.REQUEST_TIMEOUT]: exceptions_1.RequestTimeoutException,\n    [enums_1.HttpStatus.SERVICE_UNAVAILABLE]: exceptions_1.ServiceUnavailableException,\n    [enums_1.HttpStatus.UNAUTHORIZED]: exceptions_1.UnauthorizedException,\n    [enums_1.HttpStatus.UNPROCESSABLE_ENTITY]: exceptions_1.UnprocessableEntityException,\n    [enums_1.HttpStatus.UNSUPPORTED_MEDIA_TYPE]: exceptions_1.UnsupportedMediaTypeException,\n};\n", null, null, null, null, null, null, null, null, null, "import { ValidationMetadataArgs } from './ValidationMetadataArgs';\nimport { ValidationArguments } from '../validation/ValidationArguments';\n\n/**\n * This metadata contains validation rules.\n */\nexport class ValidationMetadata {\n  // -------------------------------------------------------------------------\n  // Properties\n  // -------------------------------------------------------------------------\n\n  /**\n   * Validation type.\n   */\n  type: string;\n\n  /**\n   * Validator name.\n   */\n  name?: string;\n\n  /**\n   * Target class to which this validation is applied.\n   */\n  target: Function | string;\n\n  /**\n   * Property of the object to be validated.\n   */\n  propertyName: string;\n\n  /**\n   * Constraint class that performs validation. Used only for custom validations.\n   */\n  constraintCls: Function;\n\n  /**\n   * Array of constraints of this validation.\n   */\n  constraints: any[];\n\n  /**\n   * Validation message to be shown in the case of error.\n   */\n  message: string | ((args: ValidationArguments) => string);\n\n  /**\n   * Validation groups used for this validation.\n   */\n  groups: string[] = [];\n\n  /**\n   * Indicates if validation must be performed always, no matter of validation groups used.\n   */\n  always?: boolean;\n\n  /**\n   * Specifies if validated value is an array and each of its item must be validated.\n   */\n  each: boolean = false;\n\n  /*\n   * A transient set of data passed through to the validation result for response mapping\n   */\n  context?: any = undefined;\n\n  /**\n   * Extra options specific to validation type.\n   */\n  validationTypeOptions: any;\n\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(args: ValidationMetadataArgs) {\n    this.type = args.type;\n    this.name = args.name;\n    this.target = args.target;\n    this.propertyName = args.propertyName;\n    this.constraints = args?.constraints;\n    this.constraintCls = args.constraintCls;\n    this.validationTypeOptions = args.validationTypeOptions;\n    if (args.validationOptions) {\n      this.message = args.validationOptions.message;\n      this.groups = args.validationOptions.groups;\n      this.always = args.validationOptions.always;\n      this.each = args.validationOptions.each;\n      this.context = args.validationOptions.context;\n    }\n  }\n}\n", "import { ValidationSchema } from './ValidationSchema';\nimport { ValidationMetadata } from '../metadata/ValidationMetadata';\nimport { ValidationMetadataArgs } from '../metadata/ValidationMetadataArgs';\nimport { ValidationOptions } from '../decorator/ValidationOptions';\n\n/**\n * Used to transform validation schemas to validation metadatas.\n */\nexport class ValidationSchemaToMetadataTransformer {\n  transform(schema: ValidationSchema): ValidationMetadata[] {\n    const metadatas: ValidationMetadata[] = [];\n    Object.keys(schema.properties).forEach(property => {\n      schema.properties[property].forEach(validation => {\n        const validationOptions: ValidationOptions = {\n          message: validation.message,\n          groups: validation.groups,\n          always: validation.always,\n          each: validation.each,\n        };\n        const args: ValidationMetadataArgs = {\n          type: validation.type,\n          name: validation.name,\n          target: schema.name,\n          propertyName: property,\n          constraints: validation.constraints,\n          validationTypeOptions: validation.options,\n          validationOptions: validationOptions,\n        };\n        metadatas.push(new ValidationMetadata(args));\n      });\n    });\n    return metadatas;\n  }\n}\n", "/**\n * Convert Map, Set to Array\n */\nexport function convertToArray<T>(val: Array<T> | Set<T> | Map<any, T>): Array<T> {\n  if (val instanceof Map) {\n    return Array.from(val.values());\n  }\n  return Array.isArray(val) ? val : Array.from(val);\n}\n", "/**\n * This function returns the global object across Node and browsers.\n *\n * Note: `globalThis` is the standardized approach however it has been added to\n * Node.js in version 12. We need to include this snippet until Node 12 EOL.\n */\nexport function getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: Cannot find name 'window'.\n  if (typeof window !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'window'.\n    return window;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore: Cannot find name 'self'.\n  if (typeof self !== 'undefined') {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'self'.\n    return self;\n  }\n}\n", "// https://github.com/TylorS/typed-is-promise/blob/abf1514e1b6961adfc75765476b0debb96b2c3ae/src/index.ts\n\nexport function isPromise<T = any>(p: any): p is Promise<T> {\n  return p !== null && typeof p === 'object' && typeof p.then === 'function';\n}\n", "export * from './convert-to-array.util';\nexport * from './get-global.util';\nexport * from './is-promise.util';\n", "import { ValidationMetadata } from './ValidationMetadata';\nimport { ConstraintMetadata } from './ConstraintMetadata';\nimport { ValidationSchema } from '../validation-schema/ValidationSchema';\nimport { ValidationSchemaToMetadataTransformer } from '../validation-schema/ValidationSchemaToMetadataTransformer';\nimport { getGlobal } from '../utils';\n\n/**\n * Storage all metadatas.\n */\nexport class MetadataStorage {\n  // -------------------------------------------------------------------------\n  // Private properties\n  // -------------------------------------------------------------------------\n\n  private validationMetadatas: Map<any, ValidationMetadata[]> = new Map();\n  private constraintMetadatas: Map<any, ConstraintMetadata[]> = new Map();\n\n  get hasValidationMetaData(): boolean {\n    return !!this.validationMetadatas.size;\n  }\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Adds a new validation metadata.\n   */\n  addValidationSchema(schema: ValidationSchema): void {\n    const validationMetadatas = new ValidationSchemaToMetadataTransformer().transform(schema);\n    validationMetadatas.forEach(validationMetadata => this.addValidationMetadata(validationMetadata));\n  }\n\n  /**\n   * Adds a new validation metadata.\n   */\n  addValidationMetadata(metadata: ValidationMetadata): void {\n    const existingMetadata = this.validationMetadatas.get(metadata.target);\n\n    if (existingMetadata) {\n      existingMetadata.push(metadata);\n    } else {\n      this.validationMetadatas.set(metadata.target, [metadata]);\n    }\n  }\n\n  /**\n   * Adds a new constraint metadata.\n   */\n  addConstraintMetadata(metadata: ConstraintMetadata): void {\n    const existingMetadata = this.constraintMetadatas.get(metadata.target);\n\n    if (existingMetadata) {\n      existingMetadata.push(metadata);\n    } else {\n      this.constraintMetadatas.set(metadata.target, [metadata]);\n    }\n  }\n\n  /**\n   * Groups metadata by their property names.\n   */\n  groupByPropertyName(metadata: ValidationMetadata[]): { [propertyName: string]: ValidationMetadata[] } {\n    const grouped: { [propertyName: string]: ValidationMetadata[] } = {};\n    metadata.forEach(metadata => {\n      if (!grouped[metadata.propertyName]) grouped[metadata.propertyName] = [];\n      grouped[metadata.propertyName].push(metadata);\n    });\n    return grouped;\n  }\n\n  /**\n   * Gets all validation metadatas for the given object with the given groups.\n   */\n  getTargetValidationMetadatas(\n    targetConstructor: Function,\n    targetSchema: string,\n    always: boolean,\n    strictGroups: boolean,\n    groups?: string[]\n  ): ValidationMetadata[] {\n    const includeMetadataBecauseOfAlwaysOption = (metadata: ValidationMetadata): boolean => {\n      // `metadata.always` overrides global default.\n      if (typeof metadata.always !== 'undefined') return metadata.always;\n\n      // `metadata.groups` overrides global default.\n      if (metadata.groups && metadata.groups.length) return false;\n\n      // Use global default.\n      return always;\n    };\n\n    const excludeMetadataBecauseOfStrictGroupsOption = (metadata: ValidationMetadata): boolean => {\n      if (strictGroups) {\n        // Validation is not using groups.\n        if (!groups || !groups.length) {\n          // `metadata.groups` has at least one group.\n          if (metadata.groups && metadata.groups.length) return true;\n        }\n      }\n\n      return false;\n    };\n\n    // get directly related to a target metadatas\n    const filteredForOriginalMetadatasSearch = this.validationMetadatas.get(targetConstructor) || [];\n    const originalMetadatas = filteredForOriginalMetadatasSearch.filter(metadata => {\n      if (metadata.target !== targetConstructor && metadata.target !== targetSchema) return false;\n      if (includeMetadataBecauseOfAlwaysOption(metadata)) return true;\n      if (excludeMetadataBecauseOfStrictGroupsOption(metadata)) return false;\n      if (groups && groups.length > 0)\n        return metadata.groups && !!metadata.groups.find(group => groups.indexOf(group) !== -1);\n\n      return true;\n    });\n\n    // get metadatas for inherited classes\n    const filteredForInheritedMetadatasSearch = [];\n    for (const [key, value] of this.validationMetadatas.entries()) {\n      if (targetConstructor.prototype instanceof key) {\n        filteredForInheritedMetadatasSearch.push(...value);\n      }\n    }\n    const inheritedMetadatas = filteredForInheritedMetadatasSearch.filter(metadata => {\n      // if target is a string it's means we validate against a schema, and there is no inheritance support for schemas\n      if (typeof metadata.target === 'string') return false;\n      if (metadata.target === targetConstructor) return false;\n      if (metadata.target instanceof Function && !(targetConstructor.prototype instanceof metadata.target))\n        return false;\n      if (includeMetadataBecauseOfAlwaysOption(metadata)) return true;\n      if (excludeMetadataBecauseOfStrictGroupsOption(metadata)) return false;\n      if (groups && groups.length > 0)\n        return metadata.groups && !!metadata.groups.find(group => groups.indexOf(group) !== -1);\n\n      return true;\n    });\n\n    // filter out duplicate metadatas, prefer original metadatas instead of inherited metadatas\n    const uniqueInheritedMetadatas = inheritedMetadatas.filter(inheritedMetadata => {\n      return !originalMetadatas.find(originalMetadata => {\n        return (\n          originalMetadata.propertyName === inheritedMetadata.propertyName &&\n          originalMetadata.type === inheritedMetadata.type\n        );\n      });\n    });\n\n    return originalMetadatas.concat(uniqueInheritedMetadatas);\n  }\n\n  /**\n   * Gets all validator constraints for the given object.\n   */\n  getTargetValidatorConstraints(target: Function): ConstraintMetadata[] {\n    return this.constraintMetadatas.get(target) || [];\n  }\n}\n\n/**\n * Gets metadata storage.\n * Metadata storage follows the best practices and stores metadata in a global variable.\n */\nexport function getMetadataStorage(): MetadataStorage {\n  const global = getGlobal();\n\n  if (!global.classValidatorMetadataStorage) {\n    global.classValidatorMetadataStorage = new MetadataStorage();\n  }\n\n  return global.classValidatorMetadataStorage;\n}\n", "/**\n * Validation error description.\n */\nexport class ValidationError {\n  /**\n   * Object that was validated.\n   *\n   * OPTIONAL - configurable via the ValidatorOptions.validationError.target option\n   */\n  target?: object;\n\n  /**\n   * Object's property that haven't pass validation.\n   */\n  property: string;\n\n  /**\n   * Value that haven't pass a validation.\n   *\n   * OPTIONAL - configurable via the ValidatorOptions.validationError.value option\n   */\n  value?: any;\n\n  /**\n   * Constraints that failed validation with error messages.\n   */\n  constraints?: {\n    [type: string]: string;\n  };\n\n  /**\n   * Contains all nested validation errors of the property.\n   */\n  children?: ValidationError[];\n\n  /*\n   * A transient set of data passed through to the validation result for response mapping\n   */\n  contexts?: {\n    [type: string]: any;\n  };\n\n  /**\n   *\n   * @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability\n   * @param hasParent true when the error is a child of an another one\n   * @param parentPath path as string to the parent of this property\n   * @param showConstraintMessages show constraint messages instead of constraint names\n   */\n  toString(\n    shouldDecorate: boolean = false,\n    hasParent: boolean = false,\n    parentPath: string = ``,\n    showConstraintMessages: boolean = false\n  ): string {\n    const boldStart = shouldDecorate ? `\\x1b[1m` : ``;\n    const boldEnd = shouldDecorate ? `\\x1b[22m` : ``;\n    const constraintsToString = () =>\n      (showConstraintMessages ? Object.values : Object.keys)(this.constraints ?? {}).join(`, `);\n    const propConstraintFailed = (propertyName: string): string =>\n      ` - property ${boldStart}${parentPath}${propertyName}${boldEnd} has failed the following constraints: ${boldStart}${constraintsToString()}${boldEnd} \\n`;\n\n    if (!hasParent) {\n      return (\n        `An instance of ${boldStart}${\n          this.target ? this.target.constructor.name : 'an object'\n        }${boldEnd} has failed the validation:\\n` +\n        (this.constraints ? propConstraintFailed(this.property) : ``) +\n        (this.children\n          ? this.children\n              .map(childError => childError.toString(shouldDecorate, true, this.property, showConstraintMessages))\n              .join(``)\n          : ``)\n      );\n    } else {\n      // we format numbers as array indexes for better readability.\n      const formattedProperty = Number.isInteger(+this.property)\n        ? `[${this.property}]`\n        : `${parentPath ? `.` : ``}${this.property}`;\n\n      if (this.constraints) {\n        return propConstraintFailed(formattedProperty);\n      } else {\n        return this.children\n          ? this.children\n              .map(childError =>\n                childError.toString(shouldDecorate, true, `${parentPath}${formattedProperty}`, showConstraintMessages)\n              )\n              .join(``)\n          : ``;\n      }\n    }\n  }\n}\n", "/**\n * Validation types.\n */\nexport class ValidationTypes {\n  /* system */\n  static CUSTOM_VALIDATION = 'customValidation'; // done\n  static NESTED_VALIDATION = 'nestedValidation'; // done\n  static PROMISE_VALIDATION = 'promiseValidation'; // done\n  static CONDITIONAL_VALIDATION = 'conditionalValidation'; // done\n  static WHITELIST = 'whitelistValidation'; // done\n  static IS_DEFINED = 'isDefined'; // done\n\n  /**\n   * Checks if validation type is valid.\n   */\n  static isValid(type: string): boolean {\n    return (\n      type !== 'isValid' &&\n      type !== 'getMessage' &&\n      Object.keys(this)\n        .map(key => (this as any)[key])\n        .indexOf(type) !== -1\n    );\n  }\n}\n", "import { ValidationArguments } from './ValidationArguments';\n\n/**\n * Convert the constraint to a string to be shown in an error\n */\nexport function constraintToString(constraint: unknown): string {\n  if (Array.isArray(constraint)) {\n    return constraint.join(', ');\n  }\n\n  if (typeof constraint === 'symbol') {\n    constraint = constraint.description;\n  }\n\n  return `${constraint}`;\n}\n\nexport class ValidationUtils {\n  static replaceMessageSpecialTokens(\n    message: string | ((args: ValidationArguments) => string),\n    validationArguments: ValidationArguments\n  ): string {\n    let messageString: string;\n    if (message instanceof Function) {\n      messageString = (message as (args: ValidationArguments) => string)(validationArguments);\n    } else if (typeof message === 'string') {\n      messageString = message;\n    }\n\n    if (messageString && Array.isArray(validationArguments.constraints)) {\n      validationArguments.constraints.forEach((constraint, index) => {\n        messageString = messageString.replace(\n          new RegExp(`\\\\$constraint${index + 1}`, 'g'),\n          constraintToString(constraint)\n        );\n      });\n    }\n\n    if (\n      messageString &&\n      validationArguments.value !== undefined &&\n      validationArguments.value !== null &&\n      typeof validationArguments.value === 'string'\n    )\n      messageString = messageString.replace(/\\$value/g, validationArguments.value);\n    if (messageString) messageString = messageString.replace(/\\$property/g, validationArguments.property);\n    if (messageString) messageString = messageString.replace(/\\$target/g, validationArguments.targetName);\n\n    return messageString;\n  }\n}\n", "import { Validator } from './Validator';\nimport { ValidationError } from './ValidationError';\nimport { ValidationMetadata } from '../metadata/ValidationMetadata';\nimport { ValidatorOptions } from './ValidatorOptions';\nimport { ValidationTypes } from './ValidationTypes';\nimport { ConstraintMetadata } from '../metadata/ConstraintMetadata';\nimport { ValidationArguments } from './ValidationArguments';\nimport { ValidationUtils } from './ValidationUtils';\nimport { isPromise, convertToArray } from '../utils';\nimport { getMetadataStorage } from '../metadata/MetadataStorage';\n\n/**\n * Executes validation over given object.\n */\nexport class ValidationExecutor {\n  // -------------------------------------------------------------------------\n  // Properties\n  // -------------------------------------------------------------------------\n\n  awaitingPromises: Promise<any>[] = [];\n  ignoreAsyncValidations: boolean = false;\n\n  // -------------------------------------------------------------------------\n  // Private Properties\n  // -------------------------------------------------------------------------\n\n  private metadataStorage = getMetadataStorage();\n\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(private validator: Validator, private validatorOptions?: ValidatorOptions) {}\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  execute(object: object, targetSchema: string, validationErrors: ValidationError[]): void {\n    /**\n     * If there is no metadata registered it means possibly the dependencies are not flatterned and\n     * more than one instance is used.\n     *\n     * TODO: This needs proper handling, forcing to use the same container or some other proper solution.\n     */\n    if (!this.metadataStorage.hasValidationMetaData && this.validatorOptions?.enableDebugMessages === true) {\n      console.warn(\n        `No validation metadata found. No validation will be  performed. There are multiple possible reasons:\\n` +\n          `  - There may be multiple class-validator versions installed. You will need to flatten your dependencies to fix the issue.\\n` +\n          `  - This validation runs before any file with validation decorator was parsed by NodeJS.`\n      );\n    }\n\n    const groups = this.validatorOptions ? this.validatorOptions.groups : undefined;\n    const strictGroups = (this.validatorOptions && this.validatorOptions.strictGroups) || false;\n    const always = (this.validatorOptions && this.validatorOptions.always) || false;\n    /** Forbid unknown values are turned on by default and any other value than false will enable it. */\n    const forbidUnknownValues =\n      this.validatorOptions?.forbidUnknownValues === undefined || this.validatorOptions.forbidUnknownValues !== false;\n\n    const targetMetadatas = this.metadataStorage.getTargetValidationMetadatas(\n      object.constructor,\n      targetSchema,\n      always,\n      strictGroups,\n      groups\n    );\n    const groupedMetadatas = this.metadataStorage.groupByPropertyName(targetMetadatas);\n\n    if (this.validatorOptions && forbidUnknownValues && !targetMetadatas.length) {\n      const validationError = new ValidationError();\n\n      if (\n        !this.validatorOptions ||\n        !this.validatorOptions.validationError ||\n        this.validatorOptions.validationError.target === undefined ||\n        this.validatorOptions.validationError.target === true\n      )\n        validationError.target = object;\n\n      validationError.value = undefined;\n      validationError.property = undefined;\n      validationError.children = [];\n      validationError.constraints = { unknownValue: 'an unknown value was passed to the validate function' };\n\n      validationErrors.push(validationError);\n\n      return;\n    }\n\n    if (this.validatorOptions && this.validatorOptions.whitelist)\n      this.whitelist(object, groupedMetadatas, validationErrors);\n\n    // General validation\n    Object.keys(groupedMetadatas).forEach(propertyName => {\n      const value = (object as any)[propertyName];\n      const definedMetadatas = groupedMetadatas[propertyName].filter(\n        metadata => metadata.type === ValidationTypes.IS_DEFINED\n      );\n      const metadatas = groupedMetadatas[propertyName].filter(\n        metadata => metadata.type !== ValidationTypes.IS_DEFINED && metadata.type !== ValidationTypes.WHITELIST\n      );\n\n      if (\n        value instanceof Promise &&\n        metadatas.find(metadata => metadata.type === ValidationTypes.PROMISE_VALIDATION)\n      ) {\n        this.awaitingPromises.push(\n          value.then(resolvedValue => {\n            this.performValidations(object, resolvedValue, propertyName, definedMetadatas, metadatas, validationErrors);\n          })\n        );\n      } else {\n        this.performValidations(object, value, propertyName, definedMetadatas, metadatas, validationErrors);\n      }\n    });\n  }\n\n  whitelist(\n    object: any,\n    groupedMetadatas: { [propertyName: string]: ValidationMetadata[] },\n    validationErrors: ValidationError[]\n  ): void {\n    const notAllowedProperties: string[] = [];\n\n    Object.keys(object).forEach(propertyName => {\n      // does this property have no metadata?\n      if (!groupedMetadatas[propertyName] || groupedMetadatas[propertyName].length === 0)\n        notAllowedProperties.push(propertyName);\n    });\n\n    if (notAllowedProperties.length > 0) {\n      if (this.validatorOptions && this.validatorOptions.forbidNonWhitelisted) {\n        // throw errors\n        notAllowedProperties.forEach(property => {\n          const validationError: ValidationError = this.generateValidationError(object, object[property], property);\n          validationError.constraints = { [ValidationTypes.WHITELIST]: `property ${property} should not exist` };\n          validationError.children = undefined;\n          validationErrors.push(validationError);\n        });\n      } else {\n        // strip non allowed properties\n        notAllowedProperties.forEach(property => delete object[property]);\n      }\n    }\n  }\n\n  stripEmptyErrors(errors: ValidationError[]): ValidationError[] {\n    return errors.filter(error => {\n      if (error.children) {\n        error.children = this.stripEmptyErrors(error.children);\n      }\n\n      if (Object.keys(error.constraints).length === 0) {\n        if (error.children.length === 0) {\n          return false;\n        } else {\n          delete error.constraints;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  // -------------------------------------------------------------------------\n  // Private Methods\n  // -------------------------------------------------------------------------\n\n  private performValidations(\n    object: any,\n    value: any,\n    propertyName: string,\n    definedMetadatas: ValidationMetadata[],\n    metadatas: ValidationMetadata[],\n    validationErrors: ValidationError[]\n  ): void {\n    const customValidationMetadatas = metadatas.filter(metadata => metadata.type === ValidationTypes.CUSTOM_VALIDATION);\n    const nestedValidationMetadatas = metadatas.filter(metadata => metadata.type === ValidationTypes.NESTED_VALIDATION);\n    const conditionalValidationMetadatas = metadatas.filter(\n      metadata => metadata.type === ValidationTypes.CONDITIONAL_VALIDATION\n    );\n\n    const validationError = this.generateValidationError(object, value, propertyName);\n    validationErrors.push(validationError);\n\n    const canValidate = this.conditionalValidations(object, value, conditionalValidationMetadatas);\n    if (!canValidate) {\n      return;\n    }\n\n    // handle IS_DEFINED validation type the special way - it should work no matter skipUndefinedProperties/skipMissingProperties is set or not\n    this.customValidations(object, value, definedMetadatas, validationError);\n    this.mapContexts(object, value, definedMetadatas, validationError);\n\n    if (value === undefined && this.validatorOptions && this.validatorOptions.skipUndefinedProperties === true) {\n      return;\n    }\n\n    if (value === null && this.validatorOptions && this.validatorOptions.skipNullProperties === true) {\n      return;\n    }\n\n    if (\n      (value === null || value === undefined) &&\n      this.validatorOptions &&\n      this.validatorOptions.skipMissingProperties === true\n    ) {\n      return;\n    }\n\n    this.customValidations(object, value, customValidationMetadatas, validationError);\n    this.nestedValidations(value, nestedValidationMetadatas, validationError);\n\n    this.mapContexts(object, value, metadatas, validationError);\n    this.mapContexts(object, value, customValidationMetadatas, validationError);\n  }\n\n  private generateValidationError(object: object, value: any, propertyName: string): ValidationError {\n    const validationError = new ValidationError();\n\n    if (\n      !this.validatorOptions ||\n      !this.validatorOptions.validationError ||\n      this.validatorOptions.validationError.target === undefined ||\n      this.validatorOptions.validationError.target === true\n    )\n      validationError.target = object;\n\n    if (\n      !this.validatorOptions ||\n      !this.validatorOptions.validationError ||\n      this.validatorOptions.validationError.value === undefined ||\n      this.validatorOptions.validationError.value === true\n    )\n      validationError.value = value;\n\n    validationError.property = propertyName;\n    validationError.children = [];\n    validationError.constraints = {};\n\n    return validationError;\n  }\n\n  private conditionalValidations(object: object, value: any, metadatas: ValidationMetadata[]): ValidationMetadata[] {\n    return metadatas\n      .map(metadata => metadata.constraints[0](object, value))\n      .reduce((resultA, resultB) => resultA && resultB, true);\n  }\n\n  private customValidations(object: object, value: any, metadatas: ValidationMetadata[], error: ValidationError): void {\n    metadatas.forEach(metadata => {\n      this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls).forEach(customConstraintMetadata => {\n        if (customConstraintMetadata.async && this.ignoreAsyncValidations) return;\n        if (\n          this.validatorOptions &&\n          this.validatorOptions.stopAtFirstError &&\n          Object.keys(error.constraints || {}).length > 0\n        )\n          return;\n\n        const validationArguments: ValidationArguments = {\n          targetName: object.constructor ? (object.constructor as any).name : undefined,\n          property: metadata.propertyName,\n          object: object,\n          value: value,\n          constraints: metadata.constraints,\n        };\n\n        if (!metadata.each || !(Array.isArray(value) || value instanceof Set || value instanceof Map)) {\n          const validatedValue = customConstraintMetadata.instance.validate(value, validationArguments);\n          if (isPromise(validatedValue)) {\n            const promise = validatedValue.then(isValid => {\n              if (!isValid) {\n                const [type, message] = this.createValidationError(object, value, metadata, customConstraintMetadata);\n                error.constraints[type] = message;\n                if (metadata.context) {\n                  if (!error.contexts) {\n                    error.contexts = {};\n                  }\n                  error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                }\n              }\n            });\n            this.awaitingPromises.push(promise);\n          } else {\n            if (!validatedValue) {\n              const [type, message] = this.createValidationError(object, value, metadata, customConstraintMetadata);\n              error.constraints[type] = message;\n            }\n          }\n\n          return;\n        }\n\n        // convert set and map into array\n        const arrayValue = convertToArray(value);\n        // Validation needs to be applied to each array item\n        const validatedSubValues = arrayValue.map((subValue: any) =>\n          customConstraintMetadata.instance.validate(subValue, validationArguments)\n        );\n        const validationIsAsync = validatedSubValues.some((validatedSubValue: boolean | Promise<boolean>) =>\n          isPromise(validatedSubValue)\n        );\n\n        if (validationIsAsync) {\n          // Wrap plain values (if any) in promises, so that all are async\n          const asyncValidatedSubValues = validatedSubValues.map((validatedSubValue: boolean | Promise<boolean>) =>\n            isPromise(validatedSubValue) ? validatedSubValue : Promise.resolve(validatedSubValue)\n          );\n          const asyncValidationIsFinishedPromise = Promise.all(asyncValidatedSubValues).then(\n            (flatValidatedValues: boolean[]) => {\n              const validationResult = flatValidatedValues.every((isValid: boolean) => isValid);\n              if (!validationResult) {\n                const [type, message] = this.createValidationError(object, value, metadata, customConstraintMetadata);\n                error.constraints[type] = message;\n                if (metadata.context) {\n                  if (!error.contexts) {\n                    error.contexts = {};\n                  }\n                  error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                }\n              }\n            }\n          );\n\n          this.awaitingPromises.push(asyncValidationIsFinishedPromise);\n\n          return;\n        }\n\n        const validationResult = validatedSubValues.every((isValid: boolean) => isValid);\n        if (!validationResult) {\n          const [type, message] = this.createValidationError(object, value, metadata, customConstraintMetadata);\n          error.constraints[type] = message;\n        }\n      });\n    });\n  }\n\n  private nestedValidations(value: any, metadatas: ValidationMetadata[], error: ValidationError): void {\n    if (value === void 0) {\n      return;\n    }\n\n    metadatas.forEach(metadata => {\n      if (metadata.type !== ValidationTypes.NESTED_VALIDATION && metadata.type !== ValidationTypes.PROMISE_VALIDATION) {\n        return;\n      } else if (\n        this.validatorOptions &&\n        this.validatorOptions.stopAtFirstError &&\n        Object.keys(error.constraints || {}).length > 0\n      ) {\n        return;\n      }\n\n      if (Array.isArray(value) || value instanceof Set || value instanceof Map) {\n        // Treats Set as an array - as index of Set value is value itself and it is common case to have Object as value\n        const arrayLikeValue = value instanceof Set ? Array.from(value) : value;\n        arrayLikeValue.forEach((subValue: any, index: any) => {\n          this.performValidations(value, subValue, index.toString(), [], metadatas, error.children);\n        });\n      } else if (value instanceof Object) {\n        const targetSchema = typeof metadata.target === 'string' ? metadata.target : metadata.target.name;\n        this.execute(value, targetSchema, error.children);\n      } else {\n        const [type, message] = this.createValidationError(metadata.target as object, value, metadata);\n        error.constraints[type] = message;\n      }\n    });\n  }\n\n  private mapContexts(object: object, value: any, metadatas: ValidationMetadata[], error: ValidationError): void {\n    return metadatas.forEach(metadata => {\n      if (metadata.context) {\n        let customConstraint;\n        if (metadata.type === ValidationTypes.CUSTOM_VALIDATION) {\n          const customConstraints = this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls);\n          customConstraint = customConstraints[0];\n        }\n\n        const type = this.getConstraintType(metadata, customConstraint);\n\n        if (error.constraints[type]) {\n          if (!error.contexts) {\n            error.contexts = {};\n          }\n\n          error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n        }\n      }\n    });\n  }\n\n  private createValidationError(\n    object: object,\n    value: any,\n    metadata: ValidationMetadata,\n    customValidatorMetadata?: ConstraintMetadata\n  ): [string, string] {\n    const targetName = object.constructor ? (object.constructor as any).name : undefined;\n    const type = this.getConstraintType(metadata, customValidatorMetadata);\n    const validationArguments: ValidationArguments = {\n      targetName: targetName,\n      property: metadata.propertyName,\n      object: object,\n      value: value,\n      constraints: metadata.constraints,\n    };\n\n    let message = metadata.message || '';\n    if (\n      !metadata.message &&\n      (!this.validatorOptions || (this.validatorOptions && !this.validatorOptions.dismissDefaultMessages))\n    ) {\n      if (customValidatorMetadata && customValidatorMetadata.instance.defaultMessage instanceof Function) {\n        message = customValidatorMetadata.instance.defaultMessage(validationArguments);\n      }\n    }\n\n    const messageString = ValidationUtils.replaceMessageSpecialTokens(message, validationArguments);\n    return [type, messageString];\n  }\n\n  private getConstraintType(metadata: ValidationMetadata, customValidatorMetadata?: ConstraintMetadata): string {\n    const type = customValidatorMetadata && customValidatorMetadata.name ? customValidatorMetadata.name : metadata.type;\n    return type;\n  }\n}\n", "import { ValidationError } from './ValidationError';\nimport { ValidatorOptions } from './ValidatorOptions';\nimport { ValidationExecutor } from './ValidationExecutor';\nimport { ValidationOptions } from '../decorator/ValidationOptions';\n\n/**\n * Validator performs validation of the given object based on its metadata.\n */\nexport class Validator {\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Performs validation of the given object based on decorators used in given object class.\n   */\n  validate(object: object, options?: ValidatorOptions): Promise<ValidationError[]>;\n\n  /**\n   * Performs validation of the given object based on validation schema.\n   */\n  validate(schemaName: string, object: object, options?: ValidatorOptions): Promise<ValidationError[]>;\n\n  /**\n   * Performs validation of the given object based on decorators or validation schema.\n   */\n  validate(\n    objectOrSchemaName: object | string,\n    objectOrValidationOptions: object | ValidationOptions,\n    maybeValidatorOptions?: ValidatorOptions\n  ): Promise<ValidationError[]> {\n    return this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);\n  }\n\n  /**\n   * Performs validation of the given object based on decorators used in given object class and reject on error.\n   */\n  validateOrReject(object: object, options?: ValidatorOptions): Promise<void>;\n\n  /**\n   * Performs validation of the given object based on validation schema and reject on error.\n   */\n  validateOrReject(schemaName: string, object: object, options?: ValidatorOptions): Promise<void>;\n\n  /**\n   * Performs validation of the given object based on decorators or validation schema and reject on error.\n   */\n  async validateOrReject(\n    objectOrSchemaName: object | string,\n    objectOrValidationOptions: object | ValidationOptions,\n    maybeValidatorOptions?: ValidatorOptions\n  ): Promise<void> {\n    const errors = await this.coreValidate(objectOrSchemaName, objectOrValidationOptions, maybeValidatorOptions);\n    if (errors.length) return Promise.reject(errors);\n  }\n\n  /**\n   * Performs validation of the given object based on decorators used in given object class.\n   * NOTE: This method completely ignores all async validations.\n   */\n  validateSync(object: object, options?: ValidatorOptions): ValidationError[];\n\n  /**\n   * Performs validation of the given object based on validation schema.\n   */\n  validateSync(schemaName: string, object: object, options?: ValidatorOptions): ValidationError[];\n\n  /**\n   * Performs validation of the given object based on decorators or validation schema.\n   */\n  validateSync(\n    objectOrSchemaName: object | string,\n    objectOrValidationOptions: object | ValidationOptions,\n    maybeValidatorOptions?: ValidatorOptions\n  ): ValidationError[] {\n    const object = typeof objectOrSchemaName === 'string' ? (objectOrValidationOptions as object) : objectOrSchemaName;\n    const options =\n      typeof objectOrSchemaName === 'string' ? maybeValidatorOptions : (objectOrValidationOptions as ValidationOptions);\n    const schema = typeof objectOrSchemaName === 'string' ? objectOrSchemaName : undefined;\n\n    const executor = new ValidationExecutor(this, options);\n    executor.ignoreAsyncValidations = true;\n    const validationErrors: ValidationError[] = [];\n    executor.execute(object, schema, validationErrors);\n    return executor.stripEmptyErrors(validationErrors);\n  }\n\n  // -------------------------------------------------------------------------\n  // Private Properties\n  // -------------------------------------------------------------------------\n  /**\n   * Performs validation of the given object based on decorators or validation schema.\n   * Common method for `validateOrReject` and `validate` methods.\n   */\n  private coreValidate(\n    objectOrSchemaName: object | string,\n    objectOrValidationOptions: object | ValidationOptions,\n    maybeValidatorOptions?: ValidatorOptions\n  ): Promise<ValidationError[]> {\n    const object = typeof objectOrSchemaName === 'string' ? (objectOrValidationOptions as object) : objectOrSchemaName;\n    const options =\n      typeof objectOrSchemaName === 'string' ? maybeValidatorOptions : (objectOrValidationOptions as ValidationOptions);\n    const schema = typeof objectOrSchemaName === 'string' ? objectOrSchemaName : undefined;\n\n    const executor = new ValidationExecutor(this, options);\n    const validationErrors: ValidationError[] = [];\n    executor.execute(object, schema, validationErrors);\n\n    return Promise.all(executor.awaitingPromises).then(() => {\n      return executor.stripEmptyErrors(validationErrors);\n    });\n  }\n}\n", "/**\n * Container options.\n */\nexport interface UseContainerOptions {\n  /**\n   * If set to true, then default container will be used in the case if given container haven't returned anything.\n   */\n  fallback?: boolean;\n\n  /**\n   * If set to true, then default container will be used in the case if given container thrown an exception.\n   */\n  fallbackOnErrors?: boolean;\n}\n\n/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nconst defaultContainer: { get<T>(someClass: { new (...args: any[]): T } | Function): T } = new (class {\n  private instances: { type: Function; object: any }[] = [];\n  get<T>(someClass: { new (...args: any[]): T }): T {\n    let instance = this.instances.find(instance => instance.type === someClass);\n    if (!instance) {\n      instance = { type: someClass, object: new someClass() };\n      this.instances.push(instance);\n    }\n\n    return instance.object;\n  }\n})();\n\nlet userContainer: { get<T>(someClass: { new (...args: any[]): T } | Function): T };\nlet userContainerOptions: UseContainerOptions;\n\n/**\n * Sets container to be used by this library.\n */\nexport function useContainer(iocContainer: { get(someClass: any): any }, options?: UseContainerOptions): void {\n  userContainer = iocContainer;\n  userContainerOptions = options;\n}\n\n/**\n * Gets the IOC container used by this library.\n */\nexport function getFromContainer<T>(someClass: { new (...args: any[]): T } | Function): T {\n  if (userContainer) {\n    try {\n      const instance = userContainer.get(someClass);\n      if (instance) return instance;\n\n      if (!userContainerOptions || !userContainerOptions.fallback) return instance;\n    } catch (error) {\n      if (!userContainerOptions || !userContainerOptions.fallbackOnErrors) throw error;\n    }\n  }\n  return defaultContainer.get<T>(someClass);\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * If object has both allowed and not allowed properties a validation error will be thrown.\n */\nexport function Allow(validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.WHITELIST,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidatorConstraintInterface } from '../validation/ValidatorConstraintInterface';\nimport { getFromContainer } from '../container';\n\n/**\n * This metadata interface contains information for custom validators.\n */\nexport class ConstraintMetadata {\n  // -------------------------------------------------------------------------\n  // Properties\n  // -------------------------------------------------------------------------\n\n  /**\n   * Target class which performs validation.\n   */\n  target: Function;\n\n  /**\n   * Custom validation's name, that will be used as validation error type.\n   */\n  name: string;\n\n  /**\n   * Indicates if this validation is asynchronous or not.\n   */\n  async: boolean;\n\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(target: Function, name?: string, async: boolean = false) {\n    this.target = target;\n    this.name = name;\n    this.async = async;\n  }\n\n  // -------------------------------------------------------------------------\n  // Accessors\n  // -------------------------------------------------------------------------\n\n  /**\n   * Instance of the target custom validation class which performs validation.\n   */\n  get instance(): ValidatorConstraintInterface {\n    return getFromContainer<ValidatorConstraintInterface>(this.target);\n  }\n}\n", "import { ConstraintMetadata } from './metadata/ConstraintMetadata';\nimport { ValidatorConstraintInterface } from './validation/ValidatorConstraintInterface';\nimport { ValidationMetadata } from './metadata/ValidationMetadata';\nimport { ValidationMetadataArgs } from './metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from './validation/ValidationTypes';\nimport { ValidationArguments } from './validation/ValidationArguments';\nimport { getFromContainer } from './container';\nimport { MetadataStorage, getMetadataStorage } from './metadata/MetadataStorage';\nimport { ValidationOptions } from './decorator/ValidationOptions';\n\nexport interface ValidationDecoratorOptions {\n  /**\n   * Target object to be validated.\n   */\n  target: Function;\n\n  /**\n   * Target object's property name to be validated.\n   */\n  propertyName: string;\n\n  /**\n   * Name of the validation that is being registered.\n   */\n  name?: string;\n\n  /**\n   * Indicates if this decorator will perform async validation.\n   */\n  async?: boolean;\n\n  /**\n   * Validator options.\n   */\n  options?: ValidationOptions;\n\n  /**\n   * Array of validation constraints.\n   */\n  constraints?: any[];\n\n  /**\n   * Validator that performs validation.\n   */\n  validator: ValidatorConstraintInterface | Function;\n}\n\n/**\n * Registers a custom validation decorator.\n */\nexport function registerDecorator(options: ValidationDecoratorOptions): void {\n  let constraintCls: Function;\n  if (options.validator instanceof Function) {\n    constraintCls = options.validator;\n    const constraintClasses = getFromContainer(MetadataStorage).getTargetValidatorConstraints(options.validator);\n    if (constraintClasses.length > 1) {\n      throw `More than one implementation of ValidatorConstraintInterface found for validator on: ${options.target.name}:${options.propertyName}`;\n    }\n  } else {\n    const validator = options.validator;\n    constraintCls = class CustomConstraint implements ValidatorConstraintInterface {\n      validate(value: any, validationArguments?: ValidationArguments): Promise<boolean> | boolean {\n        return validator.validate(value, validationArguments);\n      }\n\n      defaultMessage(validationArguments?: ValidationArguments): string {\n        if (validator.defaultMessage) {\n          return validator.defaultMessage(validationArguments);\n        }\n\n        return '';\n      }\n    };\n    getMetadataStorage().addConstraintMetadata(new ConstraintMetadata(constraintCls, options.name, options.async));\n  }\n\n  const validationMetadataArgs: ValidationMetadataArgs = {\n    type: options.name && ValidationTypes.isValid(options.name) ? options.name : ValidationTypes.CUSTOM_VALIDATION,\n    name: options.name,\n    target: options.target,\n    propertyName: options.propertyName,\n    validationOptions: options.options,\n    constraintCls: constraintCls,\n    constraints: options.constraints,\n  };\n  getMetadataStorage().addValidationMetadata(new ValidationMetadata(validationMetadataArgs));\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { registerDecorator } from '../../register-decorator';\nimport { ValidationArguments } from '../../validation/ValidationArguments';\nimport { ValidatorConstraintInterface } from '../../validation/ValidatorConstraintInterface';\n\nexport interface ValidateByOptions {\n  name: string;\n  constraints?: any[];\n  validator: ValidatorConstraintInterface | Function;\n  async?: boolean;\n}\n\nexport function buildMessage(\n  impl: (eachPrefix: string, args?: ValidationArguments) => string,\n  validationOptions?: ValidationOptions\n): (validationArguments?: ValidationArguments) => string {\n  return (validationArguments?: ValidationArguments): string => {\n    const eachPrefix = validationOptions && validationOptions.each ? 'each value in ' : '';\n    return impl(eachPrefix, validationArguments);\n  };\n}\n\nexport function ValidateBy(options: ValidateByOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      name: options.name,\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: options.constraints,\n      validator: options.validator,\n    });\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\n\n// isDefined is (yet) a special case\nexport const IS_DEFINED = ValidationTypes.IS_DEFINED;\n\n/**\n * Checks if value is defined (!== undefined, !== null).\n */\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\n/**\n * Checks if value is defined (!== undefined, !== null).\n */\nexport function IsDefined(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DEFINED,\n      validator: {\n        validate: (value): boolean => isDefined(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not be null or undefined',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Checks if value is missing and if so, ignores all validators.\n */\nexport function IsOptional(validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [\n        (object: any, value: any): boolean => {\n          return object[propertyName] !== null && object[propertyName] !== undefined;\n        },\n      ],\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ConstraintMetadata } from '../../metadata/ConstraintMetadata';\n\n/**\n * Registers custom validator class.\n */\nexport function ValidatorConstraint(options?: { name?: string; async?: boolean }) {\n  return function (target: Function): void {\n    const isAsync = options && options.async;\n    let name = options && options.name ? options.name : '';\n    if (!name) {\n      name = (target as any).name;\n      if (!name)\n        // generate name if it was not given\n        name = name.replace(/\\.?([A-Z]+)/g, (x, y) => '_' + (y as string).toLowerCase()).replace(/^_/, '');\n    }\n    const metadata = new ConstraintMetadata(target, name, isAsync);\n    getMetadataStorage().addConstraintMetadata(metadata);\n  };\n}\n\n/**\n * Performs validation based on the given custom validation class.\n * Validation class must be decorated with ValidatorConstraint decorator.\n */\nexport function Validate(constraintClass: Function, validationOptions?: ValidationOptions): PropertyDecorator;\nexport function Validate(\n  constraintClass: Function,\n  constraints?: any[],\n  validationOptions?: ValidationOptions\n): PropertyDecorator;\nexport function Validate(\n  constraintClass: Function,\n  constraintsOrValidationOptions?: any[] | ValidationOptions,\n  maybeValidationOptions?: ValidationOptions\n): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.CUSTOM_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraintCls: constraintClass,\n      constraints: Array.isArray(constraintsOrValidationOptions) ? constraintsOrValidationOptions : undefined,\n      validationOptions: !Array.isArray(constraintsOrValidationOptions)\n        ? constraintsOrValidationOptions\n        : maybeValidationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Ignores the other validators on a property when the provided condition function returns false.\n */\nexport function ValidateIf(\n  condition: (object: any, value: any) => boolean,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [condition],\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidateNested(validationOptions?: ValidationOptions): PropertyDecorator {\n  const opts: ValidationOptions = { ...validationOptions };\n  const eachPrefix = opts.each ? 'each value in ' : '';\n  opts.message = opts.message || eachPrefix + 'nested property $property must be either object or array';\n\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.NESTED_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: opts,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { ValidationMetadataArgs } from '../../metadata/ValidationMetadataArgs';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n\n/**\n * Resolve promise before validation\n */\nexport function ValidatePromise(validationOptions?: ValidationOptions): PropertyDecorator {\n  return function (object: object, propertyName: string): void {\n    const args: ValidationMetadataArgs = {\n      type: ValidationTypes.PROMISE_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: validationOptions,\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = merge;\n\nfunction merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLatLong;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lat = /^\\(?[+-]?(90(\\.0+)?|[1-8]?\\d(\\.\\d+)?)$/;\nvar long = /^\\s?[+-]?(180(\\.0+)?|1[0-7]\\d(\\.\\d+)?|\\d{1,2}(\\.\\d+)?)\\)?$/;\nvar latDMS = /^(([1-8]?\\d)\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|90\\D+0\\D+0)\\D+[NSns]?$/i;\nvar longDMS = /^\\s*([1-7]?\\d{1,2}\\D+([1-5]?\\d|60)\\D+([1-5]?\\d|60)(\\.\\d+)?|180\\D+0\\D+0)\\D+[EWew]?$/i;\nvar defaultLatLongOptions = {\n  checkDMS: false\n};\n\nfunction isLatLong(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultLatLongOptions);\n  if (!str.includes(',')) return false;\n  var pair = str.split(',');\n  if (pair[0].startsWith('(') && !pair[1].endsWith(')') || pair[1].endsWith(')') && !pair[0].startsWith('(')) return false;\n\n  if (options.checkDMS) {\n    return latDMS.test(pair[0]) && longDMS.test(pair[1]);\n  }\n\n  return lat.test(pair[0]) && long.test(pair[1]);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport isLatLongValidator from 'validator/lib/isLatLong';\n\nexport const IS_LATLONG = 'isLatLong';\n\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function isLatLong(value: string): boolean {\n  return typeof value === 'string' && isLatLongValidator(value);\n}\n\n/**\n * Checks if a value is string in format a \"latitude,longitude\".\n */\nexport function IsLatLong(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LATLONG,\n      validator: {\n        validate: (value, args): boolean => isLatLong(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a latitude,longitude string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport { isLatLong } from './IsLatLong';\n\nexport const IS_LATITUDE = 'isLatitude';\n\n/**\n * Checks if a given value is a latitude.\n */\nexport function isLatitude(value: string): boolean {\n  return (typeof value === 'number' || typeof value === 'string') && isLatLong(`${value},0`);\n}\n\n/**\n * Checks if a given value is a latitude.\n */\nexport function IsLatitude(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LATITUDE,\n      validator: {\n        validate: (value, args): boolean => isLatitude(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a latitude string or number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from './ValidateBy';\nimport { isLatLong } from './IsLatLong';\n\nexport const IS_LONGITUDE = 'isLongitude';\n\n/**\n * Checks if a given value is a longitude.\n */\nexport function isLongitude(value: string): boolean {\n  return (typeof value === 'number' || typeof value === 'string') && isLatLong(`0,${value}`);\n}\n\n/**\n * Checks if a given value is a longitude.\n */\nexport function IsLongitude(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LONGITUDE,\n      validator: {\n        validate: (value, args): boolean => isLongitude(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a longitude string or number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const EQUALS = 'equals';\n\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function equals(value: unknown, comparison: unknown): boolean {\n  return value === comparison;\n}\n\n/**\n * Checks if value matches (\"===\") the comparison.\n */\nexport function Equals(comparison: any, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: EQUALS,\n      constraints: [comparison],\n      validator: {\n        validate: (value, args): boolean => equals(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be equal to $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const NOT_EQUALS = 'notEquals';\n\n/**\n * Checks if value does not match (\"!==\") the comparison.\n */\nexport function notEquals(value: unknown, comparison: unknown): boolean {\n  return value !== comparison;\n}\n\n/**\n * Checks if value does not match (\"!==\") the comparison.\n */\nexport function NotEquals(comparison: any, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: NOT_EQUALS,\n      constraints: [comparison],\n      validator: {\n        validate: (value, args): boolean => notEquals(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not be equal to $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_EMPTY = 'isEmpty';\n\n/**\n * Checks if given value is empty (=== '', === null, === undefined).\n */\nexport function isEmpty(value: unknown): boolean {\n  return value === '' || value === null || value === undefined;\n}\n\n/**\n * Checks if given value is empty (=== '', === null, === undefined).\n */\nexport function IsEmpty(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_EMPTY,\n      validator: {\n        validate: (value, args): boolean => isEmpty(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be empty', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NOT_EMPTY = 'isNotEmpty';\n\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function isNotEmpty(value: unknown): boolean {\n  return value !== '' && value !== null && value !== undefined;\n}\n\n/**\n * Checks if given value is not empty (!== '', !== null, !== undefined).\n */\nexport function IsNotEmpty(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NOT_EMPTY,\n      validator: {\n        validate: (value, args): boolean => isNotEmpty(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not be empty', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_IN = 'isIn';\n\n/**\n * Checks if given value is in a array of allowed values.\n */\nexport function isIn(value: unknown, possibleValues: readonly unknown[]): boolean {\n  return !Array.isArray(possibleValues) || possibleValues.some(possibleValue => possibleValue === value);\n}\n\n/**\n * Checks if given value is in a array of allowed values.\n */\nexport function IsIn(values: readonly any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_IN,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => isIn(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be one of the following values: $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NOT_IN = 'isNotIn';\n\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function isNotIn(value: unknown, possibleValues: readonly unknown[]): boolean {\n  return !Array.isArray(possibleValues) || !possibleValues.some(possibleValue => possibleValue === value);\n}\n\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function IsNotIn(values: readonly any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NOT_IN,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => isNotIn(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not be one of the following values: $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commaDecimal = exports.dotDecimal = exports.bengaliLocales = exports.farsiLocales = exports.arabicLocales = exports.englishLocales = exports.decimal = exports.alphanumeric = exports.alpha = void 0;\nvar alpha = {\n  'en-US': /^[A-Z]+$/i,\n  'az-AZ': /^[A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[А-Я]+$/i,\n  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[A-ZÆØÅ]+$/i,\n  'de-DE': /^[A-ZÄÖÜß]+$/i,\n  'el-GR': /^[Α-ώ]+$/i,\n  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fa-IR': /^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,\n  'fi-FI': /^[A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'ja-JP': /^[ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n  'nb-NO': /^[A-ZÆØÅ]+$/i,\n  'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[A-ZÆØÅ]+$/i,\n  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[А-ЯЁ]+$/i,\n  'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๐\\s]+$/i,\n  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,\n  'vi-VN': /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  'ko-KR': /^[ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n  'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[א-ת]+$/,\n  fa: /^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i,\n  bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,\n  'hi-IN': /^[\\u0900-\\u0961]+[\\u0972-\\u097F]*$/i,\n  'si-LK': /^[\\u0D80-\\u0DFF]+$/\n};\nexports.alpha = alpha;\nvar alphanumeric = {\n  'en-US': /^[0-9A-Z]+$/i,\n  'az-AZ': /^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[0-9А-Я]+$/i,\n  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[0-9A-ZÆØÅ]+$/i,\n  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\n  'el-GR': /^[0-9Α-ω]+$/i,\n  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fi-FI': /^[0-9A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'ja-JP': /^[0-9０-９ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'nb-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[0-9А-ЯЁ]+$/i,\n  'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๙\\s]+$/i,\n  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,\n  'ko-KR': /^[0-9ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n  'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  'vi-VN': /^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[0-9א-ת]+$/,\n  fa: /^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i,\n  bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣ০১২৩৪৫৬৭৮৯ৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,\n  'hi-IN': /^[\\u0900-\\u0963]+[\\u0966-\\u097F]*$/i,\n  'si-LK': /^[0-9\\u0D80-\\u0DFF]+$/\n};\nexports.alphanumeric = alphanumeric;\nvar decimal = {\n  'en-US': '.',\n  ar: '٫'\n};\nexports.decimal = decimal;\nvar englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\nexports.englishLocales = englishLocales;\n\nfor (var locale, i = 0; i < englishLocales.length; i++) {\n  locale = \"en-\".concat(englishLocales[i]);\n  alpha[locale] = alpha['en-US'];\n  alphanumeric[locale] = alphanumeric['en-US'];\n  decimal[locale] = decimal['en-US'];\n} // Source: http://www.localeplanet.com/java/\n\n\nvar arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\nexports.arabicLocales = arabicLocales;\n\nfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\n  _locale = \"ar-\".concat(arabicLocales[_i]);\n  alpha[_locale] = alpha.ar;\n  alphanumeric[_locale] = alphanumeric.ar;\n  decimal[_locale] = decimal.ar;\n}\n\nvar farsiLocales = ['IR', 'AF'];\nexports.farsiLocales = farsiLocales;\n\nfor (var _locale2, _i2 = 0; _i2 < farsiLocales.length; _i2++) {\n  _locale2 = \"fa-\".concat(farsiLocales[_i2]);\n  alphanumeric[_locale2] = alphanumeric.fa;\n  decimal[_locale2] = decimal.ar;\n}\n\nvar bengaliLocales = ['BD', 'IN'];\nexports.bengaliLocales = bengaliLocales;\n\nfor (var _locale3, _i3 = 0; _i3 < bengaliLocales.length; _i3++) {\n  _locale3 = \"bn-\".concat(bengaliLocales[_i3]);\n  alpha[_locale3] = alpha.bn;\n  alphanumeric[_locale3] = alphanumeric.bn;\n  decimal[_locale3] = decimal['en-US'];\n} // Source: https://en.wikipedia.org/wiki/Decimal_mark\n\n\nvar dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];\nexports.dotDecimal = dotDecimal;\nvar commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'es-ES', 'fr-CA', 'fr-FR', 'id-ID', 'it-IT', 'ku-IQ', 'hi-IN', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'si-LK', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN'];\nexports.commaDecimal = commaDecimal;\n\nfor (var _i4 = 0; _i4 < dotDecimal.length; _i4++) {\n  decimal[dotDecimal[_i4]] = decimal['en-US'];\n}\n\nfor (var _i5 = 0; _i5 < commaDecimal.length; _i5++) {\n  decimal[commaDecimal[_i5]] = ',';\n}\n\nalpha['fr-CA'] = alpha['fr-FR'];\nalphanumeric['fr-CA'] = alphanumeric['fr-FR'];\nalpha['pt-BR'] = alpha['pt-PT'];\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\ndecimal['pt-BR'] = decimal['pt-PT']; // see #862\n\nalpha['pl-Pl'] = alpha['pl-PL'];\nalphanumeric['pl-Pl'] = alphanumeric['pl-PL'];\ndecimal['pl-Pl'] = decimal['pl-PL']; // see #1455\n\nalpha['fa-AF'] = alpha.fa;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFloat;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isFloat(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {};\n  var float = new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\".concat(options.locale ? _alpha.decimal[options.locale] : '.', \"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\"));\n\n  if (str === '' || str === '.' || str === ',' || str === '-' || str === '+') {\n    return false;\n  }\n\n  var value = parseFloat(str.replace(',', '.'));\n  return float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);\n}\n\nvar locales = Object.keys(_alpha.decimal);\nexports.locales = locales;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toFloat;\n\nvar _isFloat = _interopRequireDefault(require(\"./isFloat\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toFloat(str) {\n  if (!(0, _isFloat.default)(str)) return NaN;\n  return parseFloat(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDivisibleBy;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _toFloat = _interopRequireDefault(require(\"./toFloat\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isDivisibleBy(str, num) {\n  (0, _assertString.default)(str);\n  return (0, _toFloat.default)(str) % parseInt(num, 10) === 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDivisibleByValidator from 'validator/lib/isDivisibleBy';\n\nexport const IS_DIVISIBLE_BY = 'isDivisibleBy';\n\n/**\n * Checks if value is a number that's divisible by another.\n */\nexport function isDivisibleBy(value: unknown, num: number): boolean {\n  return typeof value === 'number' && typeof num === 'number' && isDivisibleByValidator(String(value), num);\n}\n\n/**\n * Checks if value is a number that's divisible by another.\n */\nexport function IsDivisibleBy(num: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DIVISIBLE_BY,\n      constraints: [num],\n      validator: {\n        validate: (value, args): boolean => isDivisibleBy(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be divisible by $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_POSITIVE = 'isPositive';\n\n/**\n * Checks if the value is a positive number greater than zero.\n */\nexport function isPositive(value: unknown): boolean {\n  return typeof value === 'number' && value > 0;\n}\n\n/**\n * Checks if the value is a positive number greater than zero.\n */\nexport function IsPositive(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_POSITIVE,\n      validator: {\n        validate: (value, args): boolean => isPositive(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a positive number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NEGATIVE = 'isNegative';\n\n/**\n * Checks if the value is a negative number smaller than zero.\n */\nexport function isNegative(value: unknown): boolean {\n  return typeof value === 'number' && value < 0;\n}\n\n/**\n * Checks if the value is a negative number smaller than zero.\n */\nexport function IsNegative(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NEGATIVE,\n      validator: {\n        validate: (value, args): boolean => isNegative(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a negative number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MAX = 'max';\n\n/**\n * Checks if the first number is less than or equal to the second.\n */\nexport function max(num: unknown, max: number): boolean {\n  return typeof num === 'number' && typeof max === 'number' && num <= max;\n}\n\n/**\n * Checks if the value is less than or equal to the allowed maximum value.\n */\nexport function Max(maxValue: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MAX,\n      constraints: [maxValue],\n      validator: {\n        validate: (value, args): boolean => max(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must not be greater than $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MIN = 'min';\n\n/**\n * Checks if the first number is greater than or equal to the second.\n */\nexport function min(num: unknown, min: number): boolean {\n  return typeof num === 'number' && typeof min === 'number' && num >= min;\n}\n\n/**\n * Checks if the value is greater than or equal to the allowed minimum value.\n */\nexport function Min(minValue: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MIN,\n      constraints: [minValue],\n      validator: {\n        validate: (value, args): boolean => min(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must not be less than $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MIN_DATE = 'minDate';\n\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function minDate(date: unknown, minDate: Date | (() => Date)): boolean {\n  return date instanceof Date && date.getTime() >= (minDate instanceof Date ? minDate : minDate()).getTime();\n}\n\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function MinDate(date: Date | (() => Date), validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MIN_DATE,\n      constraints: [date],\n      validator: {\n        validate: (value, args): boolean => minDate(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => 'minimal allowed date for ' + eachPrefix + '$property is $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const MAX_DATE = 'maxDate';\n\n/**\n * Checks if the value is a date that's before the specified date.\n */\nexport function maxDate(date: unknown, maxDate: Date | (() => Date)): boolean {\n  return date instanceof Date && date.getTime() <= (maxDate instanceof Date ? maxDate : maxDate()).getTime();\n}\n\n/**\n * Checks if the value is a date that's after the specified date.\n */\nexport function MaxDate(date: Date | (() => Date), validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MAX_DATE,\n      constraints: [date],\n      validator: {\n        validate: (value, args): boolean => maxDate(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => 'maximal allowed date for ' + eachPrefix + '$property is $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toString;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction toString(input) {\n  if (_typeof(input) === 'object' && input !== null) {\n    if (typeof input.toString === 'function') {\n      input = input.toString();\n    } else {\n      input = '[object Object]';\n    }\n  } else if (input === null || typeof input === 'undefined' || isNaN(input) && !input.length) {\n    input = '';\n  }\n\n  return String(input);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = contains;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _toString = _interopRequireDefault(require(\"./util/toString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaulContainsOptions = {\n  ignoreCase: false,\n  minOccurrences: 1\n};\n\nfunction contains(str, elem, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaulContainsOptions);\n\n  if (options.ignoreCase) {\n    return str.toLowerCase().split((0, _toString.default)(elem).toLowerCase()).length > options.minOccurrences;\n  }\n\n  return str.split((0, _toString.default)(elem)).length > options.minOccurrences;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport containsValidator from 'validator/lib/contains';\n\nexport const CONTAINS = 'contains';\n\n/**\n * Checks if the string contains the seed.\n * If given value is not a string, then it returns false.\n */\nexport function contains(value: unknown, seed: string): boolean {\n  return typeof value === 'string' && containsValidator(value, seed);\n}\n\n/**\n * Checks if the string contains the seed.\n * If given value is not a string, then it returns false.\n */\nexport function Contains(seed: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: CONTAINS,\n      constraints: [seed],\n      validator: {\n        validate: (value, args): boolean => contains(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a $constraint1 string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport containsValidator from 'validator/lib/contains';\n\nexport const NOT_CONTAINS = 'notContains';\n\n/**\n * Checks if the string does not contain the seed.\n * If given value is not a string, then it returns false.\n */\nexport function notContains(value: unknown, seed: string): boolean {\n  return typeof value === 'string' && !containsValidator(value, seed);\n}\n\n/**\n * Checks if the string does not contain the seed.\n * If given value is not a string, then it returns false.\n */\nexport function NotContains(seed: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: NOT_CONTAINS,\n      constraints: [seed],\n      validator: {\n        validate: (value, args): boolean => notContains(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not contain a $constraint1 string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlpha;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAlpha(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n\n  if (locale in _alpha.alpha) {\n    return _alpha.alpha[locale].test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(_alpha.alpha);\nexports.locales = locales;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAlphaValidator from 'validator/lib/isAlpha';\nimport ValidatorJS from 'validator';\n\nexport const IS_ALPHA = 'isAlpha';\n\n/**\n * Checks if the string contains only letters (a-zA-Z).\n * If given value is not a string, then it returns false.\n */\nexport function isAlpha(value: unknown, locale?: ValidatorJS.AlphaLocale): boolean {\n  return typeof value === 'string' && isAlphaValidator(value, locale);\n}\n\n/**\n * Checks if the string contains only letters (a-zA-Z).\n * If given value is not a string, then it returns false.\n */\nexport function IsAlpha(locale?: ValidatorJS.AlphaLocale, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ALPHA,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isAlpha(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain only letters (a-zA-Z)',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAlphanumeric;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAlphanumeric(_str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _assertString.default)(_str);\n  var str = _str;\n  var ignore = options.ignore;\n\n  if (ignore) {\n    if (ignore instanceof RegExp) {\n      str = str.replace(ignore, '');\n    } else if (typeof ignore === 'string') {\n      str = str.replace(new RegExp(\"[\".concat(ignore.replace(/[-[\\]{}()*+?.,\\\\^$|#\\\\s]/g, '\\\\$&'), \"]\"), 'g'), ''); // escape regex for ignore\n    } else {\n      throw new Error('ignore should be instance of a String or RegExp');\n    }\n  }\n\n  if (locale in _alpha.alphanumeric) {\n    return _alpha.alphanumeric[locale].test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(_alpha.alphanumeric);\nexports.locales = locales;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAlphanumericValidator from 'validator/lib/isAlphanumeric';\nimport ValidatorJS from 'validator';\n\nexport const IS_ALPHANUMERIC = 'isAlphanumeric';\n\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\nexport function isAlphanumeric(value: unknown, locale?: ValidatorJS.AlphanumericLocale): boolean {\n  return typeof value === 'string' && isAlphanumericValidator(value, locale);\n}\n\n/**\n * Checks if the string contains only letters and numbers.\n * If given value is not a string, then it returns false.\n */\nexport function IsAlphanumeric(\n  locale?: ValidatorJS.AlphanumericLocale,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ALPHANUMERIC,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isAlphanumeric(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain only letters and numbers',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar includes = function includes(arr, val) {\n  return arr.some(function (arrVal) {\n    return val === arrVal;\n  });\n};\n\nvar _default = includes;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDecimal;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _includes = _interopRequireDefault(require(\"./util/includes\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(_alpha.decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\n\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\n\nfunction isDecimal(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_decimal_options);\n\n  if (options.locale in _alpha.decimal) {\n    return !(0, _includes.default)(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDecimalValidator from 'validator/lib/isDecimal';\nimport ValidatorJS from 'validator';\n\nexport const IS_DECIMAL = 'isDecimal';\n\n/**\n * Checks if the string is a valid decimal.\n * If given value is not a string, then it returns false.\n */\nexport function isDecimal(value: unknown, options?: ValidatorJS.IsDecimalOptions): boolean {\n  return typeof value === 'string' && isDecimalValidator(value, options);\n}\n\n/**\n * Checks if the string is a valid decimal.\n * If given value is not a string, then it returns false.\n */\nexport function IsDecimal(\n  options?: ValidatorJS.IsDecimalOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DECIMAL,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isDecimal(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property is not a valid decimal number.',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAscii;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-control-regex */\nvar ascii = /^[\\x00-\\x7F]+$/;\n/* eslint-enable no-control-regex */\n\nfunction isAscii(str) {\n  (0, _assertString.default)(str);\n  return ascii.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isAsciiValidator from 'validator/lib/isAscii';\n\nexport const IS_ASCII = 'isAscii';\n\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\nexport function isAscii(value: unknown): boolean {\n  return typeof value === 'string' && isAsciiValidator(value);\n}\n\n/**\n * Checks if the string contains ASCII chars only.\n * If given value is not a string, then it returns false.\n */\nexport function IsAscii(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ASCII,\n      validator: {\n        validate: (value, args): boolean => isAscii(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain only ASCII characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase64;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar notBase64 = /[^A-Z0-9+\\/=]/i;\nvar urlSafeBase64 = /^[A-Z0-9_\\-]*$/i;\nvar defaultBase64Options = {\n  urlSafe: false\n};\n\nfunction isBase64(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase64Options);\n  var len = str.length;\n\n  if (options.urlSafe) {\n    return urlSafeBase64.test(str);\n  }\n\n  if (len % 4 !== 0 || notBase64.test(str)) {\n    return false;\n  }\n\n  var firstPaddingChar = str.indexOf('=');\n  return firstPaddingChar === -1 || firstPaddingChar === len - 1 || firstPaddingChar === len - 2 && str[len - 1] === '=';\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase64Validator from 'validator/lib/isBase64';\n\nexport const IS_BASE64 = 'isBase64';\n\n/**\n * Checks if a string is base64 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function isBase64(value: unknown): boolean {\n  return typeof value === 'string' && isBase64Validator(value);\n}\n\n/**\n * Checks if a string is base64 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function IsBase64(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BASE64,\n      validator: {\n        validate: (value, args): boolean => isBase64(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be base64 encoded', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isByteLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isByteLengthValidator from 'validator/lib/isByteLength';\n\nexport const IS_BYTE_LENGTH = 'isByteLength';\n\n/**\n * Checks if the string's length (in bytes) falls in a range.\n * If given value is not a string, then it returns false.\n */\nexport function isByteLength(value: unknown, min: number, max?: number): boolean {\n  return typeof value === 'string' && isByteLengthValidator(value, { min, max });\n}\n\n/**\n * Checks if the string's length (in bytes) falls in a range.\n * If given value is not a string, then it returns false.\n */\nexport function IsByteLength(min: number, max?: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BYTE_LENGTH,\n      constraints: [min, max],\n      validator: {\n        validate: (value, args): boolean => isByteLength(value, args?.constraints[0], args?.constraints[1]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + \"$property's byte length must fall into ($constraint1, $constraint2) range\",\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLuhnNumber;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isLuhnNumber(str) {\n  (0, _assertString.default)(str);\n  var sanitized = str.replace(/[- ]+/g, '');\n  var sum = 0;\n  var digit;\n  var tmpNum;\n  var shouldDouble;\n\n  for (var i = sanitized.length - 1; i >= 0; i--) {\n    digit = sanitized.substring(i, i + 1);\n    tmpNum = parseInt(digit, 10);\n\n    if (shouldDouble) {\n      tmpNum *= 2;\n\n      if (tmpNum >= 10) {\n        sum += tmpNum % 10 + 1;\n      } else {\n        sum += tmpNum;\n      }\n    } else {\n      sum += tmpNum;\n    }\n\n    shouldDouble = !shouldDouble;\n  }\n\n  return !!(sum % 10 === 0 ? sanitized : false);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCreditCard;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isLuhnNumber = _interopRequireDefault(require(\"./isLuhnNumber\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar cards = {\n  amex: /^3[47][0-9]{13}$/,\n  dinersclub: /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,\n  discover: /^6(?:011|5[0-9][0-9])[0-9]{12,15}$/,\n  jcb: /^(?:2131|1800|35\\d{3})\\d{11}$/,\n  mastercard: /^5[1-5][0-9]{2}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$/,\n  // /^[25][1-7][0-9]{14}$/;\n  unionpay: /^(6[27][0-9]{14}|^(81[0-9]{14,17}))$/,\n  visa: /^(?:4[0-9]{12})(?:[0-9]{3,6})?$/\n};\n/* eslint-disable max-len */\n\nvar allCards = /^(?:4[0-9]{12}(?:[0-9]{3,6})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12,15}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|6[27][0-9]{14}|^(81[0-9]{14,17}))$/;\n/* eslint-enable max-len */\n\nfunction isCreditCard(card) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(card);\n  var provider = options.provider;\n  var sanitized = card.replace(/[- ]+/g, '');\n\n  if (provider && provider.toLowerCase() in cards) {\n    // specific provider in the list\n    if (!cards[provider.toLowerCase()].test(sanitized)) {\n      return false;\n    }\n  } else if (provider && !(provider.toLowerCase() in cards)) {\n    /* specific provider not in the list */\n    throw new Error(\"\".concat(provider, \" is not a valid credit card provider.\"));\n  } else if (!allCards.test(sanitized)) {\n    // no specific provider\n    return false;\n  }\n\n  return (0, _isLuhnNumber.default)(card);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCreditCardValidator from 'validator/lib/isCreditCard';\n\nexport const IS_CREDIT_CARD = 'isCreditCard';\n\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function isCreditCard(value: unknown): boolean {\n  return typeof value === 'string' && isCreditCardValidator(value);\n}\n\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function IsCreditCard(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_CREDIT_CARD,\n      validator: {\n        validate: (value, args): boolean => isCreditCard(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a credit card', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isCurrency;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction currencyRegex(options) {\n  var decimal_digits = \"\\\\d{\".concat(options.digits_after_decimal[0], \"}\");\n  options.digits_after_decimal.forEach(function (digit, index) {\n    if (index !== 0) decimal_digits = \"\".concat(decimal_digits, \"|\\\\d{\").concat(digit, \"}\");\n  });\n  var symbol = \"(\".concat(options.symbol.replace(/\\W/, function (m) {\n    return \"\\\\\".concat(m);\n  }), \")\").concat(options.require_symbol ? '' : '?'),\n      negative = '-?',\n      whole_dollar_amount_without_sep = '[1-9]\\\\d*',\n      whole_dollar_amount_with_sep = \"[1-9]\\\\d{0,2}(\\\\\".concat(options.thousands_separator, \"\\\\d{3})*\"),\n      valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep],\n      whole_dollar_amount = \"(\".concat(valid_whole_dollar_amounts.join('|'), \")?\"),\n      decimal_amount = \"(\\\\\".concat(options.decimal_separator, \"(\").concat(decimal_digits, \"))\").concat(options.require_decimal ? '' : '?');\n  var pattern = whole_dollar_amount + (options.allow_decimal || options.require_decimal ? decimal_amount : ''); // default is negative sign before symbol, but there are two other options (besides parens)\n\n  if (options.allow_negatives && !options.parens_for_negatives) {\n    if (options.negative_sign_after_digits) {\n      pattern += negative;\n    } else if (options.negative_sign_before_digits) {\n      pattern = negative + pattern;\n    }\n  } // South African Rand, for example, uses R 123 (space) and R-123 (no space)\n\n\n  if (options.allow_negative_sign_placeholder) {\n    pattern = \"( (?!\\\\-))?\".concat(pattern);\n  } else if (options.allow_space_after_symbol) {\n    pattern = \" ?\".concat(pattern);\n  } else if (options.allow_space_after_digits) {\n    pattern += '( (?!$))?';\n  }\n\n  if (options.symbol_after_digits) {\n    pattern += symbol;\n  } else {\n    pattern = symbol + pattern;\n  }\n\n  if (options.allow_negatives) {\n    if (options.parens_for_negatives) {\n      pattern = \"(\\\\(\".concat(pattern, \"\\\\)|\").concat(pattern, \")\");\n    } else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {\n      pattern = negative + pattern;\n    }\n  } // ensure there's a dollar and/or decimal amount, and that\n  // it doesn't start with a space or a negative sign followed by a space\n\n\n  return new RegExp(\"^(?!-? )(?=.*\\\\d)\".concat(pattern, \"$\"));\n}\n\nvar default_currency_options = {\n  symbol: '$',\n  require_symbol: false,\n  allow_space_after_symbol: false,\n  symbol_after_digits: false,\n  allow_negatives: true,\n  parens_for_negatives: false,\n  negative_sign_before_digits: false,\n  negative_sign_after_digits: false,\n  allow_negative_sign_placeholder: false,\n  thousands_separator: ',',\n  decimal_separator: '.',\n  allow_decimal: true,\n  require_decimal: false,\n  digits_after_decimal: [2],\n  allow_space_after_digits: false\n};\n\nfunction isCurrency(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_currency_options);\n  return currencyRegex(options).test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCurrencyValidator from 'validator/lib/isCurrency';\nimport ValidatorJS from 'validator';\n\nexport const IS_CURRENCY = 'isCurrency';\n\n/**\n * Checks if the string is a valid currency amount.\n * If given value is not a string, then it returns false.\n */\nexport function isCurrency(value: unknown, options?: ValidatorJS.IsCurrencyOptions): boolean {\n  return typeof value === 'string' && isCurrencyValidator(value, options);\n}\n\n/**\n * Checks if the string is a valid currency amount.\n * If given value is not a string, then it returns false.\n */\nexport function IsCurrency(\n  options?: ValidatorJS.IsCurrencyOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_CURRENCY,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isCurrency(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a currency', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFQDN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false,\n  ignore_max_length: false\n};\n\nfunction isFQDN(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n  /* Remove the optional wildcard before checking validity */\n\n\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!options.allow_numeric_tld && !/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces\n\n\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63 && !options.ignore_max_length) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIP;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\n\nfunction isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    return IPv4AddressRegExp.test(str);\n  }\n\n  if (version === '6') {\n    return IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _isByteLength = _interopRequireDefault(require(\"./isByteLength\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false,\n  host_blacklist: [],\n  host_whitelist: []\n};\n/* eslint-disable max-len */\n\n/* eslint-disable no-control-regex */\n\nvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nvar defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\n\nfunction validateDisplayName(display_name) {\n  var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1'); // display name with only spaces is not valid\n\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  } // check whether display name contains illegal character\n\n\n  var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    } // the quotes in display name must start with character symbol \\\n\n\n    var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isEmail(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(splitNameAddress);\n\n    if (display_email) {\n      var display_name = display_email[1]; // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, ''); // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.slice(0, -1);\n      }\n\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var lower_domain = domain.toLowerCase();\n\n  if (options.host_blacklist.includes(lower_domain)) {\n    return false;\n  }\n\n  if (options.host_whitelist.length > 0 && !options.host_whitelist.includes(lower_domain)) {\n    return false;\n  }\n\n  var user = parts.join('@');\n\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase(); // Removing sub-address from username before gmail validation\n\n    var username = user.split('+')[0]; // Dots are not included in gmail length restriction\n\n    if (!(0, _isByteLength.default)(username.replace(/\\./g, ''), {\n      min: 6,\n      max: 30\n    })) {\n      return false;\n    }\n\n    var _user_parts = username.split('.');\n\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n\n  if (options.ignore_max_length === false && (!(0, _isByteLength.default)(user, {\n    max: 64\n  }) || !(0, _isByteLength.default)(domain, {\n    max: 254\n  }))) {\n    return false;\n  }\n\n  if (!(0, _isFQDN.default)(domain, {\n    require_tld: options.require_tld,\n    ignore_max_length: options.ignore_max_length\n  })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n\n    if (!(0, _isIP.default)(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n\n      var noBracketdomain = domain.slice(1, -1);\n\n      if (noBracketdomain.length === 0 || !(0, _isIP.default)(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n  var user_parts = user.split('.');\n\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEmailValidator from 'validator/lib/isEmail';\nimport ValidatorJS from 'validator';\n\nexport const IS_EMAIL = 'isEmail';\n\n/**\n * Checks if the string is an email.\n * If given value is not a string, then it returns false.\n */\nexport function isEmail(value: unknown, options?: ValidatorJS.IsEmailOptions): boolean {\n  return typeof value === 'string' && isEmailValidator(value, options);\n}\n\n/**\n * Checks if the string is an email.\n * If given value is not a string, then it returns false.\n */\nexport function IsEmail(\n  options?: ValidatorJS.IsEmailOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_EMAIL,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isEmail(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an email', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFqdnValidator from 'validator/lib/isFQDN';\nimport ValidatorJS from 'validator';\n\nexport const IS_FQDN = 'isFqdn';\n\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n * If given value is not a string, then it returns false.\n */\nexport function isFQDN(value: unknown, options?: ValidatorJS.IsFQDNOptions): boolean {\n  return typeof value === 'string' && isFqdnValidator(value, options);\n}\n\n/**\n * Checks if the string is a fully qualified domain name (e.g. domain.com).\n * If given value is not a string, then it returns false.\n */\nexport function IsFQDN(options?: ValidatorJS.IsFQDNOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_FQDN,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isFQDN(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid domain name',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isFullWidth;\nexports.fullWidth = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fullWidth = /[^\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nexports.fullWidth = fullWidth;\n\nfunction isFullWidth(str) {\n  (0, _assertString.default)(str);\n  return fullWidth.test(str);\n}", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isFullWidthValidator from 'validator/lib/isFullWidth';\n\nexport const IS_FULL_WIDTH = 'isFullWidth';\n\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isFullWidth(value: unknown): boolean {\n  return typeof value === 'string' && isFullWidthValidator(value);\n}\n\n/**\n * Checks if the string contains any full-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsFullWidth(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_FULL_WIDTH,\n      validator: {\n        validate: (value, args): boolean => isFullWidth(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a full-width characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHalfWidth;\nexports.halfWidth = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar halfWidth = /[\\u0020-\\u007E\\uFF61-\\uFF9F\\uFFA0-\\uFFDC\\uFFE8-\\uFFEE0-9a-zA-Z]/;\nexports.halfWidth = halfWidth;\n\nfunction isHalfWidth(str) {\n  (0, _assertString.default)(str);\n  return halfWidth.test(str);\n}", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHalfWidthValidator from 'validator/lib/isHalfWidth';\n\nexport const IS_HALF_WIDTH = 'isHalfWidth';\n\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isHalfWidth(value: unknown): boolean {\n  return typeof value === 'string' && isHalfWidthValidator(value);\n}\n\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsHalfWidth(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HALF_WIDTH,\n      validator: {\n        validate: (value, args): boolean => isHalfWidth(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a half-width characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVariableWidth;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFullWidth = require(\"./isFullWidth\");\n\nvar _isHalfWidth = require(\"./isHalfWidth\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isVariableWidth(str) {\n  (0, _assertString.default)(str);\n  return _isFullWidth.fullWidth.test(str) && _isHalfWidth.halfWidth.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isVariableWidthValidator from 'validator/lib/isVariableWidth';\n\nexport const IS_VARIABLE_WIDTH = 'isVariableWidth';\n\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isVariableWidth(value: unknown): boolean {\n  return typeof value === 'string' && isVariableWidthValidator(value);\n}\n\n/**\n * Checks if the string contains variable-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsVariableWidth(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_VARIABLE_WIDTH,\n      validator: {\n        validate: (value, args): boolean => isVariableWidth(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain a full-width and half-width characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexColor;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{4}|[0-9A-F]{6}|[0-9A-F]{8})$/i;\n\nfunction isHexColor(str) {\n  (0, _assertString.default)(str);\n  return hexcolor.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHexColorValidator from 'validator/lib/isHexColor';\n\nexport const IS_HEX_COLOR = 'isHexColor';\n\n/**\n * Checks if the string is a hexadecimal color.\n * If given value is not a string, then it returns false.\n */\nexport function isHexColor(value: unknown): boolean {\n  return typeof value === 'string' && isHexColorValidator(value);\n}\n\n/**\n * Checks if the string is a hexadecimal color.\n * If given value is not a string, then it returns false.\n */\nexport function IsHexColor(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HEX_COLOR,\n      validator: {\n        validate: (value, args): boolean => isHexColor(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a hexadecimal color',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHexadecimal;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hexadecimal = /^(0x|0h)?[0-9A-F]+$/i;\n\nfunction isHexadecimal(str) {\n  (0, _assertString.default)(str);\n  return hexadecimal.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHexadecimalValidator from 'validator/lib/isHexadecimal';\n\nexport const IS_HEXADECIMAL = 'isHexadecimal';\n\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\nexport function isHexadecimal(value: unknown): boolean {\n  return typeof value === 'string' && isHexadecimalValidator(value);\n}\n\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\nexport function IsHexadecimal(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HEXADECIMAL,\n      validator: {\n        validate: (value, args): boolean => isHexadecimal(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a hexadecimal number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationArguments } from '../validation/ValidationArguments';\n\n/**\n * Options used to pass to validation decorators.\n */\nexport interface ValidationOptions {\n  /**\n   * Specifies if validated value is an array and each of its items must be validated.\n   */\n  each?: boolean;\n\n  /**\n   * Error message to be used on validation fail.\n   * Message can be either string or a function that returns a string.\n   */\n  message?: string | ((validationArguments: ValidationArguments) => string);\n\n  /**\n   * Validation groups used for this validation.\n   */\n  groups?: string[];\n\n  /**\n   * Indicates if validation must be performed always, no matter of validation groups used.\n   */\n  always?: boolean;\n\n  /*\n   * A transient set of data passed through to the validation result for response mapping\n   */\n  context?: any;\n}\n\nexport function isValidationOptions(val: any): val is ValidationOptions {\n  if (!val) {\n    return false;\n  }\n  return 'each' in val || 'message' in val || 'groups' in val || 'always' in val || 'context' in val;\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMACAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar macAddress48 = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){4}([0-9a-fA-F]{2})$/;\nvar macAddress48NoSeparators = /^([0-9a-fA-F]){12}$/;\nvar macAddress48WithDots = /^([0-9a-fA-F]{4}\\.){2}([0-9a-fA-F]{4})$/;\nvar macAddress64 = /^(?:[0-9a-fA-F]{2}([-:\\s]))([0-9a-fA-F]{2}\\1){6}([0-9a-fA-F]{2})$/;\nvar macAddress64NoSeparators = /^([0-9a-fA-F]){16}$/;\nvar macAddress64WithDots = /^([0-9a-fA-F]{4}\\.){3}([0-9a-fA-F]{4})$/;\n\nfunction isMACAddress(str, options) {\n  (0, _assertString.default)(str);\n\n  if (options !== null && options !== void 0 && options.eui) {\n    options.eui = String(options.eui);\n  }\n  /**\n   * @deprecated `no_colons` TODO: remove it in the next major\n  */\n\n\n  if (options !== null && options !== void 0 && options.no_colons || options !== null && options !== void 0 && options.no_separators) {\n    if (options.eui === '48') {\n      return macAddress48NoSeparators.test(str);\n    }\n\n    if (options.eui === '64') {\n      return macAddress64NoSeparators.test(str);\n    }\n\n    return macAddress48NoSeparators.test(str) || macAddress64NoSeparators.test(str);\n  }\n\n  if ((options === null || options === void 0 ? void 0 : options.eui) === '48') {\n    return macAddress48.test(str) || macAddress48WithDots.test(str);\n  }\n\n  if ((options === null || options === void 0 ? void 0 : options.eui) === '64') {\n    return macAddress64.test(str) || macAddress64WithDots.test(str);\n  }\n\n  return isMACAddress(str, {\n    eui: '48'\n  }) || isMACAddress(str, {\n    eui: '64'\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions, isValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMacAddressValidator from 'validator/lib/isMACAddress';\nimport ValidatorJS from 'validator';\n\nexport const IS_MAC_ADDRESS = 'isMacAddress';\n\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function isMACAddress(value: unknown, options?: ValidatorJS.IsMACAddressOptions): boolean {\n  return typeof value === 'string' && isMacAddressValidator(value, options);\n}\n\n/**\n * Check if the string is a MAC address.\n * If given value is not a string, then it returns false.\n */\nexport function IsMACAddress(\n  optionsArg?: ValidatorJS.IsMACAddressOptions,\n  validationOptionsArg?: ValidationOptions\n): PropertyDecorator;\nexport function IsMACAddress(validationOptionsArg?: ValidationOptions): PropertyDecorator;\nexport function IsMACAddress(\n  optionsOrValidationOptionsArg?: ValidatorJS.IsMACAddressOptions | ValidationOptions,\n  validationOptionsArg?: ValidationOptions\n): PropertyDecorator {\n  const options = !isValidationOptions(optionsOrValidationOptionsArg) ? optionsOrValidationOptionsArg : undefined;\n  const validationOptions = isValidationOptions(optionsOrValidationOptionsArg)\n    ? optionsOrValidationOptionsArg\n    : validationOptionsArg;\n\n  return ValidateBy(\n    {\n      name: IS_MAC_ADDRESS,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isMACAddress(value, options),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a MAC Address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIPValidator from 'validator/lib/isIP';\n\nexport type IsIpVersion = '4' | '6' | 4 | 6;\n\nexport const IS_IP = 'isIp';\n\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function isIP(value: unknown, version?: IsIpVersion): boolean {\n  /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n  const versionStr = version ? (`${version}` as '4' | '6') : undefined;\n  return typeof value === 'string' && isIPValidator(value, versionStr);\n}\n\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function IsIP(version?: IsIpVersion, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_IP,\n      constraints: [version],\n      validator: {\n        validate: (value, args): boolean => isIP(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ip address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInt;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\nvar intLeadingZeroes = /^[-+]?[0-9]+$/;\n\nfunction isInt(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {}; // Get the regex to use for testing, based on whether\n  // leading zeroes are allowed or not.\n\n  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes; // Check min/max/lt/gt\n\n  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\n  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\n  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\n  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\n  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPort;\n\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isPort(str) {\n  return (0, _isInt.default)(str, {\n    min: 0,\n    max: 65535\n  });\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPortValidator from 'validator/lib/isPort';\n\nexport const IS_PORT = 'isPort';\n\n/**\n * Check if the string is a valid port number.\n */\nexport function isPort(value: unknown): boolean {\n  return typeof value === 'string' && isPortValidator(value);\n}\n\n/**\n * Check if the string is a valid port number.\n */\nexport function IsPort(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_PORT,\n      validator: {\n        validate: (value, args): boolean => isPort(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a port', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISBN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar possibleIsbn10 = /^(?:[0-9]{9}X|[0-9]{10})$/;\nvar possibleIsbn13 = /^(?:[0-9]{13})$/;\nvar factor = [1, 3];\n\nfunction isISBN(isbn, options) {\n  (0, _assertString.default)(isbn); // For backwards compatibility:\n  // isISBN(str [, version]), i.e. `options` could be used as argument for the legacy `version`\n\n  var version = String((options === null || options === void 0 ? void 0 : options.version) || options);\n\n  if (!(options !== null && options !== void 0 && options.version || options)) {\n    return isISBN(isbn, {\n      version: 10\n    }) || isISBN(isbn, {\n      version: 13\n    });\n  }\n\n  var sanitizedIsbn = isbn.replace(/[\\s-]+/g, '');\n  var checksum = 0;\n\n  if (version === '10') {\n    if (!possibleIsbn10.test(sanitizedIsbn)) {\n      return false;\n    }\n\n    for (var i = 0; i < version - 1; i++) {\n      checksum += (i + 1) * sanitizedIsbn.charAt(i);\n    }\n\n    if (sanitizedIsbn.charAt(9) === 'X') {\n      checksum += 10 * 10;\n    } else {\n      checksum += 10 * sanitizedIsbn.charAt(9);\n    }\n\n    if (checksum % 11 === 0) {\n      return true;\n    }\n  } else if (version === '13') {\n    if (!possibleIsbn13.test(sanitizedIsbn)) {\n      return false;\n    }\n\n    for (var _i = 0; _i < 12; _i++) {\n      checksum += factor[_i % 2] * sanitizedIsbn.charAt(_i);\n    }\n\n    if (sanitizedIsbn.charAt(12) - (10 - checksum % 10) % 10 === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIsbnValidator from 'validator/lib/isISBN';\n\nexport type IsISBNVersion = '10' | '13' | 10 | 13;\n\nexport const IS_ISBN = 'isIsbn';\n\n/**\n * Checks if the string is an ISBN (version 10 or 13).\n * If given value is not a string, then it returns false.\n */\nexport function isISBN(value: unknown, version?: IsISBNVersion): boolean {\n  /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n  const versionStr = version ? (`${version}` as '10' | '13') : undefined;\n  return typeof value === 'string' && isIsbnValidator(value, versionStr);\n}\n\n/**\n * Checks if the string is an ISBN (version 10 or 13).\n * If given value is not a string, then it returns false.\n */\nexport function IsISBN(version?: IsISBNVersion, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISBN,\n      constraints: [version],\n      validator: {\n        validate: (value, args): boolean => isISBN(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ISBN', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISIN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/; // this link details how the check digit is calculated:\n// https://www.isin.org/isin-format/. it is a little bit\n// odd in that it works with digits, not numbers. in order\n// to make only one pass through the ISIN characters, the\n// each alpha character is handled as 2 characters within\n// the loop.\n\nfunction isISIN(str) {\n  (0, _assertString.default)(str);\n\n  if (!isin.test(str)) {\n    return false;\n  }\n\n  var double = true;\n  var sum = 0; // convert values\n\n  for (var i = str.length - 2; i >= 0; i--) {\n    if (str[i] >= 'A' && str[i] <= 'Z') {\n      var value = str[i].charCodeAt(0) - 55;\n      var lo = value % 10;\n      var hi = Math.trunc(value / 10); // letters have two digits, so handle the low order\n      // and high order digits separately.\n\n      for (var _i = 0, _arr = [lo, hi]; _i < _arr.length; _i++) {\n        var digit = _arr[_i];\n\n        if (double) {\n          if (digit >= 5) {\n            sum += 1 + (digit - 5) * 2;\n          } else {\n            sum += digit * 2;\n          }\n        } else {\n          sum += digit;\n        }\n\n        double = !double;\n      }\n    } else {\n      var _digit = str[i].charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (double) {\n        if (_digit >= 5) {\n          sum += 1 + (_digit - 5) * 2;\n        } else {\n          sum += _digit * 2;\n        }\n      } else {\n        sum += _digit;\n      }\n\n      double = !double;\n    }\n  }\n\n  var check = Math.trunc((sum + 9) / 10) * 10 - sum;\n  return +str[str.length - 1] === check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIsinValidator from 'validator/lib/isISIN';\n\nexport const IS_ISIN = 'isIsin';\n\n/**\n * Checks if the string is an ISIN (stock/security identifier).\n * If given value is not a string, then it returns false.\n */\nexport function isISIN(value: unknown): boolean {\n  return typeof value === 'string' && isIsinValidator(value);\n}\n\n/**\n * Checks if the string is an ISIN (stock/security identifier).\n * If given value is not a string, then it returns false.\n */\nexport function IsISIN(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISIN,\n      validator: {\n        validate: (value, args): boolean => isISIN(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an ISIN (stock/security identifier)',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO8601;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n\n  return true;\n};\n\nfunction isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIso8601Validator from 'validator/lib/isISO8601';\nimport ValidatorJS from 'validator';\n\nexport const IS_ISO8601 = 'isIso8601';\n\n/**\n * Checks if the string is a valid ISO 8601 date.\n * If given value is not a string, then it returns false.\n * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\nexport function isISO8601(value: unknown, options?: ValidatorJS.IsISO8601Options): boolean {\n  return typeof value === 'string' && isIso8601Validator(value, options);\n}\n\n/**\n * Checks if the string is a valid ISO 8601 date.\n * If given value is not a string, then it returns false.\n * Use the option strict = true for additional checks for a valid date, e.g. invalidates dates like 2019-02-29.\n */\nexport function IsISO8601(\n  options?: ValidatorJS.IsISO8601Options,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISO8601,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isISO8601(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO 8601 date string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isJSON;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar default_json_options = {\n  allow_primitives: false\n};\n\nfunction isJSON(str, options) {\n  (0, _assertString.default)(str);\n\n  try {\n    options = (0, _merge.default)(options, default_json_options);\n    var primitives = [];\n\n    if (options.allow_primitives) {\n      primitives = [null, false, true];\n    }\n\n    var obj = JSON.parse(str);\n    return primitives.includes(obj) || !!obj && _typeof(obj) === 'object';\n  } catch (e) {\n    /* ignore */\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJSONValidator from 'validator/lib/isJSON';\n\nexport const IS_JSON = 'isJson';\n\n/**\n * Checks if the string is valid JSON (note: uses JSON.parse).\n * If given value is not a string, then it returns false.\n */\nexport function isJSON(value: unknown): boolean {\n  return typeof value === 'string' && isJSONValidator(value);\n}\n\n/**\n * Checks if the string is valid JSON (note: uses JSON.parse).\n * If given value is not a string, then it returns false.\n */\nexport function IsJSON(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_JSON,\n      validator: {\n        validate: (value, args): boolean => isJSON(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a json string', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isJWT;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isBase = _interopRequireDefault(require(\"./isBase64\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isJWT(str) {\n  (0, _assertString.default)(str);\n  var dotSplit = str.split('.');\n  var len = dotSplit.length;\n\n  if (len > 3 || len < 2) {\n    return false;\n  }\n\n  return dotSplit.reduce(function (acc, currElem) {\n    return acc && (0, _isBase.default)(currElem, {\n      urlSafe: true\n    });\n  }, true);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJwtValidator from 'validator/lib/isJWT';\n\nexport const IS_JWT = 'isJwt';\n\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function isJWT(value: unknown): boolean {\n  return typeof value === 'string' && isJwtValidator(value);\n}\n\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function IsJWT(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_JWT,\n      validator: {\n        validate: (value, args): boolean => isJWT(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a jwt string', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLowercase;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isLowercase(str) {\n  (0, _assertString.default)(str);\n  return str === str.toLowerCase();\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLowercaseValidator from 'validator/lib/isLowercase';\n\nexport const IS_LOWERCASE = 'isLowercase';\n\n/**\n * Checks if the string is lowercase.\n * If given value is not a string, then it returns false.\n */\nexport function isLowercase(value: unknown): boolean {\n  return typeof value === 'string' && isLowercaseValidator(value);\n}\n\n/**\n * Checks if the string is lowercase.\n * If given value is not a string, then it returns false.\n */\nexport function IsLowercase(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LOWERCASE,\n      validator: {\n        validate: (value, args): boolean => isLowercase(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a lowercase string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMobilePhone;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\nvar phones = {\n  'am-AM': /^(\\+?374|0)((10|[9|7][0-9])\\d{6}$|[2-4]\\d{7}$)/,\n  'ar-AE': /^((\\+?971)|0)?5[024568]\\d{7}$/,\n  'ar-BH': /^(\\+?973)?(3|6)\\d{7}$/,\n  'ar-DZ': /^(\\+?213|0)(5|6|7)\\d{8}$/,\n  'ar-LB': /^(\\+?961)?((3|81)\\d{6}|7\\d{7})$/,\n  'ar-EG': /^((\\+?20)|0)?1[0125]\\d{8}$/,\n  'ar-IQ': /^(\\+?964|0)?7[0-9]\\d{8}$/,\n  'ar-JO': /^(\\+?962|0)?7[789]\\d{7}$/,\n  'ar-KW': /^(\\+?965)([569]\\d{7}|41\\d{6})$/,\n  'ar-LY': /^((\\+?218)|0)?(9[1-6]\\d{7}|[1-8]\\d{7,9})$/,\n  'ar-MA': /^(?:(?:\\+|00)212|0)[5-7]\\d{8}$/,\n  'ar-OM': /^((\\+|00)968)?(9[1-9])\\d{6}$/,\n  'ar-PS': /^(\\+?970|0)5[6|9](\\d{7})$/,\n  'ar-SA': /^(!?(\\+?966)|0)?5\\d{8}$/,\n  'ar-SY': /^(!?(\\+?963)|0)?9\\d{8}$/,\n  'ar-TN': /^(\\+?216)?[2459]\\d{7}$/,\n  'az-AZ': /^(\\+994|0)(10|5[015]|7[07]|99)\\d{7}$/,\n  'bs-BA': /^((((\\+|00)3876)|06))((([0-3]|[5-6])\\d{6})|(4\\d{7}))$/,\n  'be-BY': /^(\\+?375)?(24|25|29|33|44)\\d{7}$/,\n  'bg-BG': /^(\\+?359|0)?8[789]\\d{7}$/,\n  'bn-BD': /^(\\+?880|0)1[13456789][0-9]{8}$/,\n  'ca-AD': /^(\\+376)?[346]\\d{5}$/,\n  'cs-CZ': /^(\\+?420)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'da-DK': /^(\\+?45)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'de-DE': /^((\\+49|0)1)(5[0-25-9]\\d|6([23]|0\\d?)|7([0-57-9]|6\\d))\\d{7,9}$/,\n  'de-AT': /^(\\+43|0)\\d{1,4}\\d{3,12}$/,\n  'de-CH': /^(\\+41|0)([1-9])\\d{1,9}$/,\n  'de-LU': /^(\\+352)?((6\\d1)\\d{6})$/,\n  'dv-MV': /^(\\+?960)?(7[2-9]|9[1-9])\\d{5}$/,\n  'el-GR': /^(\\+?30|0)?6(8[5-9]|9(?![26])[0-9])\\d{7}$/,\n  'el-CY': /^(\\+?357?)?(9(9|6)\\d{6})$/,\n  'en-AI': /^(\\+?1|0)264(?:2(35|92)|4(?:6[1-2]|76|97)|5(?:3[6-9]|8[1-4])|7(?:2(4|9)|72))\\d{4}$/,\n  'en-AU': /^(\\+?61|0)4\\d{8}$/,\n  'en-AG': /^(?:\\+1|1)268(?:464|7(?:1[3-9]|[28]\\d|3[0246]|64|7[0-689]))\\d{4}$/,\n  'en-BM': /^(\\+?1)?441(((3|7)\\d{6}$)|(5[0-3][0-9]\\d{4}$)|(59\\d{5}$))/,\n  'en-BS': /^(\\+?1[-\\s]?|0)?\\(?242\\)?[-\\s]?\\d{3}[-\\s]?\\d{4}$/,\n  'en-GB': /^(\\+?44|0)7\\d{9}$/,\n  'en-GG': /^(\\+?44|0)1481\\d{6}$/,\n  'en-GH': /^(\\+233|0)(20|50|24|54|27|57|26|56|23|28|55|59)\\d{7}$/,\n  'en-GY': /^(\\+592|0)6\\d{6}$/,\n  'en-HK': /^(\\+?852[-\\s]?)?[456789]\\d{3}[-\\s]?\\d{4}$/,\n  'en-MO': /^(\\+?853[-\\s]?)?[6]\\d{3}[-\\s]?\\d{4}$/,\n  'en-IE': /^(\\+?353|0)8[356789]\\d{7}$/,\n  'en-IN': /^(\\+?91|0)?[6789]\\d{9}$/,\n  'en-JM': /^(\\+?876)?\\d{7}$/,\n  'en-KE': /^(\\+?254|0)(7|1)\\d{8}$/,\n  'en-SS': /^(\\+?211|0)(9[1257])\\d{7}$/,\n  'en-KI': /^((\\+686|686)?)?( )?((6|7)(2|3|8)[0-9]{6})$/,\n  'en-KN': /^(?:\\+1|1)869(?:46\\d|48[89]|55[6-8]|66\\d|76[02-7])\\d{4}$/,\n  'en-LS': /^(\\+?266)(22|28|57|58|59|27|52)\\d{6}$/,\n  'en-MT': /^(\\+?356|0)?(99|79|77|21|27|22|25)[0-9]{6}$/,\n  'en-MU': /^(\\+?230|0)?\\d{8}$/,\n  'en-NA': /^(\\+?264|0)(6|8)\\d{7}$/,\n  'en-NG': /^(\\+?234|0)?[789]\\d{9}$/,\n  'en-NZ': /^(\\+?64|0)[28]\\d{7,9}$/,\n  'en-PG': /^(\\+?675|0)?(7\\d|8[18])\\d{6}$/,\n  'en-PK': /^((00|\\+)?92|0)3[0-6]\\d{8}$/,\n  'en-PH': /^(09|\\+639)\\d{9}$/,\n  'en-RW': /^(\\+?250|0)?[7]\\d{8}$/,\n  'en-SG': /^(\\+65)?[3689]\\d{7}$/,\n  'en-SL': /^(\\+?232|0)\\d{8}$/,\n  'en-TZ': /^(\\+?255|0)?[67]\\d{8}$/,\n  'en-UG': /^(\\+?256|0)?[7]\\d{8}$/,\n  'en-US': /^((\\+1|1)?( |-)?)?(\\([2-9][0-9]{2}\\)|[2-9][0-9]{2})( |-)?([2-9][0-9]{2}( |-)?[0-9]{4})$/,\n  'en-ZA': /^(\\+?27|0)\\d{9}$/,\n  'en-ZM': /^(\\+?26)?09[567]\\d{7}$/,\n  'en-ZW': /^(\\+263)[0-9]{9}$/,\n  'en-BW': /^(\\+?267)?(7[1-8]{1})\\d{6}$/,\n  'es-AR': /^\\+?549(11|[2368]\\d)\\d{8}$/,\n  'es-BO': /^(\\+?591)?(6|7)\\d{7}$/,\n  'es-CO': /^(\\+?57)?3(0(0|1|2|4|5)|1\\d|2[0-4]|5(0|1))\\d{7}$/,\n  'es-CL': /^(\\+?56|0)[2-9]\\d{1}\\d{7}$/,\n  'es-CR': /^(\\+506)?[2-8]\\d{7}$/,\n  'es-CU': /^(\\+53|0053)?5\\d{7}/,\n  'es-DO': /^(\\+?1)?8[024]9\\d{7}$/,\n  'es-HN': /^(\\+?504)?[9|8|3|2]\\d{7}$/,\n  'es-EC': /^(\\+?593|0)([2-7]|9[2-9])\\d{7}$/,\n  'es-ES': /^(\\+?34)?[6|7]\\d{8}$/,\n  'es-PE': /^(\\+?51)?9\\d{8}$/,\n  'es-MX': /^(\\+?52)?(1|01)?\\d{10,11}$/,\n  'es-NI': /^(\\+?505)\\d{7,8}$/,\n  'es-PA': /^(\\+?507)\\d{7,8}$/,\n  'es-PY': /^(\\+?595|0)9[9876]\\d{7}$/,\n  'es-SV': /^(\\+?503)?[67]\\d{7}$/,\n  'es-UY': /^(\\+598|0)9[1-9][\\d]{6}$/,\n  'es-VE': /^(\\+?58)?(2|4)\\d{9}$/,\n  'et-EE': /^(\\+?372)?\\s?(5|8[1-4])\\s?([0-9]\\s?){6,7}$/,\n  'fa-IR': /^(\\+?98[\\-\\s]?|0)9[0-39]\\d[\\-\\s]?\\d{3}[\\-\\s]?\\d{4}$/,\n  'fi-FI': /^(\\+?358|0)\\s?(4[0-6]|50)\\s?(\\d\\s?){4,8}$/,\n  'fj-FJ': /^(\\+?679)?\\s?\\d{3}\\s?\\d{4}$/,\n  'fo-FO': /^(\\+?298)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'fr-BF': /^(\\+226|0)[67]\\d{7}$/,\n  'fr-BJ': /^(\\+229)\\d{8}$/,\n  'fr-CD': /^(\\+?243|0)?(8|9)\\d{8}$/,\n  'fr-CM': /^(\\+?237)6[0-9]{8}$/,\n  'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n  'fr-GF': /^(\\+?594|0|00594)[67]\\d{8}$/,\n  'fr-GP': /^(\\+?590|0|00590)[67]\\d{8}$/,\n  'fr-MQ': /^(\\+?596|0|00596)[67]\\d{8}$/,\n  'fr-PF': /^(\\+?689)?8[789]\\d{6}$/,\n  'fr-RE': /^(\\+?262|0|00262)[67]\\d{8}$/,\n  'he-IL': /^(\\+972|0)([23489]|5[012345689]|77)[1-9]\\d{6}$/,\n  'hu-HU': /^(\\+?36|06)(20|30|31|50|70)\\d{7}$/,\n  'id-ID': /^(\\+?62|0)8(1[123456789]|2[1238]|3[1238]|5[12356789]|7[78]|9[56789]|8[123456789])([\\s?|\\d]{5,11})$/,\n  'ir-IR': /^(\\+98|0)?9\\d{9}$/,\n  'it-IT': /^(\\+?39)?\\s?3\\d{2} ?\\d{6,7}$/,\n  'it-SM': /^((\\+378)|(0549)|(\\+390549)|(\\+3780549))?6\\d{5,9}$/,\n  'ja-JP': /^(\\+81[ \\-]?(\\(0\\))?|0)[6789]0[ \\-]?\\d{4}[ \\-]?\\d{4}$/,\n  'ka-GE': /^(\\+?995)?(79\\d{7}|5\\d{8})$/,\n  'kk-KZ': /^(\\+?7|8)?7\\d{9}$/,\n  'kl-GL': /^(\\+?299)?\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}$/,\n  'ko-KR': /^((\\+?82)[ \\-]?)?0?1([0|1|6|7|8|9]{1})[ \\-]?\\d{3,4}[ \\-]?\\d{4}$/,\n  'ky-KG': /^(\\+?7\\s?\\+?7|0)\\s?\\d{2}\\s?\\d{3}\\s?\\d{4}$/,\n  'lt-LT': /^(\\+370|8)\\d{8}$/,\n  'lv-LV': /^(\\+?371)2\\d{7}$/,\n  'mg-MG': /^((\\+?261|0)(2|3)\\d)?\\d{7}$/,\n  'mn-MN': /^(\\+|00|011)?976(77|81|88|91|94|95|96|99)\\d{6}$/,\n  'my-MM': /^(\\+?959|09|9)(2[5-7]|3[1-2]|4[0-5]|6[6-9]|7[5-9]|9[6-9])[0-9]{7}$/,\n  'ms-MY': /^(\\+?60|0)1(([0145](-|\\s)?\\d{7,8})|([236-9](-|\\s)?\\d{7}))$/,\n  'mz-MZ': /^(\\+?258)?8[234567]\\d{7}$/,\n  'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'ne-NP': /^(\\+?977)?9[78]\\d{8}$/,\n  'nl-BE': /^(\\+?32|0)4\\d{8}$/,\n  'nl-NL': /^(((\\+|00)?31\\(0\\))|((\\+|00)?31)|0)6{1}\\d{8}$/,\n  'nl-AW': /^(\\+)?297(56|59|64|73|74|99)\\d{5}$/,\n  'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n  'pl-PL': /^(\\+?48)? ?[5-8]\\d ?\\d{3} ?\\d{2} ?\\d{2}$/,\n  'pt-BR': /^((\\+?55\\ ?[1-9]{2}\\ ?)|(\\+?55\\ ?\\([1-9]{2}\\)\\ ?)|(0[1-9]{2}\\ ?)|(\\([1-9]{2}\\)\\ ?)|([1-9]{2}\\ ?))((\\d{4}\\-?\\d{4})|(9[1-9]{1}\\d{3}\\-?\\d{4}))$/,\n  'pt-PT': /^(\\+?351)?9[1236]\\d{7}$/,\n  'pt-AO': /^(\\+244)\\d{9}$/,\n  'ro-MD': /^(\\+?373|0)((6(0|1|2|6|7|8|9))|(7(6|7|8|9)))\\d{6}$/,\n  'ro-RO': /^(\\+?40|0)\\s?7\\d{2}(\\/|\\s|\\.|-)?\\d{3}(\\s|\\.|-)?\\d{3}$/,\n  'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n  'si-LK': /^(?:0|94|\\+94)?(7(0|1|2|4|5|6|7|8)( |-)?)\\d{7}$/,\n  'sl-SI': /^(\\+386\\s?|0)(\\d{1}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}|\\d{2}\\s?\\d{3}\\s?\\d{3})$/,\n  'sk-SK': /^(\\+?421)? ?[1-9][0-9]{2} ?[0-9]{3} ?[0-9]{3}$/,\n  'sq-AL': /^(\\+355|0)6[789]\\d{6}$/,\n  'sr-RS': /^(\\+3816|06)[- \\d]{5,9}$/,\n  'sv-SE': /^(\\+?46|0)[\\s\\-]?7[\\s\\-]?[02369]([\\s\\-]?\\d){7}$/,\n  'tg-TJ': /^(\\+?992)?[5][5]\\d{7}$/,\n  'th-TH': /^(\\+66|66|0)\\d{9}$/,\n  'tr-TR': /^(\\+?90|0)?5\\d{9}$/,\n  'tk-TM': /^(\\+993|993|8)\\d{8}$/,\n  'uk-UA': /^(\\+?38|8)?0\\d{9}$/,\n  'uz-UZ': /^(\\+?998)?(6[125-79]|7[1-69]|88|9\\d)\\d{7}$/,\n  'vi-VN': /^((\\+?84)|0)((3([2-9]))|(5([25689]))|(7([0|6-9]))|(8([1-9]))|(9([0-9])))([0-9]{7})$/,\n  'zh-CN': /^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$/,\n  'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/,\n  'dz-BT': /^(\\+?975|0)?(17|16|77|02)\\d{6}$/,\n  'ar-YE': /^(((\\+|00)9677|0?7)[0137]\\d{7}|((\\+|00)967|0)[1-7]\\d{6})$/,\n  'ar-EH': /^(\\+?212|0)[\\s\\-]?(5288|5289)[\\s\\-]?\\d{5}$/,\n  'fa-AF': /^(\\+93|0)?(2{1}[0-8]{1}|[3-5]{1}[0-4]{1})(\\d{7})$/\n};\n/* eslint-enable max-len */\n// aliases\n\nphones['en-CA'] = phones['en-US'];\nphones['fr-CA'] = phones['en-CA'];\nphones['fr-BE'] = phones['nl-BE'];\nphones['zh-HK'] = phones['en-HK'];\nphones['zh-MO'] = phones['en-MO'];\nphones['ga-IE'] = phones['en-IE'];\nphones['fr-CH'] = phones['de-CH'];\nphones['it-CH'] = phones['fr-CH'];\n\nfunction isMobilePhone(str, locale, options) {\n  (0, _assertString.default)(str);\n\n  if (options && options.strictMode && !str.startsWith('+')) {\n    return false;\n  }\n\n  if (Array.isArray(locale)) {\n    return locale.some(function (key) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  } else if (locale in phones) {\n    return phones[locale].test(str); // alias falsey locale as 'any'\n  } else if (!locale || locale === 'any') {\n    for (var key in phones) {\n      // istanbul ignore else\n      if (phones.hasOwnProperty(key)) {\n        var phone = phones[key];\n\n        if (phone.test(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nvar locales = Object.keys(phones);\nexports.locales = locales;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMobilePhoneValidator from 'validator/lib/isMobilePhone';\nimport ValidatorJS from 'validator';\n\nexport const IS_MOBILE_PHONE = 'isMobilePhone';\n\n/**\n * Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])\n * OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',\n * 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',\n * 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',\n * 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',\n * 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',\n * 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',\n * 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',\n * 'zh-HK', 'zh-MO', 'zh-TW']\n * If given value is not a string, then it returns false.\n */\nexport function isMobilePhone(\n  value: unknown,\n  locale?: ValidatorJS.MobilePhoneLocale,\n  options?: ValidatorJS.IsMobilePhoneOptions\n): boolean {\n  return typeof value === 'string' && isMobilePhoneValidator(value, locale, options);\n}\n\n/**\n * Checks if the string is a mobile phone number (locale is either an array of locales (e.g ['sk-SK', 'sr-RS'])\n * OR one of ['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', ar-JO', 'ar-KW', 'ar-SA', 'ar-SY', 'ar-TN', 'be-BY',\n * 'bg-BG', 'bn-BD', 'cs-CZ', 'da-DK', 'de-DE', 'de-AT', 'el-GR', 'en-AU', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-HK',\n * 'en-MO', 'en-IE', 'en-IN', 'en-KE', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-UG',\n * 'en-US', 'en-TZ', 'en-ZA', 'en-ZM', 'es-CL', 'es-CR', 'es-EC', 'es-ES', 'es-MX', 'es-PA', 'es-PY', 'es-UY', 'et-EE',\n * 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-RE', 'he-IL', 'hu-HU', 'id-ID',\n * 'it-IT', 'ja-JP', 'kk-KZ', 'kl-GL', 'ko-KR', 'lt-LT', 'ms-MY', 'nb-NO', 'ne-NP', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL',\n * 'pt-BR', 'pt-PT', 'ro-RO', 'ru-RU', 'sl-SI', 'sk-SK', 'sr-RS', 'sv-SE', 'th-TH', 'tr-TR', 'uk-UA', 'vi-VN', 'zh-CN',\n * 'zh-HK', 'zh-MO', 'zh-TW']\n * If given value is not a string, then it returns false.\n */\nexport function IsMobilePhone(\n  locale?: ValidatorJS.MobilePhoneLocale,\n  options?: ValidatorJS.IsMobilePhoneOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MOBILE_PHONE,\n      constraints: [locale, options],\n      validator: {\n        validate: (value, args): boolean => isMobilePhone(value, args?.constraints[0], args?.constraints[1]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a phone number', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO31661Alpha2;\nexports.CountryCodes = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\nvar validISO31661Alpha2CountriesCodes = new Setn\nfunction isISO31661Alpha2(str) {\n  (0, _assertString.default)(str);\n  return validISO31661Alpha2CountriesCodes.has(str.toUpperCase());\n}\n\nvar CountryCodes = validISO31661Alpha2CountriesCodes;\nexports.CountryCodes = CountryCodes;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha2Validator from 'validator/lib/isISO31661Alpha2';\n\nexport const IS_ISO31661_ALPHA_2 = 'isISO31661Alpha2';\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function isISO31661Alpha2(value: unknown): boolean {\n  return typeof value === 'string' && isISO31661Alpha2Validator(value);\n}\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function IsISO31661Alpha2(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISO31661_ALPHA_2,\n      validator: {\n        validate: (value, args): boolean => isISO31661Alpha2(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO31661 Alpha2 code',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO31661Alpha3;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3\nvar validISO31661Alpha3CountriesCodes = new Set(['AFG', 'ALA', 'ALB', 'DZA', 'ASM', 'AND', 'AGO', 'AIA', 'ATA', 'ATG', 'ARG', 'ARM', 'ABW', 'AUS', 'AUT', 'AZE', 'BHS', 'BHR', 'BGD', 'BRB', 'BLR', 'BEL', 'BLZ', 'BEN', 'BMU', 'BTN', 'BOL', 'BES', 'BIH', 'BWA', 'BVT', 'BRA', 'IOT', 'BRN', 'BGR', 'BFA', 'BDI', 'KHM', 'CMR', 'CAN', 'CPV', 'CYM', 'CAF', 'TCD', 'CHL', 'CHN', 'CXR', 'CCK', 'COL', 'COM', 'COG', 'COD', 'COK', 'CRI', 'CIV', 'HRV', 'CUB', 'CUW', 'CYP', 'CZE', 'DNK', 'DJI', 'DMA', 'DOM', 'ECU', 'EGY', 'SLV', 'GNQ', 'ERI', 'EST', 'ETH', 'FLK', 'FRO', 'FJI', 'FIN', 'FRA', 'GUF', 'PYF', 'ATF', 'GAB', 'GMB', 'GEO', 'DEU', 'GHA', 'GIB', 'GRC', 'GRL', 'GRD', 'GLP', 'GUM', 'GTM', 'GGY', 'GIN', 'GNB', 'GUY', 'HTI', 'HMD', 'VAT', 'HND', 'HKG', 'HUN', 'ISL', 'IND', 'IDN', 'IRN', 'IRQ', 'IRL', 'IMN', 'ISR', 'ITA', 'JAM', 'JPN', 'JEY', 'JOR', 'KAZ', 'KEN', 'KIR', 'PRK', 'KOR', 'KWT', 'KGZ', 'LAO', 'LVA', 'LBN', 'LSO', 'LBR', 'LBY', 'LIE', 'LTU', 'LUX', 'MAC', 'MKD', 'MDG', 'MWI', 'MYS', 'MDV', 'MLI', 'MLT', 'MHL', 'MTQ', 'MRT', 'MUS', 'MYT', 'MEX', 'FSM', 'MDA', 'MCO', 'MNG', 'MNE', 'MSR', 'MAR', 'MOZ', 'MMR', 'NAM', 'NRU', 'NPL', 'NLD', 'NCL', 'NZL', 'NIC', 'NER', 'NGA', 'NIU', 'NFK', 'MNP', 'NOR', 'OMN', 'PAK', 'PLW', 'PSE', 'PAN', 'PNG', 'PRY', 'PER', 'PHL', 'PCN', 'POL', 'PRT', 'PRI', 'QAT', 'REU', 'ROU', 'RUS', 'RWA', 'BLM', 'SHN', 'KNA', 'LCA', 'MAF', 'SPM', 'VCT', 'WSM', 'SMR', 'STP', 'SAU', 'SEN', 'SRB', 'SYC', 'SLE', 'SGP', 'SXM', 'SVK', 'SVN', 'SLB', 'SOM', 'ZAF', 'SGS', 'SSD', 'ESP', 'LKA', 'SDN', 'SUR', 'SJM', 'SWZ', 'SWE', 'CHE', 'SYR', 'TWN', 'TJK', 'TZA', 'THA', 'TLS', 'TGO', 'TKL', 'TON', 'TTO', 'TUN', 'TUR', 'TKM', 'TCA', 'TUV', 'UGA', 'UKR', 'ARE', 'GBR', 'USA', 'UMI', 'URY', 'UZB', 'VUT', 'VEN', 'VNM', 'VGB', 'VIR', 'WLF', 'ESH', 'YEM', 'ZMB', 'ZWE']);\n\nfunction isISO31661Alpha3(str) {\n  (0, _assertString.default)(str);\n  return validISO31661Alpha3CountriesCodes.has(str.toUpperCase());\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha3Validator from 'validator/lib/isISO31661Alpha3';\n\nexport const IS_ISO31661_ALPHA_3 = 'isISO31661Alpha3';\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function isISO31661Alpha3(value: unknown): boolean {\n  return typeof value === 'string' && isISO31661Alpha3Validator(value);\n}\n\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) officially assigned country code.\n */\nexport function IsISO31661Alpha3(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISO31661_ALPHA_3,\n      validator: {\n        validate: (value, args): boolean => isISO31661Alpha3(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO31661 Alpha3 code',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMongoId;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isHexadecimal = _interopRequireDefault(require(\"./isHexadecimal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isMongoId(str) {\n  (0, _assertString.default)(str);\n  return (0, _isHexadecimal.default)(str) && str.length === 24;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMongoIdValidator from 'validator/lib/isMongoId';\n\nexport const IS_MONGO_ID = 'isMongoId';\n\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\nexport function isMongoId(value: unknown): boolean {\n  return typeof value === 'string' && isMongoIdValidator(value);\n}\n\n/**\n * Checks if the string is a valid hex-encoded representation of a MongoDB ObjectId.\n * If given value is not a string, then it returns false.\n */\nexport function IsMongoId(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MONGO_ID,\n      validator: {\n        validate: (value, args): boolean => isMongoId(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a mongodb id', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMultibyte;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable no-control-regex */\nvar multibyte = /[^\\x00-\\x7F]/;\n/* eslint-enable no-control-regex */\n\nfunction isMultibyte(str) {\n  (0, _assertString.default)(str);\n  return multibyte.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMultibyteValidator from 'validator/lib/isMultibyte';\n\nexport const IS_MULTIBYTE = 'isMultibyte';\n\n/**\n * Checks if the string contains one or more multibyte chars.\n * If given value is not a string, then it returns false.\n */\nexport function isMultibyte(value: unknown): boolean {\n  return typeof value === 'string' && isMultibyteValidator(value);\n}\n\n/**\n * Checks if the string contains one or more multibyte chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsMultibyte(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MULTIBYTE,\n      validator: {\n        validate: (value, args): boolean => isMultibyte(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain one or more multibyte chars',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSurrogatePair;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n\nfunction isSurrogatePair(str) {\n  (0, _assertString.default)(str);\n  return surrogatePair.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isSurrogatePairValidator from 'validator/lib/isSurrogatePair';\n\nexport const IS_SURROGATE_PAIR = 'isSurrogatePair';\n\n/**\n * Checks if the string contains any surrogate pairs chars.\n * If given value is not a string, then it returns false.\n */\nexport function isSurrogatePair(value: unknown): boolean {\n  return typeof value === 'string' && isSurrogatePairValidator(value);\n}\n\n/**\n * Checks if the string contains any surrogate pairs chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsSurrogatePair(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_SURROGATE_PAIR,\n      validator: {\n        validate: (value, args): boolean => isSurrogatePair(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain any surrogate pairs chars',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.slice(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.slice(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (host === '' && !options.require_host) {\n    return true;\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUrlValidator from 'validator/lib/isURL';\nimport ValidatorJS from 'validator';\n\nexport const IS_URL = 'isUrl';\n\n/**\n * Checks if the string is a url.\n * If given value is not a string, then it returns false.\n */\nexport function isURL(value: string, options?: ValidatorJS.IsURLOptions): boolean {\n  return typeof value === 'string' && isUrlValidator(value, options);\n}\n\n/**\n * Checks if the string is a url.\n * If given value is not a string, then it returns false.\n */\nexport function IsUrl(options?: ValidatorJS.IsURLOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_URL,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isURL(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a URL address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUUID;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar uuid = {\n  1: /^[0-9A-F]{8}-[0-9A-F]{4}-1[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  2: /^[0-9A-F]{8}-[0-9A-F]{4}-2[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n  4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n  all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n};\n\nfunction isUUID(str, version) {\n  (0, _assertString.default)(str);\n  var pattern = uuid[![undefined, null].includes(version) ? version : 'all'];\n  return !!pattern && pattern.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUuidValidator from 'validator/lib/isUUID';\n\nexport type UUIDVersion = '3' | '4' | '5' | 'all' | 3 | 4 | 5;\n\nexport const IS_UUID = 'isUuid';\n\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n * If given value is not a string, then it returns false.\n */\nexport function isUUID(value: unknown, version?: UUIDVersion): boolean {\n  return typeof value === 'string' && isUuidValidator(value, version);\n}\n\n/**\n * Checks if the string is a UUID (version 3, 4 or 5).\n * If given value is not a string, then it returns false.\n */\nexport function IsUUID(version?: UUIDVersion, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_UUID,\n      constraints: [version],\n      validator: {\n        validate: (value, args): boolean => isUUID(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a UUID', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_FIREBASE_PUSH_ID = 'IsFirebasePushId';\n\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function isFirebasePushId(value: unknown): boolean {\n  const webSafeRegex = /^[a-zA-Z0-9_-]*$/;\n  return typeof value === 'string' && value.length === 20 && webSafeRegex.test(value);\n}\n\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function IsFirebasePushId(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_FIREBASE_PUSH_ID,\n      validator: {\n        validate: (value, args): boolean => isFirebasePushId(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a Firebase Push Id',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isUppercase;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isUppercase(str) {\n  (0, _assertString.default)(str);\n  return str === str.toUpperCase();\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isUppercaseValidator from 'validator/lib/isUppercase';\n\nexport const IS_UPPERCASE = 'isUppercase';\n\n/**\n * Checks if the string is uppercase.\n * If given value is not a string, then it returns false.\n */\nexport function isUppercase(value: unknown): boolean {\n  return typeof value === 'string' && isUppercaseValidator(value);\n}\n\n/**\n * Checks if the string is uppercase.\n * If given value is not a string, then it returns false.\n */\nexport function IsUppercase(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_UPPERCASE,\n      validator: {\n        validate: (value, args): boolean => isUppercase(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be uppercase', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLength;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable prefer-rest-params */\nfunction isLength(str, options) {\n  (0, _assertString.default)(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n\n  var presentationSequences = str.match(/(\\uFE0F|\\uFE0E)/g) || [];\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - presentationSequences.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\n\nexport const IS_LENGTH = 'isLength';\n\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function length(value: unknown, min: number, max?: number): boolean {\n  return typeof value === 'string' && isLengthValidator(value, { min, max });\n}\n\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function Length(min: number, max?: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LENGTH,\n      constraints: [min, max],\n      validator: {\n        validate: (value, args): boolean => length(value, args?.constraints[0], args?.constraints[1]),\n        defaultMessage: buildMessage((eachPrefix, args) => {\n          const isMinLength = args?.constraints[0] !== null && args?.constraints[0] !== undefined;\n          const isMaxLength = args?.constraints[1] !== null && args?.constraints[1] !== undefined;\n          if (isMinLength && (!args.value || args.value.length < args?.constraints[0])) {\n            return eachPrefix + '$property must be longer than or equal to $constraint1 characters';\n          } else if (isMaxLength && args.value.length > args?.constraints[1]) {\n            return eachPrefix + '$property must be shorter than or equal to $constraint2 characters';\n          }\n          return (\n            eachPrefix +\n            '$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters'\n          );\n        }, validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\n\nexport const MAX_LENGTH = 'maxLength';\n\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function maxLength(value: unknown, max: number): boolean {\n  return typeof value === 'string' && isLengthValidator(value, { min: 0, max });\n}\n\n/**\n * Checks if the string's length is not more than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MaxLength(max: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MAX_LENGTH,\n      constraints: [max],\n      validator: {\n        validate: (value, args): boolean => maxLength(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be shorter than or equal to $constraint1 characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\n\nexport const MIN_LENGTH = 'minLength';\n\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function minLength(value: unknown, min: number): boolean {\n  return typeof value === 'string' && isLengthValidator(value, { min });\n}\n\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MinLength(min: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: MIN_LENGTH,\n      constraints: [min],\n      validator: {\n        validate: (value, args): boolean => minLength(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be longer than or equal to $constraint1 characters',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = matches;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction matches(str, pattern, modifiers) {\n  (0, _assertString.default)(str);\n\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n\n  return !!str.match(pattern);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\n\nexport const MATCHES = 'matches';\n\n/**\n * Checks if string matches the pattern. Either matches('foo', /foo/i).\n * If given value is not a string, then it returns false.\n */\nexport function matches(value: string, pattern: RegExp): boolean;\nexport function matches(value: string, pattern: string, modifiers: string): boolean;\nexport function matches(value: string, pattern: RegExp | string, modifiers?: string): boolean {\n  return typeof value === 'string' && matchesValidator(value, pattern as unknown as any, modifiers);\n}\n\n/**\n * Checks if string matches the pattern. Either matches('foo', /foo/i)\n * If given value is not a string, then it returns false.\n */\nexport function Matches(pattern: RegExp, validationOptions?: ValidationOptions): PropertyDecorator;\nexport function Matches(pattern: string, modifiers?: string, validationOptions?: ValidationOptions): PropertyDecorator;\nexport function Matches(\n  pattern: RegExp | string,\n  modifiersOrAnnotationOptions?: string | ValidationOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  let modifiers: string;\n  if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {\n    validationOptions = modifiersOrAnnotationOptions;\n  } else {\n    modifiers = modifiersOrAnnotationOptions as string;\n  }\n\n  return ValidateBy(\n    {\n      name: MATCHES,\n      constraints: [pattern, modifiers],\n      validator: {\n        validate: (value, args): boolean => matches(value, args?.constraints[0], args?.constraints[1]),\n        defaultMessage: buildMessage(\n          (eachPrefix, args) => eachPrefix + '$property must match $constraint1 regular expression',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([457]\\\\d{6})$|1\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2457]\\\\d{6})$|1\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"([267]\\\\d{6})$|1\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"(183[12])|0\",0,0,0,[[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9,12],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[047]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"[24-689]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]]],\"BL\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:395|76[018])\\\\d|475[0-2])\\\\d{4}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-8]\\\\d{6})$|1\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-79]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\",[10,11],[[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|91\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0(4(?:[14]4|56)|[579])?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"[27]\\\\d{6,7}|[34]\\\\d{5,7}|(?:5|8\\\\d\\\\d)\\\\d{7}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[0568]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[189]\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[12]00|[368]|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[1245]|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[0-579])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-2]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"[56]94\\\\d{6}|(?:80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[56]|9[47]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[89]\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"([25-9]\\\\d{5})$|0\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d|60)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:395|76[018])\\\\d|475[0-2])\\\\d{4}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-9]\\\\d{6})$|1\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"9008\\\\d{3}|(?:[2-467]\\\\d\\\\d|862)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-5]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"(?:[2-489]\\\\d|55)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([25-8]\\\\d{5})$|0\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([0-24-8]\\\\d{5})$|0\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|(?:[235-8]\\\\d|99)\\\\d{7}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-8]\\\\d{6})$|1\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"(1001)|0\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:[25]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[4-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"8 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(8-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(8-$1)\",1]],\"8\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{5})(\\\\d{4})\",\"$1-$2\",[\"5(?:29|38)\",\"5(?:29[1289]|389)\",\"529(?:1[1-46-9]|2[013-8]|90)|5(?:298|389)[0-46-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-489]|3[5-9]|9)|892\",\"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5293[01]\\\\d{4}|5(?:2(?:[0-25-7]\\\\d|3[1-578]|4[02-46-8]|8[0235-7]|9[0-289])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[0189]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[017]\\\\d|2[0-2]|6[0-8]|8[0-3]))\\\\d{6}\"],[\"80\\\\d{7}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"592(?:4[0-2]|93)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:395|76[018])\\\\d|475[0-2])\\\\d{4}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"([24-9]\\\\d{6})$|0\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"596\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"([34]\\\\d{6})$|1\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57]\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[34679]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"1(?:(?:[27]2|44|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[01]\\\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-79]|9[1-8])|[2-9]\\\\d)\\\\d{8}\",[10,11],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"],0,1],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 $3 $4\",[\"1(?:33|5[56]|81)\"],0,1],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 $3 $4\",[\"1\"],0,1]],\"01\",0,\"0(?:[12]|4[45])|1\",0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[04]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-7]|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[47]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[29]\\\\d{7,9}|50\\\\d{5}(?:\\\\d{2,3})?|6[0-35-9]\\\\d{6}|7\\\\d{7,8}|8\\\\d{4,9}|(?:11\\\\d|[34])\\\\d{7}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-579]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|[89]0\",\"50(?:[0367]|88)|[89]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[59]|80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7|86\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"[45]\\\\d{5}|(?:708|80\\\\d)\\\\d{6}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",[7,8,9,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[16]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"00\",\"(?:26|[689]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-3]))\\\\d{4}\"],[\"(?:69(?:2\\\\d\\\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|6[0-6]|7[0-27]|8[0-8]|9[0-479]))|9(?:399[0-3]|479[0-2]|76(?:2[27]|3[0-37]|9\\\\d)))\\\\d{4}\"],[\"80\\\\d{7}\"],[\"89[1-37-9]\\\\d{6}\"],0,0,0,0,0,[\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]],\"RO\":[\"40\",\"00\",\"(?:[2378]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[237-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]]],\"0\"],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-6]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|[57]9)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"(?:2|90)4|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3478]|64|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6(?:0[5-7]|[1-35-9])|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"(5\\\\d{6})$|1\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-479]\\\\d{6})$|1\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"[0-57-9]\\\\d{8}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[34]7|91[78]\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"[1-6]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"6\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|616)\",\"5(?:[0-59]|6161)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-46-8]\\\\d{6})$|1\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"5056(?:[0-35-9]\\\\d|4[46])\\\\d{4}|(?:4722|505[2-57-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[0-2]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"(?:0004|4)\\\\d{9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[7,8,10,13],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"405|8|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"810\",\"(?:33|[5-79]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[35-9]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-578]\\\\d{6})$|1\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[69]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[3578]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[23]\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7(?:[24-6]|8[0-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"(?:(?:(?:26|63)9|80\\\\d)\\\\d|9398)\\\\d{5}\",[9],0,\"0\",0,0,0,0,\"269|63|9398\"],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"[0-36-9]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-36-9]\"]]],0,0,0,0,0,0,[0,[\"[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"49\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"1[36]|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"16\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|23|3(?:[15]|4[57])|4|51\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-35]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]],\"883\":[\"883\",0,\"(?:[1-4]\\\\d|51)\\\\d{6,10}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\",\"$1 $2 $3\",[\"[14]|2[24-689]|3[02-689]|51[24-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[235]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[013-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}", "// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nexport default function withMetadataArgument(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}", "// https://stackoverflow.com/a/46971044/970769\r\n// \"Breaking changes in Typescript 2.1\"\r\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\r\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\r\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\nexport default class ParseError extends Error {\r\n  constructor(code) {\r\n    super(code)\r\n    // Set the prototype explicitly.\r\n    // Any subclass of FooError will have to manually set the prototype as well.\r\n    Object.setPrototypeOf(this, ParseError.prototype)\r\n    this.name = this.constructor.name\r\n  }\r\n}", "// The minimum length of the national significant number.\r\nexport const MIN_LENGTH_FOR_NSN = 2\r\n\r\n// The ITU says the maximum length should be 15,\r\n// but one can find longer numbers in Germany.\r\nexport const MAX_LENGTH_FOR_NSN = 17\r\n\r\n// The maximum length of the country calling code.\r\nexport const MAX_LENGTH_COUNTRY_CODE = 3\r\n\r\n// Digits accepted in phone numbers\r\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\r\nexport const VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9'\r\n\r\n// `DASHES` will be right after the opening square bracket of the \"character class\"\r\nconst DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D'\r\nconst SLASHES = '\\uFF0F/'\r\nconst DOTS = '\\uFF0E.'\r\nexport const WHITESPACE = ' \\u00A0\\u00AD\\u200B\\u2060\\u3000'\r\nconst BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]'\r\n// export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\r\nconst TILDES = '~\\u2053\\u223C\\uFF5E'\r\n\r\n// Regular expression of acceptable punctuation found in phone numbers. This\r\n// excludes punctuation found as a leading character only. This consists of dash\r\n// characters, white space characters, full stops, slashes, square brackets,\r\n// parentheses and tildes. Full-width variants are also present.\r\nexport const VALID_PUNCTUATION = `${DASHES}${SLASHES}${DOTS}${WHITESPACE}${BRACKETS}${TILDES}`\r\n\r\nexport const PLUS_CHARS = '+\\uFF0B'\r\n// const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')", "// Copy-pasted from:\r\n// https://github.com/substack/semver-compare/blob/master/index.js\r\n//\r\n// Inlining this function because some users reported issues with\r\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\r\n//\r\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\r\nexport default function(a, b) {\r\n    a = a.split('-')\r\n    b = b.split('-')\r\n    var pa = a[0].split('.')\r\n    var pb = b[0].split('.')\r\n    for (var i = 0; i < 3; i++) {\r\n        var na = Number(pa[i])\r\n        var nb = Number(pb[i])\r\n        if (na > nb) return 1\r\n        if (nb > na) return -1\r\n        if (!isNaN(na) && isNaN(nb)) return 1\r\n        if (isNaN(na) && !isNaN(nb)) return -1\r\n    }\r\n    if (a[1] && b[1]) {\r\n        return a[1] > b[1] ? 1 : (a[1] < b[1] ? -1 : 0)\r\n    }\r\n    return !a[1] && b[1] ? 1 : (a[1] && !b[1] ? -1 : 0)\r\n}", "import compare from './tools/semver-compare.js'\r\n\r\n// Added \"possibleLengths\" and renamed\r\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\r\nconst V2 = '1.0.18'\r\n\r\n// Added \"idd_prefix\" and \"default_idd_prefix\".\r\nconst V3 = '1.2.0'\r\n\r\n// Moved `001` country code to \"nonGeographic\" section of metadata.\r\nconst V4 = '1.7.35'\r\n\r\nconst DEFAULT_EXT_PREFIX = ' ext. '\r\n\r\nconst CALLING_CODE_REG_EXP = /^\\d+$/\r\n\r\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\r\nexport default class Metadata {\r\n\tconstructor(metadata) {\r\n\t\tvalidateMetadata(metadata)\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, metadata)\r\n\t}\r\n\r\n\tgetCountries() {\r\n\t\treturn Object.keys(this.metadata.countries).filter(_ => _ !== '001')\r\n\t}\r\n\r\n\tgetCountryMetadata(countryCode) {\r\n\t\treturn this.metadata.countries[countryCode]\r\n\t}\r\n\r\n\tnonGeographic() {\r\n\t\tif (this.v1 || this.v2 || this.v3) return\r\n\t\t// `nonGeographical` was a typo.\r\n\t\t// It's present in metadata generated from `1.7.35` to `1.7.37`.\r\n\t\t// The test case could be found by searching for \"nonGeographical\".\r\n\t\treturn this.metadata.nonGeographic || this.metadata.nonGeographical\r\n\t}\r\n\r\n\thasCountry(country) {\r\n\t\treturn this.getCountryMetadata(country) !== undefined\r\n\t}\r\n\r\n\thasCallingCode(callingCode) {\r\n\t\tif (this.getCountryCodesForCallingCode(callingCode)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tif (this.nonGeographic()[callingCode]) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisNonGeographicCallingCode(callingCode) {\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\treturn this.nonGeographic()[callingCode] ? true : false\r\n\t\t} else {\r\n\t\t\treturn this.getCountryCodesForCallingCode(callingCode) ? false : true\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountry(countryCode) {\r\n\t\treturn this.selectNumberingPlan(countryCode)\r\n\t}\r\n\r\n\tselectNumberingPlan(countryCode, callingCode) {\r\n\t\t// Supports just passing `callingCode` as the first argument.\r\n\t\tif (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\r\n\t\t\tcallingCode = countryCode\r\n\t\t\tcountryCode = null\r\n\t\t}\r\n\t\tif (countryCode && countryCode !== '001') {\r\n\t\t\tif (!this.hasCountry(countryCode)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${countryCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this)\r\n\t\t} else if (callingCode) {\r\n\t\t\tif (!this.hasCallingCode(callingCode)) {\r\n\t\t\t\tthrow new Error(`Unknown calling code: ${callingCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this)\r\n\t\t} else {\r\n\t\t\tthis.numberingPlan = undefined\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetCountryCodesForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\tif (countryCodes) {\r\n\t\t\t// Metadata before V4 included \"non-geographic entity\" calling codes\r\n\t\t\t// inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\r\n\t\t\t// Now the semantics of `country_calling_codes` has changed:\r\n\t\t\t// it's specifically for \"countries\" now.\r\n\t\t\t// Older versions of custom metadata will simply skip parsing\r\n\t\t\t// \"non-geographic entity\" phone numbers with new versions\r\n\t\t\t// of this library: it's not considered a bug,\r\n\t\t\t// because such numbers are extremely rare,\r\n\t\t\t// and developers extremely rarely use custom metadata.\r\n\t\t\tif (countryCodes.length === 1 && countryCodes[0].length === 3) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\treturn countryCodes\r\n\t\t}\r\n\t}\r\n\r\n\tgetCountryCodeForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.getCountryCodesForCallingCode(callingCode)\r\n\t\tif (countryCodes) {\r\n\t\t\treturn countryCodes[0]\r\n\t\t}\r\n\t}\r\n\r\n\tgetNumberingPlanMetadata(callingCode) {\r\n\t\tconst countryCode = this.getCountryCodeForCallingCode(callingCode)\r\n\t\tif (countryCode) {\r\n\t\t\treturn this.getCountryMetadata(countryCode)\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tconst metadata = this.nonGeographic()[callingCode]\r\n\t\t\tif (metadata) {\r\n\t\t\t\treturn metadata\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\t// In that metadata, there was no concept of \"non-geographic\" metadata\r\n\t\t\t// so metadata for `001` country code was stored along with other countries.\r\n\t\t\t// The test case can be found by searching for:\r\n\t\t\t// \"should work around `nonGeographic` metadata not existing\".\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn this.metadata.countries['001']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountryCallingCode() {\r\n\t\treturn this.numberingPlan.callingCode()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tIDDPrefix() {\r\n\t\treturn this.numberingPlan.IDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tdefaultIDDPrefix() {\r\n\t\treturn this.numberingPlan.defaultIDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalNumberPattern() {\r\n\t\treturn this.numberingPlan.nationalNumberPattern()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tpossibleLengths() {\r\n\t\treturn this.numberingPlan.possibleLengths()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tformats() {\r\n\t\treturn this.numberingPlan.formats()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixForParsing() {\r\n\t\treturn this.numberingPlan.nationalPrefixForParsing()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.numberingPlan.nationalPrefixTransformRule()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tleadingDigits() {\r\n\t\treturn this.numberingPlan.leadingDigits()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\thasTypes() {\r\n\t\treturn this.numberingPlan.hasTypes()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\ttype(type) {\r\n\t\treturn this.numberingPlan.type(type)\r\n\t}\r\n\r\n\t// Deprecated.\r\n\text() {\r\n\t\treturn this.numberingPlan.ext()\r\n\t}\r\n\r\n\tcountryCallingCodes() {\r\n\t\tif (this.v1) return this.metadata.country_phone_code_to_countries\r\n\t\treturn this.metadata.country_calling_codes\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tchooseCountryByCountryCallingCode(callingCode) {\r\n\t\treturn this.selectNumberingPlan(callingCode)\r\n\t}\r\n\r\n\thasSelectedNumberingPlan() {\r\n\t\treturn this.numberingPlan !== undefined\r\n\t}\r\n}\r\n\r\nclass NumberingPlan {\r\n\tconstructor(metadata, globalMetadataObject) {\r\n\t\tthis.globalMetadataObject = globalMetadataObject\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, globalMetadataObject.metadata)\r\n\t}\r\n\r\n\tcallingCode() {\r\n\t\treturn this.metadata[0]\r\n\t}\r\n\r\n\t// Formatting information for regions which share\r\n\t// a country calling code is contained by only one region\r\n\t// for performance reasons. For example, for NANPA region\r\n\t// (\"North American Numbering Plan Administration\",\r\n\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\r\n\t// it will be contained in the metadata for `US`.\r\n\tgetDefaultCountryMetadataForRegion() {\r\n\t\treturn this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())\r\n\t}\r\n\r\n\t// Is always present.\r\n\tIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[1]\r\n\t}\r\n\r\n\t// Is only present when a country supports multiple IDD prefixes.\r\n\tdefaultIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[12]\r\n\t}\r\n\r\n\tnationalNumberPattern() {\r\n\t\tif (this.v1 || this.v2) return this.metadata[1]\r\n\t\treturn this.metadata[2]\r\n\t}\r\n\r\n\t// \"possible length\" data is always present in Google's metadata.\r\n\tpossibleLengths() {\r\n\t\tif (this.v1) return\r\n\t\treturn this.metadata[this.v2 ? 2 : 3]\r\n\t}\r\n\r\n\t_getFormats(metadata) {\r\n\t\treturn metadata[this.v1 ? 2 : this.v2 ? 3 : 4]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// formats are all stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tformats() {\r\n\t\tconst formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || []\r\n\t\treturn formats.map(_ => new Format(_, this))\r\n\t}\r\n\r\n\tnationalPrefix() {\r\n\t\treturn this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5]\r\n\t}\r\n\r\n\t_getNationalPrefixFormattingRule(metadata) {\r\n\t\treturn metadata[this.v1 ? 4 : this.v2 ? 5 : 6]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// national prefix formatting rule is stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\t_nationalPrefixForParsing() {\r\n\t\treturn this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7]\r\n\t}\r\n\r\n\tnationalPrefixForParsing() {\r\n\t\t// If `national_prefix_for_parsing` is not set explicitly,\r\n\t\t// then infer it from `national_prefix` (if any)\r\n\t\treturn this._nationalPrefixForParsing() || this.nationalPrefix()\r\n\t}\r\n\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8]\r\n\t}\r\n\r\n\t_getNationalPrefixIsOptionalWhenFormatting() {\r\n\t\treturn !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// \"national prefix is optional when formatting\" flag is\r\n\t// stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) ||\r\n\t\t\tthis._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\tleadingDigits() {\r\n\t\treturn this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10]\r\n\t}\r\n\r\n\ttypes() {\r\n\t\treturn this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11]\r\n\t}\r\n\r\n\thasTypes() {\r\n\t\t// Versions 1.2.0 - 1.2.4: can be `[]`.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (this.types() && this.types().length === 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// Versions <= 1.2.4: can be `undefined`.\r\n\t\t// Version >= 1.2.5: can be `0`.\r\n\t\treturn !!this.types()\r\n\t}\r\n\r\n\ttype(type) {\r\n\t\tif (this.hasTypes() && getType(this.types(), type)) {\r\n\t\t\treturn new Type(getType(this.types(), type), this)\r\n\t\t}\r\n\t}\r\n\r\n\text() {\r\n\t\tif (this.v1 || this.v2) return DEFAULT_EXT_PREFIX\r\n\t\treturn this.metadata[13] || DEFAULT_EXT_PREFIX\r\n\t}\r\n}\r\n\r\nclass Format {\r\n\tconstructor(format, metadata) {\r\n\t\tthis._format = format\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\treturn this._format[0]\r\n\t}\r\n\r\n\tformat() {\r\n\t\treturn this._format[1]\r\n\t}\r\n\r\n\tleadingDigitsPatterns() {\r\n\t\treturn this._format[2] || []\r\n\t}\r\n\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._format[3] || this.metadata.nationalPrefixFormattingRule()\r\n\t}\r\n\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\tnationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\r\n\t\t// National prefix is omitted if there's no national prefix formatting rule\r\n\t\t// set for this country, or when the national prefix formatting rule\r\n\t\t// contains no national prefix itself, or when this rule is set but\r\n\t\t// national prefix is optional for this phone number format\r\n\t\t// (and it is not enforced explicitly)\r\n\t\treturn this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\t// Checks whether national prefix formatting rule contains national prefix.\r\n\tusesNationalPrefix() {\r\n\t\treturn this.nationalPrefixFormattingRule() &&\r\n\t\t\t// Check that national prefix formatting rule is not a \"dummy\" one.\r\n\t\t\t!FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule())\r\n\t\t\t// In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\r\n\t\t\t// when `national_prefix_formatting_rule` is not present.\r\n\t\t\t// So, `true` or `false` are returned explicitly here, so that\r\n\t\t\t// `0` number isn't returned.\r\n\t\t\t? true\r\n\t\t\t: false\r\n\t}\r\n\r\n\tinternationalFormat() {\r\n\t\treturn this._format[5] || this.format()\r\n\t}\r\n}\r\n\r\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\r\nconst FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/\r\n\r\nclass Type {\r\n\tconstructor(type, metadata) {\r\n\t\tthis.type = type\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\tif (this.metadata.v1) return this.type\r\n\t\treturn this.type[0]\r\n\t}\r\n\r\n\tpossibleLengths() {\r\n\t\tif (this.metadata.v1) return\r\n\t\treturn this.type[1] || this.metadata.possibleLengths()\r\n\t}\r\n}\r\n\r\nfunction getType(types, type) {\r\n\tswitch (type) {\r\n\t\tcase 'FIXED_LINE':\r\n\t\t\treturn types[0]\r\n\t\tcase 'MOBILE':\r\n\t\t\treturn types[1]\r\n\t\tcase 'TOLL_FREE':\r\n\t\t\treturn types[2]\r\n\t\tcase 'PREMIUM_RATE':\r\n\t\t\treturn types[3]\r\n\t\tcase 'PERSONAL_NUMBER':\r\n\t\t\treturn types[4]\r\n\t\tcase 'VOICEMAIL':\r\n\t\t\treturn types[5]\r\n\t\tcase 'UAN':\r\n\t\t\treturn types[6]\r\n\t\tcase 'PAGER':\r\n\t\t\treturn types[7]\r\n\t\tcase 'VOIP':\r\n\t\t\treturn types[8]\r\n\t\tcase 'SHARED_COST':\r\n\t\t\treturn types[9]\r\n\t}\r\n}\r\n\r\nexport function validateMetadata(metadata) {\r\n\tif (!metadata) {\r\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.')\r\n\t}\r\n\r\n\t// `country_phone_code_to_countries` was renamed to\r\n\t// `country_calling_codes` in `1.0.18`.\r\n\tif (!is_object(metadata) || !is_object(metadata.countries)) {\r\n\t\tthrow new Error(`[libphonenumber-js] \\`metadata\\` argument was passed but it's not a valid metadata. Must be an object having \\`.countries\\` child object property. Got ${is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata}.`)\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst type_of = _ => typeof _\r\n\r\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\r\nexport function getExtPrefix(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).ext()\r\n\t}\r\n\treturn DEFAULT_EXT_PREFIX\r\n}\r\n\r\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\r\nexport function getCountryCallingCode(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).countryCallingCode()\r\n\t}\r\n\tthrow new Error(`Unknown country: ${country}`)\r\n}\r\n\r\nexport function isSupportedCountry(country, metadata) {\r\n\t// metadata = new Metadata(metadata)\r\n\t// return metadata.hasCountry(country)\r\n\treturn metadata.countries[country] !== undefined\r\n}\r\n\r\nfunction setVersion(metadata) {\r\n\tconst { version } = metadata\r\n\tif (typeof version === 'number') {\r\n\t\tthis.v1 = version === 1\r\n\t\tthis.v2 = version === 2\r\n\t\tthis.v3 = version === 3\r\n\t\tthis.v4 = version === 4\r\n\t} else {\r\n\t\tif (!version) {\r\n\t\t\tthis.v1 = true\r\n\t\t} else if (compare(version, V3) === -1) {\r\n\t\t\tthis.v2 = true\r\n\t\t} else if (compare(version, V4) === -1) {\r\n\t\t\tthis.v3 = true\r\n\t\t} else {\r\n\t\t\tthis.v4 = true\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\r\n// function isCountryCode(countryCode) {\r\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\r\n// }", "import { VALID_DIGITS } from '../../constants.js'\r\n\r\n// The RFC 3966 format for extensions.\r\nconst RFC3966_EXTN_PREFIX = ';ext='\r\n\r\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\r\nconst getExtensionDigitsPattern = (maxLength) => `([${VALID_DIGITS}]{1,${maxLength}})`\r\n\r\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\r\nexport default function createExtensionPattern(purpose) {\r\n\t// We cap the maximum length of an extension based on the ambiguity of the way\r\n\t// the extension is prefixed. As per ITU, the officially allowed length for\r\n\t// extensions is actually 40, but we don't support this since we haven't seen real\r\n\t// examples and this introduces many false interpretations as the extension labels\r\n\t// are not standardized.\r\n\t/** @type {string} */\r\n\tvar extLimitAfterExplicitLabel = '20';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterLikelyLabel = '15';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterAmbiguousChar = '9';\r\n\t/** @type {string} */\r\n\tvar extLimitWhenNotSure = '6';\r\n\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\u00A0\\\\t,]*\";\r\n\t// Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\r\n\t/** @type {string} */\r\n\tvar possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\u00A0\\\\t,-]*\";\r\n\t/** @type {string} */\r\n\tvar optionalExtnSuffix = \"#?\";\r\n\r\n\t// Here the extension is called out in more explicit way, i.e mentioning it obvious\r\n\t// patterns like \"ext.\".\r\n\t/** @type {string} */\r\n\tvar explicitExtLabels =\r\n\t  \"(?:e?xt(?:ensi(?:o\\u0301?|\\u00F3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\";\r\n\t// One-character symbols that can be used to indicate an extension, and less\r\n\t// commonly used or more ambiguous extension labels.\r\n\t/** @type {string} */\r\n\tvar ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\";\r\n\t// When extension is not separated clearly.\r\n\t/** @type {string} */\r\n\tvar ambiguousSeparator = \"[- ]+\";\r\n\t// This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\r\n\t// comma as extension label may have it.\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsNumberExtLabelNoComma = \"[ \\u00A0\\\\t]*\";\r\n\t// \",,\" is commonly used for auto dialling the extension when connected. First\r\n\t// comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\r\n\t// not repeat it here. Semi-colon works in Iphone and Android also to pop up a\r\n\t// button with the extension number following.\r\n\t/** @type {string} */\r\n\tvar autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\r\n\r\n\t/** @type {string} */\r\n\tvar rfcExtn = RFC3966_EXTN_PREFIX\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\r\n\t/** @type {string} */\r\n\tvar explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel)\r\n\t     + optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t+ getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar americanStyleExtnWithSuffix = ambiguousSeparator\r\n\t+ getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\r\n\r\n\t/** @type {string} */\r\n\tvar autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t     + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterLikelyLabel)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t    + \"(?:,)+\" + possibleCharsAfterExtLabel\r\n\t    + getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t    + optionalExtnSuffix;\r\n\r\n\t// The first regular expression covers RFC 3966 format, where the extension is added\r\n\t// using \";ext=\". The second more generic where extension is mentioned with explicit\r\n\t// labels like \"ext:\". In both the above cases we allow more numbers in extension than\r\n\t// any other extension labels. The third one captures when single character extension\r\n\t// labels or less commonly used labels are used. In such cases we capture fewer\r\n\t// extension digits in order to reduce the chance of falsely interpreting two\r\n\t// numbers beside each other as a number + extension. The fourth one covers the\r\n\t// special case of American numbers where the extension is written with a hash\r\n\t// at the end, such as \"- 503#\". The fifth one is exclusively for extension\r\n\t// autodialling formats which are used when dialling and in this case we accept longer\r\n\t// extensions. The last one is more liberal on the number of commas that acts as\r\n\t// extension labels, so we have a strict cap on the number of digits in such extensions.\r\n\treturn rfcExtn + \"|\"\r\n\t       + explicitExtn + \"|\"\r\n\t       + ambiguousExtn + \"|\"\r\n\t       + americanStyleExtnWithSuffix + \"|\"\r\n\t       + autoDiallingExtn + \"|\"\r\n\t       + onlyCommasExtn;\r\n}", "import {\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from '../constants.js'\r\n\r\nimport createExtensionPattern from './extension/createExtensionPattern.js'\r\n\r\n//  Regular expression of viable phone numbers. This is location independent.\r\n//  Checks we have at least three leading digits, and only valid punctuation,\r\n//  alpha characters and digits in the phone number. Does not include extension\r\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\r\n//  used as a placeholder for carrier codes, for example in Brazilian phone\r\n//  numbers. We also allow multiple '+' characters at the start.\r\n//\r\n//  Corresponds to the following:\r\n//  [digits]{minLengthNsn}|\r\n//  plus_sign*\r\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\r\n//\r\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\r\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\r\n//  The second expression restricts the number of digits to three or more, but\r\n//  then allows them to be in international form, and to have alpha-characters\r\n//  and punctuation. We split up the two reg-exes here and combine them when\r\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\r\n//  with ^ and append $ to each branch.\r\n//\r\n//  \"Note VALID_PUNCTUATION starts with a -,\r\n//   so must be the first in the range\" (c) Google devs.\r\n//  (wtf did they mean by saying that; probably nothing)\r\n//\r\nconst MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'\r\n//\r\n// And this is the second reg-exp:\r\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\r\n//\r\nexport const VALID_PHONE_NUMBER =\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){3,}' +\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']*'\r\n\r\n// This regular expression isn't present in Google's `libphonenumber`\r\n// and is only used to determine whether the phone number being input\r\n// is too short for it to even consider it a \"valid\" number.\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nconst VALID_PHONE_NUMBER_START_REG_EXP = new RegExp(\r\n\t'^' +\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){1,2}' +\r\n\t'$'\r\n, 'i')\r\n\r\nexport const VALID_PHONE_NUMBER_WITH_EXTENSION =\r\n\tVALID_PHONE_NUMBER +\r\n\t// Phone number extensions\r\n\t'(?:' + createExtensionPattern() + ')?'\r\n\r\n// The combined regular expression for valid phone numbers:\r\n//\r\nconst VALID_PHONE_NUMBER_PATTERN = new RegExp(\r\n\t// Either a short two-digit-only phone number\r\n\t'^' +\r\n\t\tMIN_LENGTH_PHONE_NUMBER_PATTERN +\r\n\t'$' +\r\n\t'|' +\r\n\t// Or a longer fully parsed phone number (min 3 characters)\r\n\t'^' +\r\n\t\tVALID_PHONE_NUMBER_WITH_EXTENSION +\r\n\t'$'\r\n, 'i')\r\n\r\n// Checks to see if the string of characters could possibly be a phone number at\r\n// all. At the moment, checks to see that the string begins with at least 2\r\n// digits, ignoring any punctuation commonly found in phone numbers. This method\r\n// does not require the number to be normalized in advance - but does assume\r\n// that leading non-number symbols have been removed, such as by the method\r\n// `extract_possible_number`.\r\n//\r\nexport default function isViablePhoneNumber(number) {\r\n\treturn number.length >= MIN_LENGTH_FOR_NSN &&\r\n\t\tVALID_PHONE_NUMBER_PATTERN.test(number)\r\n}\r\n\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nexport function isViablePhoneNumberStart(number) {\r\n\treturn VALID_PHONE_NUMBER_START_REG_EXP.test(number)\r\n}", "import createExtensionPattern from './createExtensionPattern.js'\r\n\r\n// Regexp of all known extension prefixes used by different regions followed by\r\n// 1 or more valid digits, for use when parsing.\r\nconst EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i')\r\n\r\n// Strips any extension (as in, the part of the number dialled after the call is\r\n// connected, usually indicated with extn, ext, x or similar) from the end of\r\n// the number, and returns it.\r\nexport default function extractExtension(number) {\r\n\tconst start = number.search(EXTN_PATTERN)\r\n\tif (start < 0) {\r\n\t\treturn {}\r\n\t}\r\n\t// If we find a potential extension, and the number preceding this is a viable\r\n\t// number, we assume it is an extension.\r\n\tconst numberWithoutExtension = number.slice(0, start)\r\n\tconst matches = number.match(EXTN_PATTERN)\r\n\tlet i = 1\r\n\twhile (i < matches.length) {\r\n\t\tif (matches[i]) {\r\n\t\t\treturn {\r\n\t\t\t\tnumber: numberWithoutExtension,\r\n\t\t\t\text: matches[i]\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}", "// These mappings map a character (key) to a specific digit that should\r\n// replace it for normalization purposes. Non-European digits that\r\n// may be used in phone numbers are mapped to a European equivalent.\r\n//\r\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n//\r\nexport const DIGITS = {\r\n\t'0': '0',\r\n\t'1': '1',\r\n\t'2': '2',\r\n\t'3': '3',\r\n\t'4': '4',\r\n\t'5': '5',\r\n\t'6': '6',\r\n\t'7': '7',\r\n\t'8': '8',\r\n\t'9': '9',\r\n\t'\\uFF10': '0', // Fullwidth digit 0\r\n\t'\\uFF11': '1', // Fullwidth digit 1\r\n\t'\\uFF12': '2', // Fullwidth digit 2\r\n\t'\\uFF13': '3', // Fullwidth digit 3\r\n\t'\\uFF14': '4', // Fullwidth digit 4\r\n\t'\\uFF15': '5', // Fullwidth digit 5\r\n\t'\\uFF16': '6', // Fullwidth digit 6\r\n\t'\\uFF17': '7', // Fullwidth digit 7\r\n\t'\\uFF18': '8', // Fullwidth digit 8\r\n\t'\\uFF19': '9', // Fullwidth digit 9\r\n\t'\\u0660': '0', // Arabic-indic digit 0\r\n\t'\\u0661': '1', // Arabic-indic digit 1\r\n\t'\\u0662': '2', // Arabic-indic digit 2\r\n\t'\\u0663': '3', // Arabic-indic digit 3\r\n\t'\\u0664': '4', // Arabic-indic digit 4\r\n\t'\\u0665': '5', // Arabic-indic digit 5\r\n\t'\\u0666': '6', // Arabic-indic digit 6\r\n\t'\\u0667': '7', // Arabic-indic digit 7\r\n\t'\\u0668': '8', // Arabic-indic digit 8\r\n\t'\\u0669': '9', // Arabic-indic digit 9\r\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\r\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\r\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\r\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\r\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\r\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\r\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\r\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\r\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\r\n\t'\\u06F9': '9'  // Eastern-Arabic digit 9\r\n}\r\n\r\nexport function parseDigit(character) {\r\n\treturn DIGITS[character]\r\n}\r\n\r\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\r\nexport default function parseDigits(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tconst digit = parseDigit(character)\r\n\t\tif (digit) {\r\n\t\t\tresult += digit\r\n\t\t}\r\n\t}\r\n\treturn result\r\n}", "import { parseDigit } from './helpers/parseDigits.js'\r\n\r\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\r\nexport default function parseIncompletePhoneNumber(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tresult += parsePhoneNumberCharacter(character, result) || ''\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {object} meta - Optional custom use-case-specific metadata.\r\n * @return {string?} The parsed character.\r\n */\r\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters) {\r\n\t// Only allow a leading `+`.\r\n\tif (character === '+') {\r\n\t\t// If this `+` is not the first parsed character\r\n\t\t// then discard it.\r\n\t\tif (prevParsedCharacters) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\t// Allow digits.\r\n\treturn parseDigit(character)\r\n}", "// Deprecated. Import from 'metadata.js' directly instead.\r\nexport { getCountryCallingCode as default } from './metadata.js'", "/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\r\nexport default function mergeArrays(a, b) {\r\n\tconst merged = a.slice()\r\n\r\n\tfor (const element of b) {\r\n\t\tif (a.indexOf(element) < 0) {\r\n\t\t\tmerged.push(element)\r\n\t\t}\r\n\t}\r\n\r\n\treturn merged.sort((a, b) => a - b)\r\n\r\n\t// ES6 version, requires Set polyfill.\r\n\t// let merged = new Set(a)\r\n\t// for (const element of b) {\r\n\t// \tmerged.add(i)\r\n\t// }\r\n\t// return Array.from(merged).sort((a, b) => a - b)\r\n}", "import mergeArrays from './mergeArrays.js'\r\n\r\nexport default function checkNumberLength(nationalNumber, metadata) {\r\n\treturn checkNumberLengthForType(nationalNumber, undefined, metadata)\r\n}\r\n\r\n// Checks whether a number is possible for the country based on its length.\r\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\r\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\r\n\tconst type_info = metadata.type(type)\r\n\r\n\t// There should always be \"<possiblePengths/>\" set for every type element.\r\n\t// This is declared in the XML schema.\r\n\t// For size efficiency, where a sub-description (e.g. fixed-line)\r\n\t// has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\r\n\t// so we fall back to the \"general description\". Where no numbers of the type\r\n\t// exist at all, there is one possible length (-1) which is guaranteed\r\n\t// not to match the length of any real phone number.\r\n\tlet possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths()\r\n\t// let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\r\n\r\n\t// Metadata before version `1.0.18` didn't contain `possible_lengths`.\r\n\tif (!possible_lengths) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (type === 'FIXED_LINE_OR_MOBILE') {\r\n\t\t// No such country in metadata.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (!metadata.type('FIXED_LINE')) {\r\n\t\t\t// The rare case has been encountered where no fixedLine data is available\r\n\t\t\t// (true for some non-geographic entities), so we just check mobile.\r\n\t\t\treturn checkNumberLengthForType(nationalNumber, 'MOBILE', metadata)\r\n\t\t}\r\n\r\n\t\tconst mobile_type = metadata.type('MOBILE')\r\n\t\tif (mobile_type) {\r\n\t\t\t// Merge the mobile data in if there was any. \"Concat\" creates a new\r\n\t\t\t// array, it doesn't edit possible_lengths in place, so we don't need a copy.\r\n\t\t\t// Note that when adding the possible lengths from mobile, we have\r\n\t\t\t// to again check they aren't empty since if they are this indicates\r\n\t\t\t// they are the same as the general desc and should be obtained from there.\r\n\t\t\tpossible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths())\r\n\t\t\t// The current list is sorted; we need to merge in the new list and\r\n\t\t\t// re-sort (duplicates are okay). Sorting isn't so expensive because\r\n\t\t\t// the lists are very small.\r\n\r\n\t\t\t// if (local_lengths) {\r\n\t\t\t// \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\r\n\t\t\t// } else {\r\n\t\t\t// \tlocal_lengths = mobile_type.possibleLengthsLocal()\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\t// If the type doesn't exist then return 'INVALID_LENGTH'.\r\n\telse if (type && !type_info) {\r\n\t\treturn 'INVALID_LENGTH'\r\n\t}\r\n\r\n\tconst actual_length = nationalNumber.length\r\n\r\n\t// In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\r\n\t// // This is safe because there is never an overlap beween the possible lengths\r\n\t// // and the local-only lengths; this is checked at build time.\r\n\t// if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\r\n\t// {\r\n\t// \treturn 'IS_POSSIBLE_LOCAL_ONLY'\r\n\t// }\r\n\r\n\tconst minimum_length = possible_lengths[0]\r\n\r\n\tif (minimum_length === actual_length) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (minimum_length > actual_length) {\r\n\t\treturn 'TOO_SHORT'\r\n\t}\r\n\r\n\tif (possible_lengths[possible_lengths.length - 1] < actual_length) {\r\n\t\treturn 'TOO_LONG'\r\n\t}\r\n\r\n\t// We skip the first element since we've already checked it.\r\n\treturn possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH'\r\n}", "import Metadata from './metadata.js'\r\nimport checkNumberLength from './helpers/checkNumberLength.js'\r\n\r\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * isPossible(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function isPossiblePhoneNumber(input, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (options.v2) {\r\n\t\tif (!input.countryCallingCode) {\r\n\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t}\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t} else {\r\n\t\tif (!input.phone) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (input.country) {\r\n\t\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t\t}\r\n\t\t\tmetadata.country(input.country)\r\n\t\t} else {\r\n\t\t\tif (!input.countryCallingCode) {\r\n\t\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t\t}\r\n\t\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t\t}\r\n\t}\r\n\r\n\t// Old metadata (< 1.0.18) had no \"possible length\" data.\r\n\tif (metadata.possibleLengths()) {\r\n\t\treturn isPossibleNumber(input.phone || input.nationalNumber, metadata)\r\n\t} else {\r\n\t\t// There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\r\n\t\t// were missing for \"non-geographical\" numbering plans.\r\n\t\t// Just assume the number is possible in such cases:\r\n\t\t// it's unlikely that anyone generated their custom metadata\r\n\t\t// in that short period of time (one day).\r\n\t\t// This code can be removed in some future major version update.\r\n\t\tif (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\r\n\t\t\t// \"Non-geographic entities\" did't have `possibleLengths`\r\n\t\t\t// due to a bug in metadata generation process.\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tthrow new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isPossibleNumber(nationalNumber, metadata) { //, isInternational) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'IS_POSSIBLE':\r\n\t\t\treturn true\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t// \treturn !isInternational\r\n\t\tdefault:\r\n\t\t\treturn false\r\n\t}\r\n}", "/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\r\nexport default function matchesEntirely(text, regular_expression) {\r\n\t// If assigning the `''` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\ttext = text || ''\r\n\treturn new RegExp('^(?:' + regular_expression + ')$').test(text)\r\n}", "import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\n\r\nconst NON_FIXED_LINE_PHONE_TYPES = [\r\n\t'MOBILE',\r\n\t'PREMIUM_RATE',\r\n\t'TOLL_FREE',\r\n\t'SHARED_COST',\r\n\t'VOIP',\r\n\t'PERSONAL_NUMBER',\r\n\t'PAGER',\r\n\t'UAN',\r\n\t'VOICEMAIL'\r\n]\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function getNumberType(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\t// When `parse()` returned `{}`\r\n\t// meaning that the phone number is not a valid one.\r\n\tif (!input.country) {\r\n\t\treturn\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// The following is copy-pasted from the original function:\r\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\r\n\r\n\t// Is this national number even valid for this country\r\n\tif (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Is it fixed line number\r\n\tif (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\r\n\t\t// Because duplicate regular expressions are removed\r\n\t\t// to reduce metadata size, if \"mobile\" pattern is \"\"\r\n\t\t// then it means it was removed due to being a duplicate of the fixed-line pattern.\r\n\t\t//\r\n\t\tif (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\r\n\t\t// For example, for \"US\" country.\r\n\t\t// Old metadata (< `1.0.18`) had a specific \"types\" data structure\r\n\t\t// that happened to be `undefined` for `MOBILE` in that case.\r\n\t\t// Newer metadata (>= `1.0.18`) has another data structure that is\r\n\t\t// not `undefined` for `MOBILE` in that case (it's just an empty array).\r\n\t\t// So this `if` is just for backwards compatibility with old metadata.\r\n\t\tif (!metadata.type('MOBILE')) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\r\n\t\t// (no such country in the minimal metadata set)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\treturn 'FIXED_LINE'\r\n\t}\r\n\r\n\tfor (const type of NON_FIXED_LINE_PHONE_TYPES) {\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\r\n\t\t\treturn type\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\r\n\ttype = metadata.type(type)\r\n\tif (!type || !type.pattern()) {\r\n\t\treturn false\r\n\t}\r\n\t// Check if any possible number lengths are present;\r\n\t// if so, we use them to avoid checking\r\n\t// the validation pattern if they don't match.\r\n\t// If they are absent, this means they match\r\n\t// the general description, which we have\r\n\t// already checked before a specific number type.\r\n\tif (type.possibleLengths() &&\r\n\t\ttype.possibleLengths().indexOf(nationalNumber.length) < 0) {\r\n\t\treturn false\r\n\t}\r\n\treturn matchesEntirely(nationalNumber, type.pattern())\r\n}", "import Metadata from './metadata.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\n\r\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * isValid(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isValidNumber(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\t// By default, countries only have type regexps when it's required for\r\n\t// distinguishing different countries having the same `countryCallingCode`.\r\n\tif (metadata.hasTypes()) {\r\n\t\treturn getNumberType(input, options, metadata.metadata) !== undefined\r\n\t}\r\n\r\n\t// If there are no type regexps for this country in metadata then use\r\n\t// `nationalNumberPattern` as a \"better than nothing\" replacement.\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\treturn matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n}", "import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Returns a list of countries that the phone number could potentially belong to.\r\n * @param  {string} callingCode — Calling code.\r\n * @param  {string} nationalNumber — National (significant) number.\r\n * @param  {object} metadata — Metadata.\r\n * @return {string[]} A list of possible countries.\r\n */\r\nexport default function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\tlet possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn []\r\n\t}\r\n\treturn possibleCountries.filter((country) => {\r\n\t\treturn couldNationalNumberBelongToCountry(nationalNumber, country, metadata)\r\n\t})\r\n}\r\n\r\nfunction couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\t_metadata.selectNumberingPlan(country)\r\n\tif (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {\r\n\t\treturn true\r\n\t}\r\n\treturn false\r\n}", "import { VALID_PUNCTUATION } from '../constants.js'\r\n\r\n// Removes brackets and replaces dashes with spaces.\r\n//\r\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\r\n//\r\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\r\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\r\n//\r\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\r\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\r\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\r\n//\r\n// \"The country calling code for all countries participating in the NANP is 1.\r\n// In international format, an NANP number should be listed as +1 301 555 01 00,\r\n// where 301 is an area code (Maryland).\"\r\n//\r\n// I personally prefer the international format without any punctuation.\r\n// For example, brackets are remnants of the old age, meaning that the\r\n// phone number part in brackets (so called \"area code\") can be omitted\r\n// if dialing within the same \"area\".\r\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\r\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\r\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\r\n// He has a couple of seconds to memorize that number until it passes by.\r\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\r\n// but with hyphens instead of spaces the grouping is more explicit.\r\n// I personally think that hyphens introduce visual clutter,\r\n// so I prefer replacing them with spaces in international numbers.\r\n// In the modern age all output is done on displays where spaces are clearly distinguishable\r\n// so hyphens can be safely replaced with spaces without losing any legibility.\r\n//\r\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\r\n\treturn formattedNumber.replace(new RegExp(`[${VALID_PUNCTUATION}]+`, 'g'), ' ').trim()\r\n}", "import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'\r\n\r\n// This was originally set to $1 but there are some countries for which the\r\n// first group is not used in the national pattern (e.g. Argentina) so the $1\r\n// group does not match correctly. Therefore, we use `\\d`, so that the first\r\n// group actually used in the pattern will be matched.\r\nexport const FIRST_GROUP_PATTERN = /(\\$\\d)/\r\n\r\nexport default function formatNationalNumberUsingFormat(\r\n\tnumber,\r\n\tformat,\r\n\t{\r\n\t\tuseInternationalFormat,\r\n\t\twithNationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tmetadata\r\n\t}\r\n) {\r\n\tconst formattedNumber = number.replace(\r\n\t\tnew RegExp(format.pattern()),\r\n\t\tuseInternationalFormat\r\n\t\t\t? format.internationalFormat()\r\n\t\t\t: (\r\n\t\t\t\t// This library doesn't use `domestic_carrier_code_formatting_rule`,\r\n\t\t\t\t// because that one is only used when formatting phone numbers\r\n\t\t\t\t// for dialing from a mobile phone, and this is not a dialing library.\r\n\t\t\t\t// carrierCode && format.domesticCarrierCodeFormattingRule()\r\n\t\t\t\t// \t// First, replace the $CC in the formatting rule with the desired carrier code.\r\n\t\t\t\t// \t// Then, replace the $FG in the formatting rule with the first group\r\n\t\t\t\t// \t// and the carrier code combined in the appropriate way.\r\n\t\t\t\t// \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\r\n\t\t\t\t// \t: (\r\n\t\t\t\t// \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t// \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t// \t\t\t: format.format()\r\n\t\t\t\t// \t)\r\n\t\t\t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t\t: format.format()\r\n\t\t\t)\r\n\t)\r\n\tif (useInternationalFormat) {\r\n\t\treturn applyInternationalSeparatorStyle(formattedNumber)\r\n\t}\r\n\treturn formattedNumber\r\n}", "import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\r\nconst SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/\r\n\r\n// For regions that have multiple IDD prefixes\r\n// a preferred IDD prefix is returned.\r\nexport default function getIddPrefix(country, callingCode, metadata) {\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tif (countryMetadata.defaultIDDPrefix()) {\r\n\t\treturn countryMetadata.defaultIDDPrefix()\r\n\t}\r\n\tif (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\r\n\t\treturn countryMetadata.IDDPrefix()\r\n\t}\r\n}\r\n", "import isViablePhoneNumber from './isViablePhoneNumber.js'\r\n\r\n// https://www.ietf.org/rfc/rfc3966.txt\r\n\r\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nexport function parseRFC3966(text) {\r\n\tlet number\r\n\tlet ext\r\n\r\n\t// Replace \"tel:\" with \"tel=\" for parsing convenience.\r\n\ttext = text.replace(/^tel:/, 'tel=')\r\n\r\n\tfor (const part of text.split(';')) {\r\n\t\tconst [name, value] = part.split('=')\r\n\t\tswitch (name) {\r\n\t\t\tcase 'tel':\r\n\t\t\t\tnumber = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ext':\r\n\t\t\t\text = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'phone-context':\r\n\t\t\t\t// Only \"country contexts\" are supported.\r\n\t\t\t\t// \"Domain contexts\" are ignored.\r\n\t\t\t\tif (value[0] === '+') {\r\n\t\t\t\t\tnumber = value + number\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst result = { number }\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\r\nexport function formatRFC3966({ number, ext }) {\r\n\tif (!number) {\r\n\t\treturn ''\r\n\t}\r\n\tif (number[0] !== '+') {\r\n\t\tthrow new Error(`\"formatRFC3966()\" expects \"number\" to be in E.164 format.`)\r\n\t}\r\n\treturn `tel:${number}${ext ? ';ext=' + ext : ''}`\r\n}", "// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js'\r\nimport Metadata, { getCountryCallingCode } from './metadata.js'\r\nimport getIddPrefix from './helpers/getIddPrefix.js'\r\nimport { formatRFC3966 } from './helpers/RFC3966.js'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\tformatExtension: (formattedNumber, extension, metadata) => `${formattedNumber}${metadata.ext()}${extension}`\r\n}\r\n\r\n/**\r\n * Formats a phone number.\r\n *\r\n * format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)\r\n * format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)\r\n *\r\n * format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)\r\n * format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {string} format\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function formatNumber(input, format, options, metadata) {\r\n\t// Apply default options.\r\n\tif (options) {\r\n\t\toptions = { ...DEFAULT_OPTIONS, ...options }\r\n\t} else {\r\n\t\toptions = DEFAULT_OPTIONS\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (input.country && input.country !== '001') {\r\n\t\t// Validate `input.country`.\r\n\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t}\r\n\t\tmetadata.country(input.country)\r\n\t}\r\n\telse if (input.countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t}\r\n\telse return input.phone || ''\r\n\r\n\tconst countryCallingCode = metadata.countryCallingCode()\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// This variable should have been declared inside `case`s\r\n\t// but Babel has a bug and it says \"duplicate variable declaration\".\r\n\tlet number\r\n\r\n\tswitch (format) {\r\n\t\tcase 'NATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options)\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'INTERNATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn `+${countryCallingCode}`\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options)\r\n\t\t\tnumber = `+${countryCallingCode} ${number}`\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'E.164':\r\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\r\n\t\t\treturn `+${countryCallingCode}${nationalNumber}`\r\n\r\n\t\tcase 'RFC3966':\r\n\t\t\treturn formatRFC3966({\r\n\t\t\t\tnumber: `+${countryCallingCode}${nationalNumber}`,\r\n\t\t\t\text: input.ext\r\n\t\t\t})\r\n\r\n\t\t// For reference, here's Google's IDD formatter:\r\n\t\t// https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\r\n\t\t// Not saying that this IDD formatter replicates it 1:1, but it seems to work.\r\n\t\t// Who would even need to format phone numbers in IDD format anyway?\r\n\t\tcase 'IDD':\r\n\t\t\tif (!options.fromCountry) {\r\n\t\t\t\treturn\r\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\r\n\t\t\t}\r\n\t\t\tconst formattedNumber = formatIDD(\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tinput.carrierCode,\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\toptions.fromCountry,\r\n\t\t\t\tmetadata\r\n\t\t\t)\r\n\t\t\treturn addExtension(formattedNumber, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unknown \"format\" argument passed to \"formatNumber()\": \"${format}\"`)\r\n\t}\r\n}\r\n\r\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\r\n\tconst format = chooseFormatForNumber(metadata.formats(), number)\r\n\tif (!format) {\r\n\t\treturn number\r\n\t}\r\n\treturn formatNationalNumberUsingFormat(\r\n\t\tnumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tuseInternationalFormat: formatAs === 'INTERNATIONAL',\r\n\t\t\twithNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && (options && options.nationalPrefix === false) ? false : true,\r\n\t\t\tcarrierCode,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport function chooseFormatForNumber(availableFormats, nationalNnumber) {\r\n\tfor (const format of availableFormats) {\r\n\t\t// Validate leading digits.\r\n\t\t// The test case for \"else path\" could be found by searching for\r\n\t\t// \"format.leadingDigitsPatterns().length === 0\".\r\n\t\tif (format.leadingDigitsPatterns().length > 0) {\r\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\r\n\t\t\tconst lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]\r\n\t\t\t// If leading digits don't match then move on to the next phone number format\r\n\t\t\tif (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Check that the national number matches the phone number format regular expression\r\n\t\tif (matchesEntirely(nationalNnumber, format.pattern())) {\r\n\t\t\treturn format\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\r\n\treturn ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber\r\n}\r\n\r\nfunction formatIDD(\r\n\tnationalNumber,\r\n\tcarrierCode,\r\n\tcountryCallingCode,\r\n\tfromCountry,\r\n\tmetadata\r\n) {\r\n\tconst fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata)\r\n\t// When calling within the same country calling code.\r\n\tif (fromCountryCallingCode === countryCallingCode) {\r\n\t\tconst formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata)\r\n\t\t// For NANPA regions, return the national format for these regions\r\n\t\t// but prefix it with the country calling code.\r\n\t\tif (countryCallingCode === '1') {\r\n\t\t\treturn countryCallingCode + ' ' + formattedNumber\r\n\t\t}\r\n\t\t// If regions share a country calling code, the country calling code need\r\n\t\t// not be dialled. This also applies when dialling within a region, so this\r\n\t\t// if clause covers both these cases. Technically this is the case for\r\n\t\t// dialling from La Reunion to other overseas departments of France (French\r\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\r\n\t\t// this edge case for now and for those cases return the version including\r\n\t\t// country calling code. Details here:\r\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\r\n\t\t//\r\n\t\treturn formattedNumber\r\n\t}\r\n\tconst iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata)\r\n\tif (iddPrefix) {\r\n\t\treturn `${iddPrefix} ${countryCallingCode} ${formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata)}`\r\n\t}\r\n}", "import Metadata from './metadata.js'\r\nimport isPossibleNumber from './isPossible.js'\r\nimport isValidNumber from './isValid.js'\r\n// import checkNumberLength from './helpers/checkNumberLength.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\nimport getPossibleCountriesForNumber from './helpers/getPossibleCountriesForNumber.js'\r\nimport formatNumber from './format.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class PhoneNumber {\r\n\t/**\r\n\t * @param  {string} countryOrCountryCallingCode\r\n\t * @param  {string} nationalNumber\r\n\t * @param  {object} metadata — Metadata JSON\r\n\t * @return {PhoneNumber}\r\n\t */\r\n\tconstructor(countryOrCountryCallingCode, nationalNumber, metadata) {\r\n\t\tif (!countryOrCountryCallingCode) {\r\n\t\t\tthrow new TypeError('`country` or `countryCallingCode` not passed')\r\n\t\t}\r\n\t\tif (!nationalNumber) {\r\n\t\t\tthrow new TypeError('`nationalNumber` not passed')\r\n\t\t}\r\n\t\tif (!metadata) {\r\n\t\t\tthrow new TypeError('`metadata` not passed')\r\n\t\t}\r\n\t\tconst { country, countryCallingCode } = getCountryAndCountryCallingCode(\r\n\t\t\tcountryOrCountryCallingCode,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tthis.country = country\r\n\t\tthis.countryCallingCode = countryCallingCode\r\n\t\tthis.nationalNumber = nationalNumber\r\n\t\tthis.number = '+' + this.countryCallingCode + this.nationalNumber\r\n\t\t// Exclude `metadata` property output from `PhoneNumber.toString()`\r\n\t\t// so that it doesn't clutter the console output of Node.js.\r\n\t\t// Previously, when Node.js did `console.log(new PhoneNumber(...))`,\r\n\t\t// it would output the whole internal structure of the `metadata` object.\r\n\t\tthis.getMetadata = () => metadata\r\n\t}\r\n\r\n\tsetExt(ext) {\r\n\t\tthis.ext = ext\r\n\t}\r\n\r\n\tgetPossibleCountries() {\r\n\t\tif (this.country) {\r\n\t\t\treturn [this.country]\r\n\t\t}\r\n\t\treturn getPossibleCountriesForNumber(\r\n\t\t\tthis.countryCallingCode,\r\n\t\t\tthis.nationalNumber,\r\n\t\t\tthis.getMetadata()\r\n\t\t)\r\n\t}\r\n\r\n\tisPossible() {\r\n\t\treturn isPossibleNumber(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tisValid() {\r\n\t\treturn isValidNumber(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tisNonGeographic() {\r\n\t\tconst metadata = new Metadata(this.getMetadata())\r\n\t\treturn metadata.isNonGeographicCallingCode(this.countryCallingCode)\r\n\t}\r\n\r\n\tisEqual(phoneNumber) {\r\n\t\treturn this.number === phoneNumber.number && this.ext === phoneNumber.ext\r\n\t}\r\n\r\n\t// This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\r\n\t// but later it was found out that it doesn't include the possible `TOO_SHORT` result\r\n\t// returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\r\n\t// so eventually I simply commented out this method from the `PhoneNumber` class\r\n\t// and just left the `validatePhoneNumberLength()` function, even though that one would require\r\n\t// and additional step to also validate the actual country / calling code of the phone number.\r\n\t// validateLength() {\r\n\t// \tconst metadata = new Metadata(this.getMetadata())\r\n\t// \tmetadata.selectNumberingPlan(this.countryCallingCode)\r\n\t// \tconst result = checkNumberLength(this.nationalNumber, metadata)\r\n\t// \tif (result !== 'IS_POSSIBLE') {\r\n\t// \t\treturn result\r\n\t// \t}\r\n\t// }\r\n\r\n\tgetType() {\r\n\t\treturn getNumberType(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tformat(format, options) {\r\n\t\treturn formatNumber(\r\n\t\t\tthis,\r\n\t\t\tformat,\r\n\t\t\toptions ? { ...options, v2: true } : { v2: true },\r\n\t\t\tthis.getMetadata()\r\n\t\t)\r\n\t}\r\n\r\n\tformatNational(options) {\r\n\t\treturn this.format('NATIONAL', options)\r\n\t}\r\n\r\n\tformatInternational(options) {\r\n\t\treturn this.format('INTERNATIONAL', options)\r\n\t}\r\n\r\n\tgetURI(options) {\r\n\t\treturn this.format('RFC3966', options)\r\n\t}\r\n}\r\n\r\nconst isCountryCode = (value) => /^[A-Z]{2}$/.test(value)\r\n\r\nfunction getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {\r\n\tlet country\r\n\tlet countryCallingCode\r\n\r\n\tconst metadata = new Metadata(metadataJson)\r\n\t// If country code is passed then derive `countryCallingCode` from it.\r\n\t// Also store the country code as `.country`.\r\n\tif (isCountryCode(countryOrCountryCallingCode)) {\r\n\t\tcountry = countryOrCountryCallingCode\r\n\t\tmetadata.selectNumberingPlan(country)\r\n\t\tcountryCallingCode = metadata.countryCallingCode()\r\n\t} else {\r\n\t\tcountryCallingCode = countryOrCountryCallingCode\r\n\t\t/* istanbul ignore if */\r\n\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\tif (metadata.isNonGeographicCallingCode(countryCallingCode)) {\r\n\t\t\t\tcountry = '001'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode\r\n\t}\r\n}", "import Metadata from '../metadata.js'\r\nimport { VALID_DIGITS } from '../constants.js'\r\n\r\nconst CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])')\r\n\r\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\r\n\tif (!country) {\r\n\t\treturn\r\n\t}\r\n\t// Check if the number is IDD-prefixed.\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tconst IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix())\r\n\tif (number.search(IDDPrefixPattern) !== 0) {\r\n\t\treturn\r\n\t}\r\n\t// Strip IDD prefix.\r\n\tnumber = number.slice(number.match(IDDPrefixPattern)[0].length)\r\n\t// If there're any digits after an IDD prefix,\r\n\t// then those digits are a country calling code.\r\n\t// Since no country code starts with a `0`,\r\n\t// the code below validates that the next digit (if present) is not `0`.\r\n\tconst matchedGroups = number.match(CAPTURING_DIGIT_PATTERN)\r\n\tif (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\r\n\t\tif (matchedGroups[1] === '0') {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\treturn number\r\n}", "/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\r\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\r\n\tif (number && metadata.numberingPlan.nationalPrefixForParsing()) {\r\n\t\t// See METADATA.md for the description of\r\n\t\t// `national_prefix_for_parsing` and `national_prefix_transform_rule`.\r\n\t\t// Attempt to parse the first digits as a national prefix.\r\n\t\tconst prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')')\r\n\t\tconst prefixMatch = prefixPattern.exec(number)\r\n\t\tif (prefixMatch) {\r\n\t\t\tlet nationalNumber\r\n\t\t\tlet carrierCode\r\n\t\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\t\t// If a `national_prefix_for_parsing` has any \"capturing groups\"\r\n\t\t\t// then it means that the national (significant) number is equal to\r\n\t\t\t// those \"capturing groups\" transformed via `national_prefix_transform_rule`,\r\n\t\t\t// and nothing could be said about the actual national prefix:\r\n\t\t\t// what is it and was it even there.\r\n\t\t\t// If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\r\n\t\t\t// then everything it matches is a national prefix.\r\n\t\t\t// To determine whether `national_prefix_for_parsing` matched any\r\n\t\t\t// \"capturing groups\", the value of the result of calling `.exec()`\r\n\t\t\t// is looked at, and if it has non-undefined values where there're\r\n\t\t\t// \"capturing groups\" in the regular expression, then it means\r\n\t\t\t// that \"capturing groups\" have been matched.\r\n\t\t\t// It's not possible to tell whether there'll be any \"capturing gropus\"\r\n\t\t\t// before the matching process, because a `national_prefix_for_parsing`\r\n\t\t\t// could exhibit both behaviors.\r\n\t\t\tconst capturedGroupsCount = prefixMatch.length - 1\r\n\t\t\tconst hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount]\r\n\t\t\tif (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\r\n\t\t\t\tnationalNumber = number.replace(\r\n\t\t\t\t\tprefixPattern,\r\n\t\t\t\t\tmetadata.nationalPrefixTransformRule()\r\n\t\t\t\t)\r\n\t\t\t\t// If there's more than one captured group,\r\n\t\t\t\t// then carrier code is the second one.\r\n\t\t\t\tif (capturedGroupsCount > 1) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If there're no \"capturing groups\",\r\n\t\t\t// or if there're \"capturing groups\" but no\r\n\t\t\t// `national_prefix_transform_rule`,\r\n\t\t\t// then just strip the national prefix from the number,\r\n\t\t\t// and possibly a carrier code.\r\n\t\t\t// Seems like there could be more.\r\n\t\t\telse {\r\n\t\t\t\t// `prefixBeforeNationalNumber` is the whole substring matched by\r\n\t\t\t\t// the `national_prefix_for_parsing` regular expression.\r\n\t\t\t\t// There seem to be no guarantees that it's just a national prefix.\r\n\t\t\t\t// For example, if there's a carrier code, it's gonna be a\r\n\t\t\t\t// part of `prefixBeforeNationalNumber` too.\r\n\t\t\t\tconst prefixBeforeNationalNumber = prefixMatch[0]\r\n\t\t\t\tnationalNumber = number.slice(prefixBeforeNationalNumber.length)\r\n\t\t\t\t// If there's at least one captured group,\r\n\t\t\t\t// then carrier code is the first one.\r\n\t\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Tries to guess whether a national prefix was present in the input.\r\n\t\t\t// This is not something copy-pasted from Google's library:\r\n\t\t\t// they don't seem to have an equivalent for that.\r\n\t\t\t// So this isn't an \"officially approved\" way of doing something like that.\r\n\t\t\t// But since there seems no other existing method, this library uses it.\r\n\t\t\tlet nationalPrefix\r\n\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\tconst possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1])\r\n\t\t\t\tconst possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup)\r\n\t\t\t\t// Example: an Argentinian (AR) phone number `0111523456789`.\r\n\t\t\t\t// `prefixMatch[0]` is `01115`, and `$1` is `11`,\r\n\t\t\t\t// and the rest of the phone number is `23456789`.\r\n\t\t\t\t// The national number is transformed via `9$1` to `91123456789`.\r\n\t\t\t\t// National prefix `0` is detected being present at the start.\r\n\t\t\t\t// if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\r\n\t\t\t\tif (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\r\n\t\t\t\t\tnationalPrefix = metadata.numberingPlan.nationalPrefix()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnationalPrefix = prefixMatch[0]\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tnationalPrefix,\r\n\t\t\t\tcarrierCode\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n   return {\r\n   \tnationalNumber: number\r\n   }\r\n}", "import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\n\r\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\r\nexport default function extractNationalNumber(number, metadata) {\r\n\t// Parsing national prefixes and carrier codes\r\n\t// is only required for local phone numbers\r\n\t// but some people don't understand that\r\n\t// and sometimes write international phone numbers\r\n\t// with national prefixes (or maybe even carrier codes).\r\n\t// http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\r\n\t// Google's original library forgives such mistakes\r\n\t// and so does this library, because it has been requested:\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/127\r\n\tconst {\r\n\t\tcarrierCode,\r\n\t\tnationalNumber\r\n\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\tnumber,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (nationalNumber !== number) {\r\n\t\tif (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\r\n\t\t\t// Don't strip the national prefix.\r\n\t\t\treturn { nationalNumber: number }\r\n\t\t}\r\n\t\t// Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t\t// Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\r\n\t\tif (metadata.possibleLengths()) {\r\n\t\t\t// The number remaining after stripping the national prefix and carrier code\r\n\t\t\t// should be long enough to have a possible length for the country.\r\n\t\t\t// Otherwise, don't strip the national prefix and carrier code,\r\n\t\t\t// since the original number could be a valid number.\r\n\t\t\t// This check has been copy-pasted \"as is\" from Google's original library:\r\n\t\t\t// https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\r\n\t\t\t// It doesn't check for the \"possibility\" of the original `number`.\r\n\t\t\t// I guess it's fine not checking that one. It works as is anyway.\r\n\t\t\tif (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\r\n\t\t\t\t// Don't strip the national prefix.\r\n\t\t\t\treturn { nationalNumber: number }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { nationalNumber, carrierCode }\r\n}\r\n\r\n// In some countries, the same digit could be a national prefix\r\n// or a leading digit of a valid phone number.\r\n// For example, in Russia, national prefix is `8`,\r\n// and also `800 555 35 35` is a valid number\r\n// in which `8` is not a national prefix, but the first digit\r\n// of a national (significant) number.\r\n// Same's with Belarus:\r\n// `82004910060` is a valid national (significant) number,\r\n// but `2004910060` is not.\r\n// To support such cases (to prevent the code from always stripping\r\n// national prefix), a condition is imposed: a national prefix\r\n// is not extracted when the original number is \"viable\" and the\r\n// resultant number is not, a \"viable\" national number being the one\r\n// that matches `national_number_pattern`.\r\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\r\n\t// The equivalent in Google's code is:\r\n\t// https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\r\n\tif (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) &&\r\n\t\t!matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\r\n\t\treturn false\r\n\t}\r\n\t// This \"is possible\" national number (length) check has been commented out\r\n\t// because it's superceded by the (effectively) same check done in the\r\n\t// `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\r\n\t// In other words, why run the same check twice if it could only be run once.\r\n\t// // Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t// // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\r\n\t// // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\r\n\t// if (metadata.possibleLengths()) {\r\n\t// \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\r\n\t// \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\r\n\t// \t\treturn false\r\n\t// \t}\r\n\t// }\r\n\treturn true\r\n}\r\n\r\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'TOO_SHORT':\r\n\t\tcase 'INVALID_LENGTH':\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t\treturn false\r\n\t\tdefault:\r\n\t\t\treturn true\r\n\t}\r\n}", "import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport extractNationalNumber from './extractNationalNumber.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\nimport getCountryCallingCode from '../getCountryCallingCode.js'\r\n\r\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\r\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tconst countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode\r\n\tif (number.indexOf(countryCallingCode) === 0) {\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(country, callingCode)\r\n\t\tconst possibleShorterNumber = number.slice(countryCallingCode.length)\r\n\t\tconst {\r\n\t\t\tnationalNumber: possibleShorterNationalNumber,\r\n\t\t} = extractNationalNumber(\r\n\t\t\tpossibleShorterNumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tconst {\r\n\t\t\tnationalNumber\r\n\t\t} = extractNationalNumber(\r\n\t\t\tnumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\t// If the number was not valid before but is valid now,\r\n\t\t// or if it was too long before, we consider the number\r\n\t\t// with the country calling code stripped to be a better result\r\n\t\t// and keep that instead.\r\n\t\t// For example, in Germany (+49), `49` is a valid area code,\r\n\t\t// so if a number starts with `49`, it could be both a valid\r\n\t\t// national German number or an international number without\r\n\t\t// a leading `+`.\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t\t&&\r\n\t\t\t\tmatchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t)\r\n\t\t\t||\r\n\t\t\tcheckNumberLength(nationalNumber, metadata) === 'TOO_LONG'\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: possibleShorterNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { number }\r\n}", "import stripIddPrefix from './stripIddPrefix.js'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js'\r\nimport Metadata from '../metadata.js'\r\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js'\r\n\r\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCodeSource: string?, countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\r\nexport default function extractCountryCallingCode(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tlet isNumberWithIddPrefix\r\n\r\n\t// If this is not an international phone number,\r\n\t// then either extract an \"IDD\" prefix, or extract a\r\n\t// country calling code from a number by autocorrecting it\r\n\t// by prepending a leading `+` in cases when it starts\r\n\t// with the country calling code.\r\n\t// https://wikitravel.org/en/International_dialling_prefix\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\tif (number[0] !== '+') {\r\n\t\t// Convert an \"out-of-country\" dialing phone number\r\n\t\t// to a proper international phone number.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata)\r\n\t\t// If an IDD prefix was stripped then\r\n\t\t// convert the number to international one\r\n\t\t// for subsequent parsing.\r\n\t\tif (numberWithoutIDD && numberWithoutIDD !== number) {\r\n\t\t\tisNumberWithIddPrefix = true\r\n\t\t\tnumber = '+' + numberWithoutIDD\r\n\t\t} else {\r\n\t\t\t// Check to see if the number starts with the country calling code\r\n\t\t\t// for the default country. If so, we remove the country calling code,\r\n\t\t\t// and do some checks on the validity of the number before and after.\r\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t\tif (country || callingCode) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\t\tnumber,\r\n\t\t\t\t\tcountry,\r\n\t\t\t\t\tcallingCode,\r\n\t\t\t\t\tmetadata\r\n\t\t\t\t)\r\n\t\t\t\tif (countryCallingCode) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcountryCallingCodeSource: 'FROM_NUMBER_WITHOUT_PLUS_SIGN',\r\n\t\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t// No need to set it to `UNSPECIFIED`. It can be just `undefined`.\r\n\t\t\t\t// countryCallingCodeSource: 'UNSPECIFIED',\r\n\t\t\t\tnumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fast abortion: country codes do not begin with a '0'\r\n\tif (number[1] === '0') {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// The thing with country phone codes\r\n\t// is that they are orthogonal to each other\r\n\t// i.e. there's no such country phone code A\r\n\t// for which country phone code B exists\r\n\t// where B starts with A.\r\n\t// Therefore, while scanning digits,\r\n\t// if a valid country code is found,\r\n\t// that means that it is the country code.\r\n\t//\r\n\tlet i = 2\r\n\twhile (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\r\n\t\tconst countryCallingCode = number.slice(1, i)\r\n\t\tif (metadata.hasCallingCode(countryCallingCode)) {\r\n\t\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCodeSource: isNumberWithIddPrefix ? 'FROM_NUMBER_WITH_IDD' : 'FROM_NUMBER_WITH_PLUS_SIGN',\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: number.slice(i)\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn {}\r\n}\r\n\r\n// The possible values for the returned `countryCallingCodeSource` are:\r\n//\r\n// Copy-pasted from:\r\n// https://github.com/google/libphonenumber/blob/master/resources/phonenumber.proto\r\n//\r\n// // The source from which the country_code is derived. This is not set in the\r\n// // general parsing method, but in the method that parses and keeps raw_input.\r\n// // New fields could be added upon request.\r\n// enum CountryCodeSource {\r\n//  // Default value returned if this is not set, because the phone number was\r\n//  // created using parse, not parseAndKeepRawInput. hasCountryCodeSource will\r\n//  // return false if this is the case.\r\n//  UNSPECIFIED = 0;\r\n//\r\n//  // The country_code is derived based on a phone number with a leading \"+\",\r\n//  // e.g. the French number \"+33 1 42 68 53 00\".\r\n//  FROM_NUMBER_WITH_PLUS_SIGN = 1;\r\n//\r\n//  // The country_code is derived based on a phone number with a leading IDD,\r\n//  // e.g. the French number \"011 33 1 42 68 53 00\", as it is dialled from US.\r\n//  FROM_NUMBER_WITH_IDD = 5;\r\n//\r\n//  // The country_code is derived based on a phone number without a leading\r\n//  // \"+\", e.g. the French number \"33 1 42 68 53 00\" when defaultCountry is\r\n//  // supplied as France.\r\n//  FROM_NUMBER_WITHOUT_PLUS_SIGN = 10;\r\n//\r\n//  // The country_code is derived NOT based on the phone number itself, but\r\n//  // from the defaultCountry parameter provided in the parsing function by the\r\n//  // clients. This happens mostly for numbers written in the national format\r\n//  // (without country code). For example, this would be set when parsing the\r\n//  // French number \"01 42 68 53 00\", when defaultCountry is supplied as\r\n//  // France.\r\n//  FROM_DEFAULT_COUNTRY = 20;\r\n// }", "import Metadata from '../metadata.js'\r\nimport getNumberType from './getNumberType.js'\r\n\r\nexport default function getCountryByNationalNumber(nationalPhoneNumber, {\r\n\tcountries,\r\n\tdefaultCountry,\r\n\tmetadata\r\n}) {\r\n\t// Re-create `metadata` because it will be selecting a `country`.\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tconst matchingCountries = []\r\n\r\n\tfor (const country of countries) {\r\n\t\tmetadata.country(country)\r\n\t\t// \"Leading digits\" patterns are only defined for about 20% of all countries.\r\n\t\t// By definition, matching \"leading digits\" is a sufficient but not a necessary\r\n\t\t// condition for a phone number to belong to a country.\r\n\t\t// The point of \"leading digits\" check is that it's the fastest one to get a match.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\r\n\t\t// I'd suppose that \"leading digits\" patterns are mutually exclusive for different countries\r\n\t\t// because of the intended use of that feature.\r\n\t\tif (metadata.leadingDigits()) {\r\n\t\t\tif (nationalPhoneNumber &&\r\n\t\t\t\tnationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Else perform full validation with all of those\r\n\t\t// fixed-line/mobile/etc regular expressions.\r\n\t\telse if (getNumberType({ phone: nationalPhoneNumber, country }, undefined, metadata.metadata)) {\r\n\t\t\t// If the `defaultCountry` is among the `matchingCountries` then return it.\r\n\t\t\tif (defaultCountry) {\r\n\t\t\t\tif (country === defaultCountry) {\r\n\t\t\t\t\treturn country\r\n\t\t\t\t}\r\n\t\t\t\tmatchingCountries.push(country)\r\n\t\t\t} else {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the first (\"main\") one of the `matchingCountries`.\r\n\tif (matchingCountries.length > 0) {\r\n\t\treturn matchingCountries[0]\r\n\t}\r\n}", "import getCountryByNationalNumber from './getCountryByNationalNumber.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default function getCountryByCallingCode(callingCode, {\r\n\tnationalNumber: nationalPhoneNumber,\r\n\tdefaultCountry,\r\n\tmetadata\r\n}) {\r\n\t/* istanbul ignore if */\r\n\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\tif (metadata.isNonGeographicCallingCode(callingCode)) {\r\n\t\t\treturn '001'\r\n\t\t}\r\n\t}\r\n\tconst possibleCountries = metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn\r\n\t}\r\n\t// If there's just one country corresponding to the country code,\r\n\t// then just return it, without further phone number digits validation.\r\n\tif (possibleCountries.length === 1) {\r\n\t\treturn possibleCountries[0]\r\n\t}\r\n\treturn getCountryByNationalNumber(nationalPhoneNumber, {\r\n\t\tcountries: possibleCountries,\r\n\t\tdefaultCountry,\r\n\t\tmetadata: metadata.metadata\r\n\t})\r\n}", "// When phone numbers are written in `RFC3966` format — `\"tel:+12133734253\"` —\r\n// they can have their \"calling code\" part written separately in a `phone-context` parameter.\r\n// Example: `\"tel:12133734253;phone-context=+1\"`.\r\n// This function parses the full phone number from the local number and the `phone-context`\r\n// when the `phone-context` contains a `+` sign.\r\n\r\nimport {\r\n  VALID_DIGITS,\r\n  // PLUS_CHARS\r\n} from '../constants.js'\r\n\r\nexport const PLUS_SIGN = '+'\r\n\r\nconst RFC3966_VISUAL_SEPARATOR_ = '[\\\\-\\\\.\\\\(\\\\)]?'\r\n\r\nconst RFC3966_PHONE_DIGIT_ = '(' + '[' + VALID_DIGITS + ']' + '|' + RFC3966_VISUAL_SEPARATOR_ + ')'\r\n\r\nconst RFC3966_GLOBAL_NUMBER_DIGITS_ =\r\n\t'^' +\r\n\t'\\\\' +\r\n\tPLUS_SIGN +\r\n\tRFC3966_PHONE_DIGIT_ +\r\n\t'*' +\r\n\t'[' + VALID_DIGITS +  ']' +\r\n\tRFC3966_PHONE_DIGIT_ +\r\n\t'*' +\r\n\t'$'\r\n\r\n/**\r\n * Regular expression of valid global-number-digits for the phone-context\r\n * parameter, following the syntax defined in RFC3966.\r\n */\r\nconst RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_ = new RegExp(RFC3966_GLOBAL_NUMBER_DIGITS_, 'g')\r\n\r\n// In this port of Google's library, we don't accept alpha characters in phone numbers.\r\n// const ALPHANUM_ = VALID_ALPHA_ + VALID_DIGITS\r\nconst ALPHANUM_ = VALID_DIGITS\r\n\r\nconst RFC3966_DOMAINLABEL_ = '[' + ALPHANUM_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*'\r\n\r\nconst VALID_ALPHA_ = 'a-zA-Z'\r\nconst RFC3966_TOPLABEL_ = '[' + VALID_ALPHA_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*'\r\n\r\nconst RFC3966_DOMAINNAME_ = '^(' + RFC3966_DOMAINLABEL_ + '\\\\.)*' + RFC3966_TOPLABEL_ + '\\\\.?$'\r\n\r\n/**\r\n * Regular expression of valid domainname for the phone-context parameter,\r\n * following the syntax defined in RFC3966.\r\n */\r\nconst RFC3966_DOMAINNAME_PATTERN_ = new RegExp(RFC3966_DOMAINNAME_, 'g')\r\n\r\nexport const RFC3966_PREFIX_ = 'tel:'\r\nexport const RFC3966_PHONE_CONTEXT_ = ';phone-context='\r\nexport const RFC3966_ISDN_SUBADDRESS_ = ';isub='\r\n\r\n/**\r\n * Extracts the value of the phone-context parameter of `numberToExtractFrom`,\r\n * following the syntax defined in RFC3966.\r\n *\r\n * @param {string} numberToExtractFrom\r\n * @return {string|null} the extracted string (possibly empty), or `null` if no phone-context parameter is found.\r\n */\r\nexport default function extractPhoneContext(numberToExtractFrom) {\r\n\tconst indexOfPhoneContext = numberToExtractFrom.indexOf(RFC3966_PHONE_CONTEXT_)\r\n\t// If no phone-context parameter is present\r\n\tif (indexOfPhoneContext < 0) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tconst phoneContextStart = indexOfPhoneContext + RFC3966_PHONE_CONTEXT_.length\r\n\t// If phone-context parameter is empty\r\n\tif (phoneContextStart >= numberToExtractFrom.length) {\r\n\t\treturn ''\r\n\t}\r\n\r\n\tconst phoneContextEnd = numberToExtractFrom.indexOf(';', phoneContextStart)\r\n\t// If phone-context is not the last parameter\r\n\tif (phoneContextEnd >= 0) {\r\n\t\treturn numberToExtractFrom.substring(phoneContextStart, phoneContextEnd)\r\n\t} else {\r\n\t\treturn numberToExtractFrom.substring(phoneContextStart)\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns whether the value of phoneContext follows the syntax defined in RFC3966.\r\n *\r\n * @param {string|null} phoneContext\r\n * @return {boolean}\r\n */\r\nexport function isPhoneContextValid(phoneContext) {\r\n\tif (phoneContext === null) {\r\n\t\treturn true\r\n\t}\r\n\r\n\tif (phoneContext.length === 0) {\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Does phone-context value match pattern of global-number-digits or domainname.\r\n\treturn RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_.test(phoneContext) ||\r\n\t\tRFC3966_DOMAINNAME_PATTERN_.test(phoneContext)\r\n}", "import extractPhoneContext, {\r\n\tisPhoneContextValid,\r\n\tPLUS_SIGN,\r\n\tRFC3966_PREFIX_,\r\n\tRFC3966_PHONE_CONTEXT_,\r\n\tRFC3966_ISDN_SUBADDRESS_\r\n} from './extractPhoneContext.js'\r\n\r\nimport ParseError from '../ParseError.js'\r\n\r\n/**\r\n * @param  {string} numberToParse\r\n * @param  {string} nationalNumber\r\n * @return {}\r\n */\r\nexport default function extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(numberToParse, {\r\n\textractFormattedPhoneNumber\r\n}) {\r\n\tconst phoneContext = extractPhoneContext(numberToParse)\r\n\tif (!isPhoneContextValid(phoneContext)) {\r\n\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t}\r\n\r\n\tlet phoneNumberString\r\n\r\n\tif (phoneContext === null) {\r\n\t\t// Extract a possible number from the string passed in.\r\n\t\t// (this strips leading characters that could not be the start of a phone number)\r\n\t\tphoneNumberString = extractFormattedPhoneNumber(numberToParse) || ''\r\n\t} else {\r\n\t\tphoneNumberString = ''\r\n\r\n\t\t// If the phone context contains a phone number prefix, we need to capture\r\n\t\t// it, whereas domains will be ignored.\r\n\t\tif (phoneContext.charAt(0) === PLUS_SIGN) {\r\n\t\t\tphoneNumberString += phoneContext\r\n\t\t}\r\n\r\n\t\t// Now append everything between the \"tel:\" prefix and the phone-context.\r\n\t\t// This should include the national number, an optional extension or\r\n\t\t// isdn-subaddress component. Note we also handle the case when \"tel:\" is\r\n\t\t// missing, as we have seen in some of the phone number inputs.\r\n\t\t// In that case, we append everything from the beginning.\r\n\t\tconst indexOfRfc3966Prefix = numberToParse.indexOf(RFC3966_PREFIX_)\r\n\t\tlet indexOfNationalNumber\r\n\t\t// RFC 3966 \"tel:\" prefix is preset at this stage because\r\n\t\t// `isPhoneContextValid()` requires it to be present.\r\n\t\t/* istanbul ignore else */\r\n\t\tif (indexOfRfc3966Prefix >= 0) {\r\n\t\t\tindexOfNationalNumber = indexOfRfc3966Prefix + RFC3966_PREFIX_.length\r\n\t\t} else {\r\n\t\t\tindexOfNationalNumber = 0\r\n\t\t}\r\n\t\tconst indexOfPhoneContext = numberToParse.indexOf(RFC3966_PHONE_CONTEXT_)\r\n\t\tphoneNumberString += numberToParse.substring(indexOfNationalNumber, indexOfPhoneContext)\r\n\t}\r\n\r\n\t// Delete the isdn-subaddress and everything after it if it is present.\r\n\t// Note extension won't appear at the same time with isdn-subaddress\r\n\t// according to paragraph 5.3 of the RFC3966 spec.\r\n\tconst indexOfIsdn = phoneNumberString.indexOf(RFC3966_ISDN_SUBADDRESS_)\r\n\tif (indexOfIsdn > 0) {\r\n\t\tphoneNumberString = phoneNumberString.substring(0, indexOfIsdn)\r\n\t}\r\n\t// If both phone context and isdn-subaddress are absent but other\r\n\t// parameters are present, the parameters are left in nationalNumber.\r\n\t// This is because we are concerned about deleting content from a potential\r\n\t// number string when there is no strong evidence that the number is\r\n\t// actually written in RFC3966.\r\n\r\n\tif (phoneNumberString !== '') {\r\n\t\treturn phoneNumberString\r\n\t}\r\n}", "// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tPLUS_CHARS,\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tMAX_LENGTH_FOR_NSN\r\n} from './constants.js'\r\n\r\nimport ParseError from './ParseError.js'\r\nimport Metadata from './metadata.js'\r\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js'\r\nimport extractExtension from './helpers/extension/extractExtension.js'\r\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js'\r\nimport getCountryCallingCode from './getCountryCallingCode.js'\r\nimport { isPossibleNumber } from './isPossible.js'\r\n// import { parseRFC3966 } from './helpers/RFC3966.js'\r\nimport PhoneNumber from './PhoneNumber.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js'\r\nimport extractNationalNumber from './helpers/extractNationalNumber.js'\r\nimport stripIddPrefix from './helpers/stripIddPrefix.js'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js'\r\nimport extractFormattedPhoneNumberFromPossibleRfc3966NumberUri from './helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js'\r\n\r\n// We don't allow input strings for parsing to be longer than 250 chars.\r\n// This prevents malicious input from consuming CPU.\r\nconst MAX_INPUT_STRING_LENGTH = 250\r\n\r\n// This consists of the plus symbol, digits, and arabic-indic digits.\r\nconst PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']')\r\n\r\n// Regular expression of trailing characters that we want to remove.\r\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\r\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\r\nconst AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$')\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\n// Examples:\r\n//\r\n// ```js\r\n// parse('8 (800) 555-35-35', 'RU')\r\n// parse('8 (800) 555-35-35', 'RU', metadata)\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\r\n// parse('+7 800 555 35 35')\r\n// parse('+7 800 555 35 35', metadata)\r\n// ```\r\n//\r\n\r\n/**\r\n * Parses a phone number.\r\n *\r\n * parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)\r\n * parse('123456789', { defaultCountry: 'RU' }, metadata)\r\n * parse('123456789', undefined, metadata)\r\n *\r\n * @param  {string} input\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).\r\n */\r\nexport default function parse(text, options, metadata) {\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// Validate `defaultCountry`.\r\n\tif (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\tthrow new Error(`Unknown country: ${options.defaultCountry}`)\r\n\t}\r\n\r\n\t// Parse the phone number.\r\n\tconst { number: formattedPhoneNumber, ext, error } = parseInput(text, options.v2, options.extract)\r\n\r\n\t// If the phone number is not viable then return nothing.\r\n\tif (!formattedPhoneNumber) {\r\n\t\tif (options.v2) {\r\n\t\t\tif (error === 'TOO_SHORT') {\r\n\t\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t\t}\r\n\t\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst {\r\n\t\tcountry,\r\n\t\tnationalNumber,\r\n\t\tcountryCallingCode,\r\n\t\tcountryCallingCodeSource,\r\n\t\tcarrierCode\r\n\t} = parsePhoneNumber(\r\n\t\tformattedPhoneNumber,\r\n\t\toptions.defaultCountry,\r\n\t\toptions.defaultCallingCode,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (!metadata.hasSelectedNumberingPlan()) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\tif (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\r\n\t\t// Won't throw here because the regexp already demands length > 1.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\t//\r\n\t// A sidenote:\r\n\t//\r\n\t// They say that sometimes national (significant) numbers\r\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\r\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\r\n\t// Such numbers will just be discarded.\r\n\t//\r\n\tif (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\tif (options.v2) {\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountryCallingCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tmetadata.metadata\r\n\t\t)\r\n\t\tif (country) {\r\n\t\t\tphoneNumber.country = country\r\n\t\t}\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\tif (ext) {\r\n\t\t\tphoneNumber.ext = ext\r\n\t\t}\r\n\t\tphoneNumber.__countryCallingCodeSource = countryCallingCodeSource\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t// Check if national phone number pattern matches the number.\r\n\t// National number pattern is different for each country,\r\n\t// even for those ones which are part of the \"NANPA\" group.\r\n\tconst valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ?\r\n\t\tmatchesEntirely(nationalNumber, metadata.nationalNumberPattern()) :\r\n\t\tfalse\r\n\r\n\tif (!options.extended) {\r\n\t\treturn valid ? result(country, nationalNumber, ext) : {}\r\n\t}\r\n\r\n\t// isInternational: countryCallingCode !== undefined\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode,\r\n\t\tvalid,\r\n\t\tpossible: valid ? true : (\r\n\t\t\toptions.extended === true &&\r\n\t\t\tmetadata.possibleLengths() &&\r\n\t\t\tisPossibleNumber(nationalNumber, metadata) ? true : false\r\n\t\t),\r\n\t\tphone: nationalNumber,\r\n\t\text\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\r\nfunction extractFormattedPhoneNumber(text, extract, throwOnError) {\r\n\tif (!text) {\r\n\t\treturn\r\n\t}\r\n\tif (text.length > MAX_INPUT_STRING_LENGTH) {\r\n\t\tif (throwOnError) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tif (extract === false) {\r\n\t\treturn text\r\n\t}\r\n\t// Attempt to extract a possible number from the string passed in\r\n\tconst startsAt = text.search(PHONE_NUMBER_START_PATTERN)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\treturn text\r\n\t\t// Trim everything to the left of the phone number\r\n\t\t.slice(startsAt)\r\n\t\t// Remove trailing non-numerical characters\r\n\t\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '')\r\n}\r\n\r\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nfunction parseInput(text, v2, extract) {\r\n\t// // Parse RFC 3966 phone number URI.\r\n\t// if (text && text.indexOf('tel:') === 0) {\r\n\t// \treturn parseRFC3966(text)\r\n\t// }\r\n\t// let number = extractFormattedPhoneNumber(text, extract, v2)\r\n\tlet number = extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(text, {\r\n\t\textractFormattedPhoneNumber: (text) => extractFormattedPhoneNumber(text, extract, v2)\r\n\t})\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\tif (isViablePhoneNumberStart(number)) {\r\n\t\t\treturn { error: 'TOO_SHORT' }\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\t// Attempt to parse extension first, since it doesn't require region-specific\r\n\t// data and we want to have the non-normalised number here.\r\n\tconst withExtensionStripped = extractExtension(number)\r\n\tif (withExtensionStripped.ext) {\r\n\t\treturn withExtensionStripped\r\n\t}\r\n\treturn { number }\r\n}\r\n\r\n/**\r\n * Creates `parse()` result object.\r\n */\r\nfunction result(country, nationalNumber, ext) {\r\n\tconst result = {\r\n\t\tcountry,\r\n\t\tphone: nationalNumber\r\n\t}\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\r\nfunction parsePhoneNumber(\r\n\tformattedPhoneNumber,\r\n\tdefaultCountry,\r\n\tdefaultCallingCode,\r\n\tmetadata\r\n) {\r\n\t// Extract calling code from phone number.\r\n\tlet { countryCallingCodeSource, countryCallingCode, number } = extractCountryCallingCode(\r\n\t\tparseIncompletePhoneNumber(formattedPhoneNumber),\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata.metadata\r\n\t)\r\n\r\n\t// Choose a country by `countryCallingCode`.\r\n\tlet country\r\n\tif (countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t}\r\n\t// If `formattedPhoneNumber` is passed in \"national\" format\r\n\t// then `number` is defined and `countryCallingCode` is `undefined`.\r\n\telse if (number && (defaultCountry || defaultCallingCode)) {\r\n\t\tmetadata.selectNumberingPlan(defaultCountry, defaultCallingCode)\r\n\t\tif (defaultCountry) {\r\n\t\t\tcountry = defaultCountry\r\n\t\t} else {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tcountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcountryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata)\r\n\t}\r\n\telse return {}\r\n\r\n\tif (!number) {\r\n\t\treturn {\r\n\t\t\tcountryCallingCodeSource,\r\n\t\t\tcountryCallingCode\r\n\t\t}\r\n\t}\r\n\r\n\tconst {\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t} = extractNationalNumber(\r\n\t\tparseIncompletePhoneNumber(number),\r\n\t\tmetadata\r\n\t)\r\n\r\n\t// Sometimes there are several countries\r\n\t// corresponding to the same country phone code\r\n\t// (e.g. NANPA countries all having `1` country phone code).\r\n\t// Therefore, to reliably determine the exact country,\r\n\t// national (significant) number should have been parsed first.\r\n\t//\r\n\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\r\n\t// get their countries populated with the full set of\r\n\t// \"phone number type\" regular expressions.\r\n\t//\r\n\tconst exactCountry = getCountryByCallingCode(countryCallingCode, {\r\n\t\tnationalNumber,\r\n\t\tdefaultCountry,\r\n\t\tmetadata\r\n\t})\r\n\tif (exactCountry) {\r\n\t\tcountry = exactCountry\r\n\t\t/* istanbul ignore if */\r\n\t\tif (exactCountry === '001') {\r\n\t\t\t// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\r\n\t\t\t// If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\r\n\t\t\t// then remove the \"istanbul ignore if\".\r\n\t\t} else {\r\n\t\t\tmetadata.country(country)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcountryCallingCodeSource,\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t}\r\n}", "import parse from './parse.js'\r\n\r\nexport default function parsePhoneNumberWithError(text, options, metadata) {\r\n\treturn parse(text, { ...options, v2: true }, metadata)\r\n}", "// Extracts the following properties from function arguments:\r\n// * input `text`\r\n// * `options` object\r\n// * `metadata` JSON\r\nexport default function normalizeArguments(args) {\r\n\tconst [arg_1, arg_2, arg_3, arg_4] = Array.prototype.slice.call(args)\r\n\r\n\tlet text\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `parsePhoneNumber('88005553535', ...)`.\r\n\tif (typeof arg_1 === 'string') {\r\n\t\ttext = arg_1\r\n\t}\r\n\telse throw new TypeError('A text for parsing must be a string.')\r\n\r\n\t// If \"default country\" argument is being passed then move it to `options`.\r\n\t// `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\r\n\tif (!arg_2 || typeof arg_2 === 'string')\r\n\t{\r\n\t\tif (arg_4) {\r\n\t\t\toptions = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t} else {\r\n\t\t\toptions = undefined\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\r\n\t\tif (arg_2) {\r\n\t\t\toptions = { defaultCountry: arg_2, ...options }\r\n\t\t}\r\n\t}\r\n\t// `defaultCountry` is not passed.\r\n\t// Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\r\n\telse if (isObject(arg_2))\r\n\t{\r\n\t\tif (arg_3) {\r\n\t\t\toptions  = arg_2\r\n\t\t\tmetadata = arg_3\r\n\t\t} else {\r\n\t\t\tmetadata = arg_2\r\n\t\t}\r\n\t}\r\n\telse throw new Error(`Invalid second argument: ${arg_2}`)\r\n\r\n\treturn {\r\n\t\ttext,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Otherwise istanbul would show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst isObject = _ => typeof _ === 'object'", "import parsePhoneNumberWithError_ from './parsePhoneNumberWithError_.js'\r\nimport normalizeArguments from './normalizeArguments.js'\r\n\r\nexport default function parsePhoneNumberWithError() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumberWithError_(text, options, metadata)\r\n}", "import parsePhoneNumberWithError from './parsePhoneNumberWithError_.js'\r\nimport ParseError from './ParseError.js'\r\nimport { isSupportedCountry } from './metadata.js'\r\n\r\nexport default function parsePhoneNumber(text, options, metadata) {\r\n\t// Validate `defaultCountry`.\r\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\tdefaultCountry: undefined\r\n\t\t}\r\n\t}\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\treturn parsePhoneNumberWithError(text, options, metadata)\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n", "import normalizeArguments from './normalizeArguments.js'\r\nimport parsePhoneNumber_ from './parsePhoneNumber_.js'\r\n\r\nexport default function parsePhoneNumber() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumber_(text, options, metadata)\r\n}\r\n", "import normalizeArguments from './normalizeArguments.js'\r\nimport parsePhoneNumber from './parsePhoneNumber_.js'\r\n\r\nexport default function isValidPhoneNumber() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumber(text, options, metadata)\r\n\treturn phoneNumber && phoneNumber.isValid() || false\r\n}", "import normalizeArguments from './normalizeArguments.js'\r\nimport parsePhoneNumber from './parsePhoneNumber_.js'\r\n\r\nexport default function isPossiblePhoneNumber() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\tconst phoneNumber = parsePhoneNumber(text, options, metadata)\r\n\treturn phoneNumber && phoneNumber.isPossible() || false\r\n}", "import normalizeArguments from './normalizeArguments.js'\r\nimport parsePhoneNumberWithError from './parsePhoneNumberWithError_.js'\r\nimport ParseError from './ParseError.js'\r\nimport Metadata from './metadata.js'\r\nimport checkNumberLength from './helpers/checkNumberLength.js'\r\n\r\nexport default function validatePhoneNumberLength() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\tconst phoneNumber = parsePhoneNumberWithError(text, options, metadata)\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(phoneNumber.countryCallingCode)\r\n\t\tconst result = checkNumberLength(phoneNumber.nationalNumber, metadata)\r\n\t\tif (result !== 'IS_POSSIBLE') {\r\n\t\t\treturn result\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\treturn error.message\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}", "// https://medium.com/dsinjs/implementing-lru-cache-in-javascript-94ba6755cda9\r\n\r\nclass Node {\r\n  constructor(key, value, next = null, prev = null) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = next;\r\n    this.prev = prev;\r\n  }\r\n}\r\n\r\nexport default class LRUCache {\r\n  //set default limit of 10 if limit is not passed.\r\n  constructor(limit = 10) {\r\n    this.size = 0;\r\n    this.limit = limit;\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.cache = {};\r\n  }\r\n\r\n  // Write Node to head of LinkedList\r\n  // update cache with Node key and Node reference\r\n  put(key, value){\r\n    this.ensureLimit();\r\n\r\n    if(!this.head){\r\n      this.head = this.tail = new Node(key, value);\r\n    }else{\r\n      const node = new Node(key, value, this.head);\r\n      this.head.prev = node;\r\n      this.head = node;\r\n    }\r\n\r\n    //Update the cache map\r\n    this.cache[key] = this.head;\r\n    this.size++;\r\n  }\r\n\r\n  // Read from cache map and make that node as new Head of LinkedList\r\n  get(key){\r\n    if(this.cache[key]){\r\n      const value = this.cache[key].value;\r\n\r\n      // node removed from it's position and cache\r\n      this.remove(key)\r\n      // write node again to the head of LinkedList to make it most recently used\r\n      this.put(key, value);\r\n\r\n      return value;\r\n    }\r\n\r\n    console.log(`Item not available in cache for key ${key}`);\r\n  }\r\n\r\n  ensureLimit(){\r\n    if(this.size === this.limit){\r\n      this.remove(this.tail.key)\r\n    }\r\n  }\r\n\r\n  remove(key){\r\n    const node = this.cache[key];\r\n\r\n    if(node.prev !== null){\r\n      node.prev.next = node.next;\r\n    }else{\r\n      this.head = node.next;\r\n    }\r\n\r\n    if(node.next !== null){\r\n      node.next.prev = node.prev;\r\n    }else{\r\n      this.tail = node.prev\r\n    }\r\n\r\n    delete this.cache[key];\r\n    this.size--;\r\n  }\r\n\r\n  clear() {\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.size = 0;\r\n    this.cache = {};\r\n  }\r\n\r\n  // // Invokes the callback function with every node of the chain and the index of the node.\r\n  // forEach(fn) {\r\n  //   let node = this.head;\r\n  //   let counter = 0;\r\n  //   while (node) {\r\n  //     fn(node, counter);\r\n  //     node = node.next;\r\n  //     counter++;\r\n  //   }\r\n  // }\r\n\r\n  // // To iterate over LRU with a 'for...of' loop\r\n  // *[Symbol.iterator]() {\r\n  //   let node = this.head;\r\n  //   while (node) {\r\n  //     yield node;\r\n  //     node = node.next;\r\n  //   }\r\n  // }\r\n}", "import LRUCache from './LRUCache.js'\r\n\r\n// A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\r\n// countries being used for the same doc with ~10 patterns for each country. Some pages will have\r\n// a lot more countries in use, but typically fewer numbers for each so expanding the cache for\r\n// that use-case won't have a lot of benefit.\r\nexport default class RegExpCache {\r\n\tconstructor(size) {\r\n\t\tthis.cache = new LRUCache(size)\r\n\t}\r\n\r\n\tgetPatternForRegExp(pattern) {\r\n\t\tlet regExp = this.cache.get(pattern)\r\n\t\tif (!regExp) {\r\n\t\t\tregExp = new RegExp('^' + pattern)\r\n\t\t\tthis.cache.put(pattern, regExp)\r\n\t\t}\r\n\t\treturn regExp\r\n\t}\r\n}", "/** Returns a regular expression quantifier with an upper and lower limit. */\r\nexport function limit(lower, upper)\r\n{\r\n\tif ((lower < 0) || (upper <= 0) || (upper < lower)) {\r\n\t\tthrow new TypeError()\r\n\t}\r\n\treturn `{${lower},${upper}}`\r\n}\r\n\r\n/**\r\n * Trims away any characters after the first match of {@code pattern} in {@code candidate},\r\n * returning the trimmed version.\r\n */\r\nexport function trimAfterFirstMatch(regexp, string)\r\n{\r\n\tconst index = string.search(regexp)\r\n\r\n\tif (index >= 0) {\r\n\t\treturn string.slice(0, index)\r\n\t}\r\n\r\n\treturn string\r\n}\r\n\r\nexport function startsWith(string, substring)\r\n{\r\n\treturn string.indexOf(substring) === 0\r\n}\r\n\r\nexport function endsWith(string, substring)\r\n{\r\n\treturn string.indexOf(substring, string.length - substring.length) === string.length - substring.length\r\n}\r\n", "// Javascript doesn't support UTF-8 regular expressions.\r\n// So mimicking them here.\r\n\r\n// Copy-pasted from `PhoneNumberMatcher.js`.\r\n\r\n/**\r\n * \"\\p{Z}\" is any kind of whitespace or invisible separator (\"Separator\").\r\n * http://www.regular-expressions.info/unicode.html\r\n * \"\\P{Z}\" is the reverse of \"\\p{Z}\".\r\n * \"\\p{N}\" is any kind of numeric character in any script (\"Number\").\r\n * \"\\p{Nd}\" is a digit zero through nine in any script except \"ideographic scripts\" (\"Decimal_Digit_Number\").\r\n * \"\\p{Sc}\" is a currency symbol (\"Currency_Symbol\").\r\n * \"\\p{L}\" is any kind of letter from any language (\"Letter\").\r\n * \"\\p{Mn}\" is \"non-spacing mark\".\r\n *\r\n * Javascript doesn't support Unicode Regular Expressions\r\n * so substituting it with this explicit set of characters.\r\n *\r\n * https://stackoverflow.com/questions/13210194/javascript-regex-equivalent-of-a-za-z-using-pl\r\n * https://github.com/danielberndt/babel-plugin-utf-8-regex/blob/master/src/transformer.js\r\n */\r\n\r\nconst _pZ = '\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000'\r\nexport const pZ = `[${_pZ}]`\r\nexport const PZ = `[^${_pZ}]`\r\n\r\nexport const _pN = '\\u0030-\\u0039\\u00B2\\u00B3\\u00B9\\u00BC-\\u00BE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19'\r\n// const pN = `[${_pN}]`\r\n\r\nconst _pNd = '\\u0030-\\u0039\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19'\r\nexport const pNd = `[${_pNd}]`\r\n\r\nexport const _pL = '\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC'\r\nconst pL = `[${_pL}]`\r\nconst pL_regexp = new RegExp(pL)\r\n\r\nconst _pSc = '\\u0024\\u00A2-\\u00A5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20B9\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6'\r\nconst pSc = `[${_pSc}]`\r\nconst pSc_regexp = new RegExp(pSc)\r\n\r\nconst _pMn = '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u08FE\\u0900-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26'\r\nconst pMn = `[${_pMn}]`\r\nconst pMn_regexp = new RegExp(pMn)\r\n\r\nconst _InBasic_Latin = '\\u0000-\\u007F'\r\nconst _InLatin_1_Supplement = '\\u0080-\\u00FF'\r\nconst _InLatin_Extended_A = '\\u0100-\\u017F'\r\nconst _InLatin_Extended_Additional = '\\u1E00-\\u1EFF'\r\nconst _InLatin_Extended_B = '\\u0180-\\u024F'\r\nconst _InCombining_Diacritical_Marks = '\\u0300-\\u036F'\r\n\r\nconst latinLetterRegexp = new RegExp\r\n(\r\n\t'[' +\r\n\t_InBasic_Latin +\r\n\t_InLatin_1_Supplement +\r\n\t_InLatin_Extended_A +\r\n\t_InLatin_Extended_Additional +\r\n\t_InLatin_Extended_B +\r\n\t_InCombining_Diacritical_Marks +\r\n\t']'\r\n)\r\n\r\n/**\r\n * Helper method to determine if a character is a Latin-script letter or not.\r\n * For our purposes, combining marks should also return true since we assume\r\n * they have been added to a preceding Latin character.\r\n */\r\nexport function isLatinLetter(letter)\r\n{\r\n\t// Combining marks are a subset of non-spacing-mark.\r\n\tif (!pL_regexp.test(letter) && !pMn_regexp.test(letter)) {\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn latinLetterRegexp.test(letter)\r\n}\r\n\r\nexport function isInvalidPunctuationSymbol(character)\r\n{\r\n\treturn character === '%' || pSc_regexp.test(character)\r\n}", "import parsePhoneNumber from '../parsePhoneNumber.js'\r\n\r\n/**\r\n * Matches a phone number object against a phone number string.\r\n * @param  {string} phoneNumberString\r\n * @param  {PhoneNumber} phoneNumber\r\n * @param  {object} metadata — Metadata JSON\r\n * @return {'INVALID_NUMBER'|'NO_MATCH'|'SHORT_NSN_MATCH'|'NSN_MATCH'|'EXACT_MATCH'}\r\n */\r\nexport default function matchPhoneNumberStringAgainstPhoneNumber(phoneNumberString, phoneNumber, metadata) {\r\n\t// Parse `phoneNumberString`.\r\n\tlet phoneNumberStringContainsCallingCode = true\r\n\tlet parsedPhoneNumber = parsePhoneNumber(phoneNumberString, metadata)\r\n\tif (!parsedPhoneNumber) {\r\n\t\t// If `phoneNumberString` didn't contain a country calling code\r\n\t\t// then substitute it with the `phoneNumber`'s country calling code.\r\n\t\tphoneNumberStringContainsCallingCode = false\r\n\t\tparsedPhoneNumber = parsePhoneNumber(phoneNumberString, { defaultCallingCode: phoneNumber.countryCallingCode }, metadata)\r\n\t}\r\n\tif (!parsedPhoneNumber) {\r\n\t\treturn 'INVALID_NUMBER'\r\n\t}\r\n\r\n\t// Check that the extensions match.\r\n\tif (phoneNumber.ext) {\r\n\t\tif (parsedPhoneNumber.ext !== phoneNumber.ext) {\r\n\t\t\treturn 'NO_MATCH'\r\n\t\t}\r\n\t} else {\r\n\t\tif (parsedPhoneNumber.ext) {\r\n\t\t\treturn 'NO_MATCH'\r\n\t\t}\r\n\t}\r\n\r\n\t// Check that country calling codes match.\r\n\tif (phoneNumberStringContainsCallingCode) {\r\n\t\tif (phoneNumber.countryCallingCode !== parsedPhoneNumber.countryCallingCode) {\r\n\t\t\treturn 'NO_MATCH'\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if the whole numbers match.\r\n\tif (phoneNumber.number === parsedPhoneNumber.number) {\r\n\t\tif (phoneNumberStringContainsCallingCode) {\r\n\t\t\treturn 'EXACT_MATCH'\r\n\t\t} else {\r\n\t\t\treturn 'NSN_MATCH'\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if one national number is a \"suffix\" of the other.\r\n\tif (\r\n\t\tphoneNumber.nationalNumber.indexOf(parsedPhoneNumber.nationalNumber) === 0 ||\r\n\t\tparsedPhoneNumber.nationalNumber.indexOf(phoneNumber.nationalNumber) === 0\r\n\t) {\r\n\t\t// \"A SHORT_NSN_MATCH occurs if there is a difference because of the\r\n\t\t//  presence or absence of an 'Italian leading zero', the presence or\r\n\t\t//  absence of an extension, or one NSN being a shorter variant of the\r\n\t\t//  other.\"\r\n\t\treturn 'SHORT_NSN_MATCH'\r\n\t}\r\n\r\n\treturn 'NO_MATCH'\r\n}", "import isValidNumber from '../isValid.js'\r\nimport parseDigits from '../helpers/parseDigits.js'\r\nimport matchPhoneNumberStringAgainstPhoneNumber from './matchPhoneNumberStringAgainstPhoneNumber.js'\r\nimport Metadata from '../metadata.js'\r\nimport getCountryByCallingCode from '../helpers/getCountryByCallingCode.js'\r\nimport { chooseFormatForNumber } from '../format.js'\r\n\r\nimport {\r\n\tstartsWith,\r\n\tendsWith\r\n} from './util.js'\r\n\r\n/**\r\n * Leniency when finding potential phone numbers in text segments\r\n * The levels here are ordered in increasing strictness.\r\n */\r\nexport default\r\n{\r\n\t/**\r\n\t * Phone numbers accepted are \"possible\", but not necessarily \"valid\".\r\n\t */\r\n\tPOSSIBLE(phoneNumber, { candidate, metadata })\r\n\t{\r\n\t\treturn true\r\n\t},\r\n\r\n\t/**\r\n\t * Phone numbers accepted are \"possible\" and \"valid\".\r\n\t * Numbers written in national format must have their national-prefix\r\n\t * present if it is usually written for a number of this type.\r\n\t */\r\n\tVALID(phoneNumber, { candidate, defaultCountry, metadata })\r\n\t{\r\n\t\tif (\r\n\t\t\t!phoneNumber.isValid() ||\r\n\t\t\t!containsOnlyValidXChars(phoneNumber, candidate, metadata)\r\n\t\t)\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\t// Skipped for simplicity.\r\n\t\t// return isNationalPrefixPresentIfRequired(phoneNumber, { defaultCountry, metadata })\r\n\t\treturn true\r\n\t},\r\n\r\n\t/**\r\n\t * Phone numbers accepted are \"valid\" and\r\n\t * are grouped in a possible way for this locale. For example, a US number written as\r\n\t * \"65 02 53 00 00\" and \"650253 0000\" are not accepted at this leniency level, whereas\r\n\t * \"650 253 0000\", \"650 2530000\" or \"6502530000\" are.\r\n\t * Numbers with more than one '/' symbol in the national significant number\r\n\t * are also dropped at this level.\r\n\t *\r\n\t * Warning: This level might result in lower coverage especially for regions outside of\r\n\t * country code \"+1\". If you are not sure about which level to use,\r\n\t * email the discussion group libphonenumber-discuss@googlegroups.com.\r\n\t */\r\n\tSTRICT_GROUPING(phoneNumber, { candidate, defaultCountry, metadata, regExpCache })\r\n\t{\r\n\t\tif (\r\n\t\t\t!phoneNumber.isValid() ||\r\n\t\t\t!containsOnlyValidXChars(phoneNumber, candidate, metadata) ||\r\n\t\t\tcontainsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) ||\r\n\t\t\t!isNationalPrefixPresentIfRequired(phoneNumber, { defaultCountry, metadata })\r\n\t\t)\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\treturn checkNumberGroupingIsValid\r\n\t\t(\r\n\t\t\tphoneNumber,\r\n\t\t\tcandidate,\r\n\t\t\tmetadata,\r\n\t\t\tallNumberGroupsRemainGrouped,\r\n\t\t\tregExpCache\r\n\t\t)\r\n\t},\r\n\r\n\t/**\r\n\t * Phone numbers accepted are \"valid\" and are grouped in the same way\r\n\t * that we would have formatted it, or as a single block.\r\n\t * For example, a US number written as \"650 2530000\" is not accepted\r\n\t * at this leniency level, whereas \"650 253 0000\" or \"6502530000\" are.\r\n\t * Numbers with more than one '/' symbol are also dropped at this level.\r\n\t *\r\n\t * Warning: This level might result in lower coverage especially for regions outside of\r\n\t * country code \"+1\". If you are not sure about which level to use, email the discussion group\r\n\t * libphonenumber-discuss@googlegroups.com.\r\n\t */\r\n\tEXACT_GROUPING(phoneNumber, { candidate, defaultCountry, metadata, regExpCache })\r\n\t{\r\n\t\tif (\r\n\t\t\t!phoneNumber.isValid() ||\r\n\t\t\t!containsOnlyValidXChars(phoneNumber, candidate, metadata) ||\r\n\t\t\tcontainsMoreThanOneSlashInNationalNumber(phoneNumber, candidate) ||\r\n\t\t\t!isNationalPrefixPresentIfRequired(phoneNumber, { defaultCountry, metadata })\r\n\t\t)\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\treturn checkNumberGroupingIsValid\r\n\t\t(\r\n\t\t\tphoneNumber,\r\n\t\t\tcandidate,\r\n\t\t\tmetadata,\r\n\t\t\tallNumberGroupsAreExactlyPresent,\r\n\t\t\tregExpCache\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction containsOnlyValidXChars(phoneNumber, candidate, metadata)\r\n{\r\n\t// The characters 'x' and 'X' can be (1) a carrier code, in which case they always precede the\r\n\t// national significant number or (2) an extension sign, in which case they always precede the\r\n\t// extension number. We assume a carrier code is more than 1 digit, so the first case has to\r\n\t// have more than 1 consecutive 'x' or 'X', whereas the second case can only have exactly 1 'x'\r\n\t// or 'X'. We ignore the character if it appears as the last character of the string.\r\n\tfor (let index = 0; index < candidate.length - 1; index++)\r\n\t{\r\n\t\tconst charAtIndex = candidate.charAt(index)\r\n\r\n\t\tif (charAtIndex === 'x' || charAtIndex === 'X')\r\n\t\t{\r\n\t\t\tconst charAtNextIndex = candidate.charAt(index + 1)\r\n\r\n\t\t\tif (charAtNextIndex === 'x' || charAtNextIndex === 'X')\r\n\t\t\t{\r\n\t\t\t\t// This is the carrier code case, in which the 'X's always precede the national\r\n\t\t\t\t// significant number.\r\n\t\t\t\tindex++\r\n\t\t\t\tif (matchPhoneNumberStringAgainstPhoneNumber(candidate.substring(index), phoneNumber, metadata) !== 'NSN_MATCH')\r\n\t\t\t\t{\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\t// This is the extension sign case, in which the 'x' or 'X' should always precede the\r\n\t\t\t\t// extension number.\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst ext = parseDigits(candidate.substring(index))\r\n\t\t\t\tif (ext) {\r\n\t\t\t\t\tif (phoneNumber.ext !== ext)  {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (phoneNumber.ext) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n}\r\n\r\nfunction isNationalPrefixPresentIfRequired(phoneNumber, { defaultCountry, metadata: _metadata })\r\n{\r\n\t// First, check how we deduced the country code. If it was written in international format, then\r\n\t// the national prefix is not required.\r\n\tif (phoneNumber.__countryCallingCodeSource !== 'FROM_DEFAULT_COUNTRY')\r\n\t{\r\n\t\treturn true\r\n\t}\r\n\r\n\tconst metadata = new Metadata(_metadata)\r\n\tmetadata.selectNumberingPlan(phoneNumber.countryCallingCode)\r\n\r\n\tconst phoneNumberRegion = phoneNumber.country || getCountryByCallingCode(phoneNumber.countryCallingCode, {\r\n\t\tnationalNumber: phoneNumber.nationalNumber,\r\n\t\tdefaultCountry,\r\n\t\tmetadata\r\n\t})\r\n\r\n\t// Check if a national prefix should be present when formatting this number.\r\n\tconst nationalNumber = phoneNumber.nationalNumber\r\n\tconst format = chooseFormatForNumber(metadata.numberingPlan.formats(), nationalNumber)\r\n\r\n\t// To do this, we check that a national prefix formatting rule was present\r\n\t// and that it wasn't just the first-group symbol ($1) with punctuation.\r\n\tif (format.nationalPrefixFormattingRule())\r\n\t{\r\n\t\tif (metadata.numberingPlan.nationalPrefixIsOptionalWhenFormattingInNationalFormat())\r\n\t\t{\r\n\t\t\t// The national-prefix is optional in these cases, so we don't need to check if it was present.\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tif (!format.usesNationalPrefix())\r\n\t\t{\r\n\t\t\t// National Prefix not needed for this number.\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn Boolean(phoneNumber.nationalPrefix)\r\n\t}\r\n\r\n\treturn true\r\n}\r\n\r\nexport function containsMoreThanOneSlashInNationalNumber(phoneNumber, candidate)\r\n{\r\n\tconst firstSlashInBodyIndex = candidate.indexOf('/')\r\n\tif (firstSlashInBodyIndex < 0)\r\n\t{\r\n\t\t// No slashes, this is okay.\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Now look for a second one.\r\n\tconst secondSlashInBodyIndex = candidate.indexOf('/', firstSlashInBodyIndex + 1)\r\n\tif (secondSlashInBodyIndex < 0)\r\n\t{\r\n\t\t// Only one slash, this is okay.\r\n\t\treturn false\r\n\t}\r\n\r\n\t// If the first slash is after the country calling code, this is permitted.\r\n\tconst candidateHasCountryCode =\r\n\t\t\tphoneNumber.__countryCallingCodeSource === 'FROM_NUMBER_WITH_PLUS_SIGN' ||\r\n\t\t\tphoneNumber.__countryCallingCodeSource === 'FROM_NUMBER_WITHOUT_PLUS_SIGN'\r\n\r\n\tif (candidateHasCountryCode && parseDigits(candidate.substring(0, firstSlashInBodyIndex)) === phoneNumber.countryCallingCode)\r\n\t{\r\n\t\t// Any more slashes and this is illegal.\r\n\t\treturn candidate.slice(secondSlashInBodyIndex + 1).indexOf('/') >= 0\r\n\t}\r\n\r\n\treturn true\r\n}\r\n\r\nfunction checkNumberGroupingIsValid(\r\n\tnumber,\r\n\tcandidate,\r\n\tmetadata,\r\n\tcheckGroups,\r\n\tregExpCache\r\n) {\r\n\tthrow new Error('This part of code hasn\\'t been ported')\r\n\r\n\tconst normalizedCandidate = normalizeDigits(candidate, true /* keep non-digits */)\r\n\tlet formattedNumberGroups = getNationalNumberGroups(metadata, number, null)\r\n\tif (checkGroups(metadata, number, normalizedCandidate, formattedNumberGroups)) {\r\n\t\treturn true\r\n\t}\r\n\r\n\t// If this didn't pass, see if there are any alternate formats that match, and try them instead.\r\n\tconst alternateFormats = MetadataManager.getAlternateFormatsForCountry(number.getCountryCode())\r\n\tconst nationalSignificantNumber = util.getNationalSignificantNumber(number)\r\n\r\n\tif (alternateFormats) {\r\n\t\tfor (const alternateFormat of alternateFormats.numberFormats()) {\r\n\t\t\tif (alternateFormat.leadingDigitsPatterns().length > 0) {\r\n\t\t\t\t// There is only one leading digits pattern for alternate formats.\r\n\t\t\t\tconst leadingDigitsRegExp = regExpCache.getPatternForRegExp('^' + alternateFormat.leadingDigitsPatterns()[0])\r\n\t\t\t\tif (!leadingDigitsRegExp.test(nationalSignificantNumber)) {\r\n\t\t\t\t\t// Leading digits don't match; try another one.\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tformattedNumberGroups = getNationalNumberGroups(metadata, number, alternateFormat)\r\n\t\t\tif (checkGroups(metadata, number, normalizedCandidate, formattedNumberGroups)) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn false\r\n}\r\n\r\n/**\r\n * Helper method to get the national-number part of a number, formatted without any national\r\n * prefix, and return it as a set of digit blocks that would be formatted together following\r\n * standard formatting rules.\r\n */\r\nfunction getNationalNumberGroups(\r\n\tmetadata,\r\n\tnumber,\r\n\tformattingPattern\r\n) {\r\n\tthrow new Error('This part of code hasn\\'t been ported')\r\n\r\n\tif (formattingPattern) {\r\n\t\t// We format the NSN only, and split that according to the separator.\r\n\t\tconst nationalSignificantNumber = util.getNationalSignificantNumber(number)\r\n\t\treturn util.formatNsnUsingPattern(nationalSignificantNumber,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformattingPattern, 'RFC3966', metadata).split('-')\r\n\t}\r\n\r\n\t// This will be in the format +CC-DG1-DG2-DGX;ext=EXT where DG1..DGX represents groups of digits.\r\n\tconst rfc3966Format = formatNumber(number, 'RFC3966', metadata)\r\n\r\n\t// We remove the extension part from the formatted string before splitting it into different\r\n\t// groups.\r\n\tlet endIndex = rfc3966Format.indexOf(';')\r\n\tif (endIndex < 0) {\r\n\t\tendIndex = rfc3966Format.length\r\n\t}\r\n\r\n\t// The country-code will have a '-' following it.\r\n\tconst startIndex = rfc3966Format.indexOf('-') + 1\r\n\treturn rfc3966Format.slice(startIndex, endIndex).split('-')\r\n}\r\n\r\nfunction allNumberGroupsAreExactlyPresent\r\n(\r\n\tmetadata,\r\n\tnumber,\r\n\tnormalizedCandidate,\r\n\tformattedNumberGroups\r\n)\r\n{\r\n\tthrow new Error('This part of code hasn\\'t been ported')\r\n\r\n\tconst candidateGroups = normalizedCandidate.split(NON_DIGITS_PATTERN)\r\n\r\n\t// Set this to the last group, skipping it if the number has an extension.\r\n\tlet candidateNumberGroupIndex =\r\n\t\t\tnumber.hasExtension() ? candidateGroups.length - 2 : candidateGroups.length - 1\r\n\r\n\t// First we check if the national significant number is formatted as a block.\r\n\t// We use contains and not equals, since the national significant number may be present with\r\n\t// a prefix such as a national number prefix, or the country code itself.\r\n\tif (candidateGroups.length == 1\r\n\t\t\t|| candidateGroups[candidateNumberGroupIndex].contains(\r\n\t\t\t\t\tutil.getNationalSignificantNumber(number)))\r\n\t{\r\n\t\treturn true\r\n\t}\r\n\r\n\t// Starting from the end, go through in reverse, excluding the first group, and check the\r\n\t// candidate and number groups are the same.\r\n\tlet formattedNumberGroupIndex = (formattedNumberGroups.length - 1)\r\n\twhile (formattedNumberGroupIndex > 0 && candidateNumberGroupIndex >= 0)\r\n\t{\r\n\t\tif (candidateGroups[candidateNumberGroupIndex] !== formattedNumberGroups[formattedNumberGroupIndex])\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tformattedNumberGroupIndex--\r\n\t\tcandidateNumberGroupIndex--\r\n\t}\r\n\r\n\t// Now check the first group. There may be a national prefix at the start, so we only check\r\n\t// that the candidate group ends with the formatted number group.\r\n\treturn (candidateNumberGroupIndex >= 0\r\n\t\t\t&& endsWith(candidateGroups[candidateNumberGroupIndex], formattedNumberGroups[0]))\r\n}\r\n\r\n\r\nfunction allNumberGroupsRemainGrouped\r\n(\r\n\tmetadata,\r\n\tnumber,\r\n\tnormalizedCandidate,\r\n\tformattedNumberGroups\r\n)\r\n{\r\n\tthrow new Error('This part of code hasn\\'t been ported')\r\n\r\n\tlet fromIndex = 0\r\n\tif (number.getCountryCodeSource() !== CountryCodeSource.FROM_DEFAULT_COUNTRY)\r\n\t{\r\n\t\t// First skip the country code if the normalized candidate contained it.\r\n\t\tconst countryCode = String(number.getCountryCode())\r\n\t\tfromIndex = normalizedCandidate.indexOf(countryCode) + countryCode.length()\r\n\t}\r\n\r\n\t// Check each group of consecutive digits are not broken into separate groupings in the\r\n\t// {@code normalizedCandidate} string.\r\n\tfor (let i = 0; i < formattedNumberGroups.length; i++)\r\n\t{\r\n\t\t// Fails if the substring of {@code normalizedCandidate} starting from {@code fromIndex}\r\n\t\t// doesn't contain the consecutive digits in formattedNumberGroups[i].\r\n\t\tfromIndex = normalizedCandidate.indexOf(formattedNumberGroups[i], fromIndex)\r\n\t\tif (fromIndex < 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// Moves {@code fromIndex} forward.\r\n\t\tfromIndex += formattedNumberGroups[i].length()\r\n\t\tif (i == 0 && fromIndex < normalizedCandidate.length())\r\n\t\t{\r\n\t\t\t// We are at the position right after the NDC. We get the region used for formatting\r\n\t\t\t// information based on the country code in the phone number, rather than the number itself,\r\n\t\t\t// as we do not need to distinguish between different countries with the same country\r\n\t\t\t// calling code and this is faster.\r\n\t\t\tconst region = util.getRegionCodeForCountryCode(number.getCountryCode())\r\n\t\t\tif (util.getNddPrefixForRegion(region, true) != null\r\n\t\t\t\t\t&& Character.isDigit(normalizedCandidate.charAt(fromIndex))) {\r\n\t\t\t\t// This means there is no formatting symbol after the NDC. In this case, we only\r\n\t\t\t\t// accept the number if there is no formatting symbol at all in the number, except\r\n\t\t\t\t// for extensions. This is only important for countries with national prefixes.\r\n\t\t\t\tconst nationalSignificantNumber = util.getNationalSignificantNumber(number)\r\n\t\t\t\treturn startsWith\r\n\t\t\t\t(\r\n\t\t\t\t\tnormalizedCandidate.slice(fromIndex - formattedNumberGroups[i].length),\r\n\t\t\t\t\t nationalSignificantNumber\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// The check here makes sure that we haven't mistakenly already used the extension to\r\n\t// match the last group of the subscriber number. Note the extension cannot have\r\n\t// formatting in-between digits.\r\n\treturn normalizedCandidate.slice(fromIndex).contains(number.getExtension())\r\n}", "import { trimAfterFirstMatch } from './util.js'\r\n\r\n// Regular expression of characters typically used to start a second phone number for the purposes\r\n// of parsing. This allows us to strip off parts of the number that are actually the start of\r\n// another number, such as for: (530) 583-6985 x302/x2303 -> the second extension here makes this\r\n// actually two phone numbers, (530) 583-6985 x302 and (530) 583-6985 x2303. We remove the second\r\n// extension so that the first number is parsed correctly.\r\n//\r\n// Matches a slash (\\ or /) followed by a space followed by an `x`.\r\n//\r\nconst SECOND_NUMBER_START_PATTERN = /[\\\\/] *x/\r\n\r\nexport default function parsePreCandidate(candidate)\r\n{\r\n\t// Check for extra numbers at the end.\r\n\t// TODO: This is the place to start when trying to support extraction of multiple phone number\r\n\t// from split notations (+41 79 123 45 67 / 68).\r\n\treturn trimAfterFirstMatch(SECOND_NUMBER_START_PATTERN, candidate)\r\n}", "// Matches strings that look like dates using \"/\" as a separator.\r\n// Examples: 3/10/2011, 31/10/96 or 08/31/95.\r\nconst SLASH_SEPARATED_DATES = /(?:(?:[0-3]?\\d\\/[01]?\\d)|(?:[01]?\\d\\/[0-3]?\\d))\\/(?:[12]\\d)?\\d{2}/\r\n\r\n// Matches timestamps.\r\n// Examples: \"2012-01-02 08:00\".\r\n// Note that the reg-ex does not include the\r\n// trailing \":\\d\\d\" -- that is covered by TIME_STAMPS_SUFFIX.\r\nconst TIME_STAMPS = /[12]\\d{3}[-/]?[01]\\d[-/]?[0-3]\\d +[0-2]\\d$/\r\nconst TIME_STAMPS_SUFFIX_LEADING = /^:[0-5]\\d/\r\n\r\nexport default function isValidPreCandidate(candidate, offset, text)\r\n{\r\n\t// Skip a match that is more likely to be a date.\r\n\tif (SLASH_SEPARATED_DATES.test(candidate)) {\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Skip potential time-stamps.\r\n\tif (TIME_STAMPS.test(candidate))\r\n\t{\r\n\t\tconst followingText = text.slice(offset + candidate.length)\r\n\t\tif (TIME_STAMPS_SUFFIX_LEADING.test(followingText)) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n}", "// Copy-pasted from `PhoneNumberMatcher.js`.\r\n\r\nimport { PLUS_CHARS } from '../constants.js'\r\nimport { limit } from './util.js'\r\n\r\nimport {\r\n\tisLatinLetter,\r\n\tisInvalidPunctuationSymbol\r\n} from './utf-8.js'\r\n\r\nconst OPENING_PARENS = '(\\\\[\\uFF08\\uFF3B'\r\nconst CLOSING_PARENS = ')\\\\]\\uFF09\\uFF3D'\r\nconst NON_PARENS = `[^${OPENING_PARENS}${CLOSING_PARENS}]`\r\n\r\nexport const LEAD_CLASS = `[${OPENING_PARENS}${PLUS_CHARS}]`\r\n\r\n// Punctuation that may be at the start of a phone number - brackets and plus signs.\r\nconst LEAD_CLASS_LEADING = new RegExp('^' + LEAD_CLASS)\r\n\r\n// Limit on the number of pairs of brackets in a phone number.\r\nconst BRACKET_PAIR_LIMIT = limit(0, 3)\r\n\r\n/**\r\n * Pattern to check that brackets match. Opening brackets should be closed within a phone number.\r\n * This also checks that there is something inside the brackets. Having no brackets at all is also\r\n * fine.\r\n *\r\n * An opening bracket at the beginning may not be closed, but subsequent ones should be.  It's\r\n * also possible that the leading bracket was dropped, so we shouldn't be surprised if we see a\r\n * closing bracket first. We limit the sets of brackets in a phone number to four.\r\n */\r\nconst MATCHING_BRACKETS_ENTIRE = new RegExp\r\n(\r\n\t'^'\r\n\t+ \"(?:[\" + OPENING_PARENS + \"])?\" + \"(?:\" + NON_PARENS + \"+\" + \"[\" + CLOSING_PARENS + \"])?\"\r\n\t+ NON_PARENS + \"+\"\r\n\t+ \"(?:[\" + OPENING_PARENS + \"]\" + NON_PARENS + \"+[\" + CLOSING_PARENS + \"])\" + BRACKET_PAIR_LIMIT\r\n\t+ NON_PARENS + \"*\"\r\n\t+ '$'\r\n)\r\n\r\n/**\r\n * Matches strings that look like publication pages. Example:\r\n * <pre>Computing Complete Answers to Queries in the Presence of Limited Access Patterns.\r\n * Chen Li. VLDB J. 12(3): 211-227 (2003).</pre>\r\n *\r\n * The string \"211-227 (2003)\" is not a telephone number.\r\n */\r\nconst PUB_PAGES = /\\d{1,5}-+\\d{1,5}\\s{0,4}\\(\\d{1,4}/\r\n\r\nexport default function isValidCandidate(candidate, offset, text, leniency)\r\n{\r\n\t// Check the candidate doesn't contain any formatting\r\n\t// which would indicate that it really isn't a phone number.\r\n\tif (!MATCHING_BRACKETS_ENTIRE.test(candidate) || PUB_PAGES.test(candidate)) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// If leniency is set to VALID or stricter, we also want to skip numbers that are surrounded\r\n\t// by Latin alphabetic characters, to skip cases like abc8005001234 or 8005001234def.\r\n\tif (leniency !== 'POSSIBLE')\r\n\t{\r\n\t\t// If the candidate is not at the start of the text,\r\n\t\t// and does not start with phone-number punctuation,\r\n\t\t// check the previous character.\r\n\t\tif (offset > 0 && !LEAD_CLASS_LEADING.test(candidate))\r\n\t\t{\r\n\t\t\tconst previousChar = text[offset - 1]\r\n\t\t\t// We return null if it is a latin letter or an invalid punctuation symbol.\r\n\t\t\tif (isInvalidPunctuationSymbol(previousChar) || isLatinLetter(previousChar)) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastCharIndex = offset + candidate.length\r\n\t\tif (lastCharIndex < text.length)\r\n\t\t{\r\n\t\t\tconst nextChar = text[lastCharIndex]\r\n\t\t\tif (isInvalidPunctuationSymbol(nextChar) || isLatinLetter(nextChar)) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n}", "/**\r\n * A port of Google's `PhoneNumberMatcher.java`.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberMatcher.java\r\n * Date: 08.03.2018.\r\n */\r\n\r\nimport PhoneNumber from './PhoneNumber.js'\r\n\r\nimport {\r\n  MAX_LENGTH_FOR_NSN,\r\n  MAX_LENGTH_COUNTRY_CODE,\r\n  VALID_PUNCTUATION\r\n} from './constants.js'\r\n\r\nimport createExtensionPattern from './helpers/extension/createExtensionPattern.js'\r\n\r\nimport RegExpCache from './findNumbers/RegExpCache.js'\r\n\r\nimport {\r\n\tlimit,\r\n\ttrimAfterFirstMatch\r\n} from './findNumbers/util.js'\r\n\r\nimport {\r\n\t_pL,\r\n\t_pN,\r\n\tpZ,\r\n\tPZ,\r\n\tpNd\r\n} from './findNumbers/utf-8.js'\r\n\r\nimport Leniency from './findNumbers/Leniency.js'\r\nimport parsePreCandidate from './findNumbers/parsePreCandidate.js'\r\nimport isValidPreCandidate from './findNumbers/isValidPreCandidate.js'\r\nimport isValidCandidate, { LEAD_CLASS } from './findNumbers/isValidCandidate.js'\r\n\r\nimport { isSupportedCountry } from './metadata.js'\r\n\r\nimport parsePhoneNumber from './parsePhoneNumber.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nconst EXTN_PATTERNS_FOR_MATCHING = createExtensionPattern('matching')\r\n\r\n/**\r\n * Patterns used to extract phone numbers from a larger phone-number-like pattern. These are\r\n * ordered according to specificity. For example, white-space is last since that is frequently\r\n * used in numbers, not just to separate two numbers. We have separate patterns since we don't\r\n * want to break up the phone-number-like text on more than one different kind of symbol at one\r\n * time, although symbols of the same type (e.g. space) can be safely grouped together.\r\n *\r\n * Note that if there is a match, we will always check any text found up to the first match as\r\n * well.\r\n */\r\nconst INNER_MATCHES =\r\n[\r\n\t// Breaks on the slash - e.g. \"651-234-2345/332-445-1234\"\r\n\t'\\\\/+(.*)/',\r\n\r\n\t// Note that the bracket here is inside the capturing group, since we consider it part of the\r\n\t// phone number. Will match a pattern like \"(650) 223 3345 (754) 223 3321\".\r\n\t'(\\\\([^(]*)',\r\n\r\n\t// Breaks on a hyphen - e.g. \"12345 - 332-445-1234 is my number.\"\r\n\t// We require a space on either side of the hyphen for it to be considered a separator.\r\n\t`(?:${pZ}-|-${pZ})${pZ}*(.+)`,\r\n\r\n\t// Various types of wide hyphens. Note we have decided not to enforce a space here, since it's\r\n\t// possible that it's supposed to be used to break two numbers without spaces, and we haven't\r\n\t// seen many instances of it used within a number.\r\n\t`[\\u2012-\\u2015\\uFF0D]${pZ}*(.+)`,\r\n\r\n\t// Breaks on a full stop - e.g. \"12345. 332-445-1234 is my number.\"\r\n\t`\\\\.+${pZ}*([^.]+)`,\r\n\r\n\t// Breaks on space - e.g. \"3324451234 8002341234\"\r\n\t`${pZ}+(${PZ}+)`\r\n]\r\n\r\n// Limit on the number of leading (plus) characters.\r\nconst leadLimit = limit(0, 2)\r\n\r\n// Limit on the number of consecutive punctuation characters.\r\nconst punctuationLimit = limit(0, 4)\r\n\r\n/* The maximum number of digits allowed in a digit-separated block. As we allow all digits in a\r\n * single block, set high enough to accommodate the entire national number and the international\r\n * country code. */\r\nconst digitBlockLimit = MAX_LENGTH_FOR_NSN + MAX_LENGTH_COUNTRY_CODE\r\n\r\n// Limit on the number of blocks separated by punctuation.\r\n// Uses digitBlockLimit since some formats use spaces to separate each digit.\r\nconst blockLimit = limit(0, digitBlockLimit)\r\n\r\n/* A punctuation sequence allowing white space. */\r\nconst punctuation = `[${VALID_PUNCTUATION}]` + punctuationLimit\r\n\r\n// A digits block without punctuation.\r\nconst digitSequence = pNd + limit(1, digitBlockLimit)\r\n\r\n/**\r\n * Phone number pattern allowing optional punctuation.\r\n * The phone number pattern used by `find()`, similar to\r\n * VALID_PHONE_NUMBER, but with the following differences:\r\n * <ul>\r\n *   <li>All captures are limited in order to place an upper bound to the text matched by the\r\n *       pattern.\r\n * <ul>\r\n *   <li>Leading punctuation / plus signs are limited.\r\n *   <li>Consecutive occurrences of punctuation are limited.\r\n *   <li>Number of digits is limited.\r\n * </ul>\r\n *   <li>No whitespace is allowed at the start or end.\r\n *   <li>No alpha digits (vanity numbers such as 1-800-SIX-FLAGS) are currently supported.\r\n * </ul>\r\n */\r\nconst PATTERN = '(?:' + LEAD_CLASS + punctuation + ')' + leadLimit\r\n\t+ digitSequence + '(?:' + punctuation + digitSequence + ')' + blockLimit\r\n\t+ '(?:' + EXTN_PATTERNS_FOR_MATCHING + ')?'\r\n\r\n// Regular expression of trailing characters that we want to remove.\r\n// We remove all characters that are not alpha or numerical characters.\r\n// The hash character is retained here, as it may signify\r\n// the previous block was an extension.\r\n//\r\n// // Don't know what does '&&' mean here.\r\n// const UNWANTED_END_CHAR_PATTERN = new RegExp(`[[\\\\P{N}&&\\\\P{L}]&&[^#]]+$`)\r\n//\r\nconst UNWANTED_END_CHAR_PATTERN = new RegExp(`[^${_pN}${_pL}#]+$`)\r\n\r\nconst NON_DIGITS_PATTERN = /(\\D+)/\r\n\r\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1\r\n\r\n/**\r\n * A stateful class that finds and extracts telephone numbers from {@linkplain CharSequence text}.\r\n * Instances can be created using the {@linkplain PhoneNumberUtil#findNumbers factory methods} in\r\n * {@link PhoneNumberUtil}.\r\n *\r\n * <p>Vanity numbers (phone numbers using alphabetic digits such as <tt>1-800-SIX-FLAGS</tt> are\r\n * not found.\r\n *\r\n * <p>This class is not thread-safe.\r\n */\r\nexport default class PhoneNumberMatcher\r\n{\r\n  /**\r\n   * @param {string} text — the character sequence that we will search, null for no text.\r\n   * @param {'POSSIBLE'|'VALID'|'STRICT_GROUPING'|'EXACT_GROUPING'} [options.leniency] — The leniency to use when evaluating candidate phone numbers. See `source/findNumbers/Leniency.js` for more details.\r\n   * @param {number} [options.maxTries] — The maximum number of invalid numbers to try before giving up on the text. This is to cover degenerate cases where the text has a lot of false positives in it. Must be >= 0.\r\n   */\r\n  constructor(text = '', options = {}, metadata)\r\n  {\r\n    options = {\r\n      v2: options.v2,\r\n      defaultCallingCode: options.defaultCallingCode,\r\n      defaultCountry: options.defaultCountry && isSupportedCountry(options.defaultCountry, metadata) ? options.defaultCountry : undefined,\r\n      leniency: options.leniency || (options.extended ? 'POSSIBLE' : 'VALID'),\r\n      maxTries: options.maxTries || MAX_SAFE_INTEGER\r\n    }\r\n\r\n    // Validate `leniency`.\r\n\t\tif (!options.leniency) {\r\n\t\t\tthrow new TypeError('`leniency` is required')\r\n\t\t}\r\n    if (options.leniency !== 'POSSIBLE' && options.leniency !== 'VALID') {\r\n      throw new TypeError(`Invalid \\`leniency\\`: \"${options.leniency}\". Supported values: \"POSSIBLE\", \"VALID\".`)\r\n    }\r\n\r\n    // Validate `maxTries`.\r\n\t\tif (options.maxTries < 0) {\r\n\t\t\tthrow new TypeError('`maxTries` must be `>= 0`')\r\n\t\t}\r\n\r\n\t\tthis.text = text\r\n\t\tthis.options = options\r\n    this.metadata = metadata\r\n\r\n\t\t// The degree of phone number validation.\r\n\t\tthis.leniency = Leniency[options.leniency]\r\n\r\n\t\tif (!this.leniency) {\r\n\t\t\tthrow new TypeError(`Unknown leniency: \"${options.leniency}\"`)\r\n\t\t}\r\n\r\n\t\t/** The maximum number of retries after matching an invalid number. */\r\n\t\tthis.maxTries = options.maxTries\r\n\r\n\t\tthis.PATTERN = new RegExp(PATTERN, 'ig')\r\n\r\n    /** The iteration tristate. */\r\n    this.state = 'NOT_READY'\r\n\r\n    /** The next index to start searching at. Undefined in {@link State#DONE}. */\r\n    this.searchIndex = 0\r\n\r\n    // A cache for frequently used country-specific regular expressions. Set to 32 to cover ~2-3\r\n    // countries being used for the same doc with ~10 patterns for each country. Some pages will have\r\n    // a lot more countries in use, but typically fewer numbers for each so expanding the cache for\r\n    // that use-case won't have a lot of benefit.\r\n    this.regExpCache = new RegExpCache(32)\r\n  }\r\n\r\n  /**\r\n   * Attempts to find the next subsequence in the searched sequence on or after {@code searchIndex}\r\n   * that represents a phone number. Returns the next match, null if none was found.\r\n   *\r\n   * @param index  the search index to start searching at\r\n   * @return  the phone number match found, null if none can be found\r\n   */\r\n\tfind() {\r\n\t\t// // Reset the regular expression.\r\n\t\t// this.PATTERN.lastIndex = index\r\n\r\n\t\tlet matches\r\n\t\twhile ((this.maxTries > 0) && (matches = this.PATTERN.exec(this.text)) !== null) {\r\n\t\t\tlet candidate = matches[0]\r\n\t\t\tconst offset = matches.index\r\n\r\n\t\t\tcandidate = parsePreCandidate(candidate)\r\n\r\n\t\t\tif (isValidPreCandidate(candidate, offset, this.text)) {\r\n\t\t\t\tconst match =\r\n\t\t\t\t\t// Try to come up with a valid match given the entire candidate.\r\n\t\t\t\t\tthis.parseAndVerify(candidate, offset, this.text)\r\n\t\t\t\t\t// If that failed, try to find an \"inner match\" -\r\n\t\t\t\t\t// there might be a phone number within this candidate.\r\n\t\t\t\t\t|| this.extractInnerMatch(candidate, offset, this.text)\r\n\r\n\t\t\t\tif (match) {\r\n\t\t\t\t\tif (this.options.v2) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tstartsAt: match.startsAt,\r\n\t\t\t\t\t\t\tendsAt: match.endsAt,\r\n\t\t\t\t\t\t\tnumber: match.phoneNumber\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n            const { phoneNumber } = match\r\n\r\n            const result = {\r\n              startsAt: match.startsAt,\r\n              endsAt: match.endsAt,\r\n              phone: phoneNumber.nationalNumber\r\n            }\r\n\r\n            if (phoneNumber.country) {\r\n              /* istanbul ignore if */\r\n              if (USE_NON_GEOGRAPHIC_COUNTRY_CODE && country === '001') {\r\n                result.countryCallingCode = phoneNumber.countryCallingCode\r\n              } else {\r\n                result.country = phoneNumber.country\r\n              }\r\n            } else {\r\n              result.countryCallingCode = phoneNumber.countryCallingCode\r\n            }\r\n\r\n            if (phoneNumber.ext) {\r\n              result.ext = phoneNumber.ext\r\n            }\r\n\r\n            return result\r\n          }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.maxTries--\r\n\t\t}\r\n\t}\r\n\r\n  /**\r\n   * Attempts to extract a match from `substring`\r\n   * if the substring itself does not qualify as a match.\r\n   */\r\n  extractInnerMatch(substring, offset, text) {\r\n    for (const innerMatchPattern of INNER_MATCHES) {\r\n      let isFirstMatch = true\r\n      let candidateMatch\r\n      const innerMatchRegExp = new RegExp(innerMatchPattern, 'g')\r\n      while (this.maxTries > 0 && (candidateMatch = innerMatchRegExp.exec(substring)) !== null) {\r\n        if (isFirstMatch) {\r\n          // We should handle any group before this one too.\r\n          const candidate = trimAfterFirstMatch(\r\n            UNWANTED_END_CHAR_PATTERN,\r\n            substring.slice(0, candidateMatch.index)\r\n          )\r\n\r\n          const match = this.parseAndVerify(candidate, offset, text)\r\n\r\n          if (match) {\r\n            return match\r\n          }\r\n\r\n          this.maxTries--\r\n          isFirstMatch = false\r\n        }\r\n\r\n        const candidate = trimAfterFirstMatch(UNWANTED_END_CHAR_PATTERN, candidateMatch[1])\r\n\r\n        // Java code does `groupMatcher.start(1)` here,\r\n        // but there's no way in javascript to get a `candidate` start index,\r\n        // therefore resort to using this kind of an approximation.\r\n        // (`groupMatcher` is called `candidateInSubstringMatch` in this javascript port)\r\n        // https://stackoverflow.com/questions/15934353/get-index-of-each-capture-in-a-javascript-regex\r\n        const candidateIndexGuess = substring.indexOf(candidate, candidateMatch.index)\r\n\r\n        const match = this.parseAndVerify(candidate, offset + candidateIndexGuess, text)\r\n        if (match) {\r\n          return match\r\n        }\r\n\r\n        this.maxTries--\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses a phone number from the `candidate` using `parse` and\r\n   * verifies it matches the requested `leniency`. If parsing and verification succeed,\r\n   * a corresponding `PhoneNumberMatch` is returned, otherwise this method returns `null`.\r\n   *\r\n   * @param candidate  the candidate match\r\n   * @param offset  the offset of {@code candidate} within {@link #text}\r\n   * @return  the parsed and validated phone number match, or null\r\n   */\r\n  parseAndVerify(candidate, offset, text) {\r\n    if (!isValidCandidate(candidate, offset, text, this.options.leniency)) {\r\n      return\r\n  \t}\r\n\r\n    const phoneNumber = parsePhoneNumber(\r\n      candidate,\r\n      {\r\n        extended: true,\r\n        defaultCountry: this.options.defaultCountry,\r\n        defaultCallingCode: this.options.defaultCallingCode\r\n      },\r\n      this.metadata\r\n    )\r\n\r\n    if (!phoneNumber) {\r\n      return\r\n    }\r\n\r\n    if (!phoneNumber.isPossible()) {\r\n      return\r\n    }\r\n\r\n    if (this.leniency(phoneNumber, {\r\n      candidate,\r\n      defaultCountry: this.options.defaultCountry,\r\n      metadata: this.metadata,\r\n      regExpCache: this.regExpCache\r\n    })) {\r\n      return {\r\n        startsAt: offset,\r\n        endsAt: offset + candidate.length,\r\n        phoneNumber\r\n      }\r\n    }\r\n  }\r\n\r\n  hasNext()\r\n  {\r\n    if (this.state === 'NOT_READY')\r\n    {\r\n      this.lastMatch = this.find() // (this.searchIndex)\r\n\r\n      if (this.lastMatch)\r\n      {\r\n        // this.searchIndex = this.lastMatch.endsAt\r\n        this.state = 'READY'\r\n      }\r\n      else\r\n      {\r\n        this.state = 'DONE'\r\n      }\r\n    }\r\n\r\n    return this.state === 'READY'\r\n  }\r\n\r\n  next()\r\n  {\r\n    // Check the state and find the next match as a side-effect if necessary.\r\n    if (!this.hasNext())\r\n    {\r\n      throw new Error('No next element')\r\n    }\r\n\r\n    // Don't retain that memory any longer than necessary.\r\n    const result = this.lastMatch\r\n    this.lastMatch = null\r\n    this.state = 'NOT_READY'\r\n    return result\r\n  }\r\n}", "import PhoneNumberMatcher from '../PhoneNumberMatcher.js'\r\nimport normalizeArguments from '../normalizeArguments.js'\r\n\r\nexport default function findNumbers() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\tconst matcher = new PhoneNumberMatcher(text, options, metadata)\r\n\tconst results = []\r\n\twhile (matcher.hasNext()) {\r\n\t\tresults.push(matcher.next())\r\n\t}\r\n\treturn results\r\n}", "import normalizeArguments from '../normalizeArguments.js'\r\nimport PhoneNumberMatcher from '../PhoneNumberMatcher.js'\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport default function searchNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\r\n\tconst matcher = new PhoneNumberMatcher(text, options, metadata)\r\n\r\n\treturn  {\r\n\t\t[Symbol.iterator]() {\r\n\t\t\treturn {\r\n\t    \t\tnext: () => {\r\n\t    \t\t\tif (matcher.hasNext()) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdone: false,\r\n\t\t\t\t\t\t\tvalue: matcher.next()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t}\r\n\t    \t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "import PhoneNumberMatcher from './PhoneNumberMatcher.js'\r\nimport normalizeArguments from './normalizeArguments.js'\r\n\r\nexport default function findPhoneNumbersInText() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\tconst matcher = new PhoneNumberMatcher(text, { ...options, v2: true }, metadata)\r\n\tconst results = []\r\n\twhile (matcher.hasNext()) {\r\n\t\tresults.push(matcher.next())\r\n\t}\r\n\treturn results\r\n}", "import PhoneNumberMatcher from './PhoneNumberMatcher.js'\r\nimport normalizeArguments from './normalizeArguments.js'\r\n\r\nexport default function searchPhoneNumbersInText() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\tconst matcher = new PhoneNumberMatcher(text, { ...options, v2: true }, metadata)\r\n\treturn  {\r\n\t\t[Symbol.iterator]() {\r\n\t\t\treturn {\r\n\t    \t\tnext: () => {\r\n\t    \t\t\tif (matcher.hasNext()) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdone: false,\r\n\t\t\t\t\t\t\tvalue: matcher.next()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t}\r\n\t    \t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}", "// This \"state\" object simply holds the state of the \"AsYouType\" parser:\r\n//\r\n// * `country?: string`\r\n// * `callingCode?: string`\r\n// * `digits: string`\r\n// * `international: boolean`\r\n// * `missingPlus: boolean`\r\n// * `IDDPrefix?: string`\r\n// * `carrierCode?: string`\r\n// * `nationalPrefix?: string`\r\n// * `nationalSignificantNumber?: string`\r\n// * `nationalSignificantNumberMatchesInput: boolean`\r\n// * `complexPrefixBeforeNationalSignificantNumber?: string`\r\n//\r\n// `state.country` and `state.callingCode` aren't required to be in sync.\r\n// For example, `state.country` could be `\"AR\"` and `state.callingCode` could be `undefined`.\r\n// So `state.country` and `state.callingCode` are totally independent.\r\n//\r\nexport default class AsYouTypeState {\r\n\tconstructor({ onCountryChange, onCallingCodeChange }) {\r\n\t\tthis.onCountryChange = onCountryChange\r\n\t\tthis.onCallingCodeChange = onCallingCodeChange\r\n\t}\r\n\r\n\treset({ country, callingCode }) {\r\n\t\tthis.international = false\r\n\t\tthis.missingPlus = false\r\n\t\tthis.IDDPrefix = undefined\r\n\t\tthis.callingCode = undefined\r\n\t\tthis.digits = ''\r\n\t\tthis.resetNationalSignificantNumber()\r\n\t\tthis.initCountryAndCallingCode(country, callingCode)\r\n\t}\r\n\r\n\tresetNationalSignificantNumber() {\r\n\t\tthis.nationalSignificantNumber = this.getNationalDigits()\r\n\t\tthis.nationalSignificantNumberMatchesInput = true\r\n\t\tthis.nationalPrefix = undefined\r\n\t\tthis.carrierCode = undefined\r\n\t\tthis.complexPrefixBeforeNationalSignificantNumber = undefined\r\n\t}\r\n\r\n\tupdate(properties) {\r\n\t\tfor (const key of Object.keys(properties)) {\r\n\t\t\tthis[key] = properties[key]\r\n\t\t}\r\n\t}\r\n\r\n\tinitCountryAndCallingCode(country, callingCode) {\r\n\t\tthis.setCountry(country)\r\n\t\tthis.setCallingCode(callingCode)\r\n\t}\r\n\r\n\tsetCountry(country) {\r\n\t\tthis.country = country\r\n\t\tthis.onCountryChange(country)\r\n\t}\r\n\r\n\tsetCallingCode(callingCode) {\r\n\t\tthis.callingCode = callingCode\r\n\t\tthis.onCallingCodeChange(callingCode, this.country)\r\n\t}\r\n\r\n\tstartInternationalNumber(country, callingCode) {\r\n\t\t// Prepend the `+` to parsed input.\r\n\t\tthis.international = true\r\n\t\t// If a default country was set then reset it\r\n\t\t// because an explicitly international phone\r\n\t\t// number is being entered.\r\n\t\tthis.initCountryAndCallingCode(country, callingCode)\r\n\t}\r\n\r\n\tappendDigits(nextDigits) {\r\n\t\tthis.digits += nextDigits\r\n\t}\r\n\r\n\tappendNationalSignificantNumberDigits(nextDigits) {\r\n\t\tthis.nationalSignificantNumber += nextDigits\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the part of `this.digits` that corresponds to the national number.\r\n\t * Basically, all digits that have been input by the user, except for the\r\n\t * international prefix and the country calling code part\r\n\t * (if the number is an international one).\r\n\t * @return {string}\r\n\t */\r\n\tgetNationalDigits() {\r\n\t\tif (this.international) {\r\n\t\t\treturn this.digits.slice(\r\n\t\t\t\t(this.IDDPrefix ? this.IDDPrefix.length : 0) +\r\n\t\t\t\t(this.callingCode ? this.callingCode.length : 0)\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn this.digits\r\n\t}\r\n\r\n\tgetDigitsWithoutInternationalPrefix() {\r\n\t\tif (this.international) {\r\n\t\t\tif (this.IDDPrefix) {\r\n\t\t\t\treturn this.digits.slice(this.IDDPrefix.length)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.digits\r\n\t}\r\n}", "// Should be the same as `DIGIT_PLACEHOLDER` in `libphonenumber-metadata-generator`.\r\nexport const DIGIT_PLACEHOLDER = 'x' // '\\u2008' (punctuation space)\r\nconst DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER)\r\n\r\n// Counts all occurences of a symbol in a string.\r\n// Unicode-unsafe (because using `.split()`).\r\nexport function countOccurences(symbol, string) {\r\n\tlet count = 0\r\n\t// Using `.split('')` to iterate through a string here\r\n\t// to avoid requiring `Symbol.iterator` polyfill.\r\n\t// `.split('')` is generally not safe for Unicode,\r\n\t// but in this particular case for counting brackets it is safe.\r\n\t// for (const character of string)\r\n\tfor (const character of string.split('')) {\r\n\t\tif (character === symbol) {\r\n\t\t\tcount++\r\n\t\t}\r\n\t}\r\n\treturn count\r\n}\r\n\r\n// Repeats a string (or a symbol) N times.\r\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\r\nexport function repeat(string, times) {\r\n\tif (times < 1) {\r\n\t\treturn ''\r\n\t}\r\n\tlet result = ''\r\n\twhile (times > 1) {\r\n\t\tif (times & 1) {\r\n\t\t\tresult += string\r\n\t\t}\r\n\t\ttimes >>= 1\r\n\t\tstring += string\r\n\t}\r\n\treturn result + string\r\n}\r\n\r\nexport function cutAndStripNonPairedParens(string, cutBeforeIndex) {\r\n\tif (string[cutBeforeIndex] === ')') {\r\n\t\tcutBeforeIndex++\r\n\t}\r\n\treturn stripNonPairedParens(string.slice(0, cutBeforeIndex))\r\n}\r\n\r\nexport function closeNonPairedParens(template, cut_before) {\r\n\tconst retained_template = template.slice(0, cut_before)\r\n\tconst opening_braces = countOccurences('(', retained_template)\r\n\tconst closing_braces = countOccurences(')', retained_template)\r\n\tlet dangling_braces = opening_braces - closing_braces\r\n\twhile (dangling_braces > 0 && cut_before < template.length) {\r\n\t\tif (template[cut_before] === ')') {\r\n\t\t\tdangling_braces--\r\n\t\t}\r\n\t\tcut_before++\r\n\t}\r\n\treturn template.slice(0, cut_before)\r\n}\r\n\r\nexport function stripNonPairedParens(string) {\r\n\tconst dangling_braces =[]\r\n\tlet i = 0\r\n\twhile (i < string.length) {\r\n\t\tif (string[i] === '(') {\r\n\t\t\tdangling_braces.push(i)\r\n\t\t}\r\n\t\telse if (string[i] === ')') {\r\n\t\t\tdangling_braces.pop()\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\tlet start = 0\r\n\tlet cleared_string = ''\r\n\tdangling_braces.push(string.length)\r\n\tfor (const index of dangling_braces) {\r\n\t\tcleared_string += string.slice(start, index)\r\n\t\tstart = index + 1\r\n\t}\r\n\treturn cleared_string\r\n}\r\n\r\nexport function populateTemplateWithDigits(template, position, digits) {\r\n\t// Using `.split('')` to iterate through a string here\r\n\t// to avoid requiring `Symbol.iterator` polyfill.\r\n\t// `.split('')` is generally not safe for Unicode,\r\n\t// but in this particular case for `digits` it is safe.\r\n\t// for (const digit of digits)\r\n\tfor (const digit of digits.split('')) {\r\n\t\t// If there is room for more digits in current `template`,\r\n\t\t// then set the next digit in the `template`,\r\n\t\t// and return the formatted digits so far.\r\n\t\t// If more digits are entered than the current format could handle.\r\n\t\tif (template.slice(position + 1).search(DIGIT_PLACEHOLDER_MATCHER) < 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tposition = template.search(DIGIT_PLACEHOLDER_MATCHER)\r\n\t\ttemplate = template.replace(DIGIT_PLACEHOLDER_MATCHER, digit)\r\n\t}\r\n\treturn [template, position]\r\n}", "import checkNumberLength from './helpers/checkNumberLength.js'\r\nimport parseDigits from './helpers/parseDigits.js'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js'\r\n\r\nexport default function formatCompleteNumber(state, format, {\r\n\tmetadata,\r\n\tshouldTryNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\tconst matcher = new RegExp(`^(?:${format.pattern()})$`)\r\n\tif (matcher.test(state.nationalSignificantNumber)) {\r\n\t\treturn formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(\r\n\t\t\tstate,\r\n\t\t\tformat,\r\n\t\t\t{\r\n\t\t\t\tmetadata,\r\n\t\t\t\tshouldTryNationalPrefixFormattingRule,\r\n\t\t\t\tgetSeparatorAfterNationalPrefix\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport function canFormatCompleteNumber(nationalSignificantNumber, metadata) {\r\n\treturn checkNumberLength(nationalSignificantNumber, metadata) === 'IS_POSSIBLE'\r\n}\r\n\r\nfunction formatNationalNumberWithAndWithoutNationalPrefixFormattingRule(state, format, {\r\n\tmetadata,\r\n\tshouldTryNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\t// `format` has already been checked for `nationalPrefix` requirement.\r\n\r\n\tconst {\r\n\t\tnationalSignificantNumber,\r\n\t\tinternational,\r\n\t\tnationalPrefix,\r\n\t\tcarrierCode\r\n\t} = state\r\n\r\n\t// Format the number with using `national_prefix_formatting_rule`.\r\n\t// If the resulting formatted number is a valid formatted number, then return it.\r\n\t//\r\n\t// Google's AsYouType formatter is different in a way that it doesn't try\r\n\t// to format using the \"national prefix formatting rule\", and instead it\r\n\t// simply prepends a national prefix followed by a \" \" character.\r\n\t// This code does that too, but as a fallback.\r\n\t// The reason is that \"national prefix formatting rule\" may use parentheses,\r\n\t// which wouldn't be included has it used the simpler Google's way.\r\n\t//\r\n\tif (shouldTryNationalPrefixFormattingRule(format)) {\r\n\t\tconst formattedNumber = formatNationalNumber(state, format, {\r\n\t\t\tuseNationalPrefixFormattingRule: true,\r\n\t\t\tgetSeparatorAfterNationalPrefix,\r\n\t\t\tmetadata\r\n\t\t})\r\n\t\tif (formattedNumber) {\r\n\t\t\treturn formattedNumber\r\n\t\t}\r\n\t}\r\n\r\n\t// Format the number without using `national_prefix_formatting_rule`.\r\n\treturn formatNationalNumber(state, format, {\r\n\t\tuseNationalPrefixFormattingRule: false,\r\n\t\tgetSeparatorAfterNationalPrefix,\r\n\t\tmetadata\r\n\t})\r\n}\r\n\r\nfunction formatNationalNumber(state, format, {\r\n\tmetadata,\r\n\tuseNationalPrefixFormattingRule,\r\n\tgetSeparatorAfterNationalPrefix\r\n}) {\r\n\tlet formattedNationalNumber = formatNationalNumberUsingFormat(\r\n\t\tstate.nationalSignificantNumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tcarrierCode: state.carrierCode,\r\n\t\t\tuseInternationalFormat: state.international,\r\n\t\t\twithNationalPrefix: useNationalPrefixFormattingRule,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n\tif (!useNationalPrefixFormattingRule) {\r\n\t\tif (state.nationalPrefix) {\r\n\t\t\t// If a national prefix was extracted, then just prepend it,\r\n\t\t\t// followed by a \" \" character.\r\n\t\t\tformattedNationalNumber = state.nationalPrefix +\r\n\t\t\t\tgetSeparatorAfterNationalPrefix(format) +\r\n\t\t\t\tformattedNationalNumber\r\n\t\t} else if (state.complexPrefixBeforeNationalSignificantNumber) {\r\n\t\t\tformattedNationalNumber = state.complexPrefixBeforeNationalSignificantNumber +\r\n\t\t\t\t' ' +\r\n\t\t\t\tformattedNationalNumber\r\n\t\t}\r\n\t}\r\n\tif (isValidFormattedNationalNumber(formattedNationalNumber, state)) {\r\n\t\treturn formattedNationalNumber\r\n\t}\r\n}\r\n\r\n// Check that the formatted phone number contains exactly\r\n// the same digits that have been input by the user.\r\n// For example, when \"0111523456789\" is input for `AR` country,\r\n// the extracted `this.nationalSignificantNumber` is \"91123456789\",\r\n// which means that the national part of `this.digits` isn't simply equal to\r\n// `this.nationalPrefix` + `this.nationalSignificantNumber`.\r\n//\r\n// Also, a `format` can add extra digits to the `this.nationalSignificantNumber`\r\n// being formatted via `metadata[country].national_prefix_transform_rule`.\r\n// For example, for `VI` country, it prepends `340` to the national number,\r\n// and if this check hasn't been implemented, then there would be a bug\r\n// when `340` \"area coude\" is \"duplicated\" during input for `VI` country:\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/318\r\n//\r\n// So, all these \"gotchas\" are filtered out.\r\n//\r\n// In the original Google's code, the comments say:\r\n// \"Check that we didn't remove nor add any extra digits when we matched\r\n// this formatting pattern. This usually happens after we entered the last\r\n// digit during AYTF. Eg: In case of MX, we swallow mobile token (1) when\r\n// formatted but AYTF should retain all the number entered and not change\r\n// in order to match a format (of same leading digits and length) display\r\n// in that way.\"\r\n// \"If it's the same (i.e entered number and format is same), then it's\r\n// safe to return this in formatted number as nothing is lost / added.\"\r\n// Otherwise, don't use this format.\r\n// https://github.com/google/libphonenumber/commit/3e7c1f04f5e7200f87fb131e6f85c6e99d60f510#diff-9149457fa9f5d608a11bb975c6ef4bc5\r\n// https://github.com/google/libphonenumber/commit/3ac88c7106e7dcb553bcc794b15f19185928a1c6#diff-2dcb77e833422ee304da348b905cde0b\r\n//\r\nfunction isValidFormattedNationalNumber(formattedNationalNumber, state) {\r\n\treturn parseDigits(formattedNationalNumber) === state.getNationalDigits()\r\n}", "export default class PatternParser {\r\n\tparse(pattern) {\r\n\t\tthis.context = [{\r\n\t\t\tor: true,\r\n\t\t\tinstructions: []\r\n\t\t}]\r\n\r\n\t\tthis.parsePattern(pattern)\r\n\r\n\t\tif (this.context.length !== 1) {\r\n\t\t\tthrow new Error('Non-finalized contexts left when pattern parse ended')\r\n\t\t}\r\n\r\n\t\tconst { branches, instructions } = this.context[0]\r\n\r\n\t\tif (branches) {\r\n\t\t\treturn {\r\n\t\t\t\top: '|',\r\n\t\t\t\targs: branches.concat([\r\n\t\t\t\t\texpandSingleElementArray(instructions)\r\n\t\t\t\t])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* istanbul ignore if */\r\n\t\tif (instructions.length === 0) {\r\n\t\t\tthrow new Error('Pattern is required')\r\n\t\t}\r\n\r\n\t\tif (instructions.length === 1) {\r\n\t\t\treturn instructions[0]\r\n\t\t}\r\n\r\n\t\treturn instructions\r\n\t}\r\n\r\n\tstartContext(context) {\r\n\t\tthis.context.push(context)\r\n\t}\r\n\r\n\tendContext() {\r\n\t\tthis.context.pop()\r\n\t}\r\n\r\n\tgetContext() {\r\n\t\treturn this.context[this.context.length - 1]\r\n\t}\r\n\r\n\tparsePattern(pattern) {\r\n\t\tif (!pattern) {\r\n\t\t\tthrow new Error('Pattern is required')\r\n\t\t}\r\n\r\n\t\tconst match = pattern.match(OPERATOR)\r\n\t\tif (!match) {\r\n\t\t\tif (ILLEGAL_CHARACTER_REGEXP.test(pattern)) {\r\n\t\t\t\tthrow new Error(`Illegal characters found in a pattern: ${pattern}`)\r\n\t\t\t}\r\n\t\t\tthis.getContext().instructions = this.getContext().instructions.concat(\r\n\t\t\t\tpattern.split('')\r\n\t\t\t)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst operator = match[1]\r\n\t\tconst before = pattern.slice(0, match.index)\r\n\t\tconst rightPart = pattern.slice(match.index + operator.length)\r\n\r\n\t\tswitch (operator) {\r\n\t\t\tcase '(?:':\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tthis.startContext({\r\n\t\t\t\t\tor: true,\r\n\t\t\t\t\tinstructions: [],\r\n\t\t\t\t\tbranches: []\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase ')':\r\n\t\t\t\tif (!this.getContext().or) {\r\n\t\t\t\t\tthrow new Error('\")\" operator must be preceded by \"(?:\" operator')\r\n\t\t\t\t}\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.getContext().instructions.length === 0) {\r\n\t\t\t\t\tthrow new Error('No instructions found after \"|\" operator in an \"or\" group')\r\n\t\t\t\t}\r\n\t\t\t\tconst { branches } = this.getContext()\r\n\t\t\t\tbranches.push(\r\n\t\t\t\t\texpandSingleElementArray(\r\n\t\t\t\t\t\tthis.getContext().instructions\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t\tthis.endContext()\r\n\t\t\t\tthis.getContext().instructions.push({\r\n\t\t\t\t\top: '|',\r\n\t\t\t\t\targs: branches\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase '|':\r\n\t\t\t\tif (!this.getContext().or) {\r\n\t\t\t\t\tthrow new Error('\"|\" operator can only be used inside \"or\" groups')\r\n\t\t\t\t}\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\t// The top-level is an implicit \"or\" group, if required.\r\n\t\t\t\tif (!this.getContext().branches) {\r\n\t\t\t\t\t// `branches` are not defined only for the root implicit \"or\" operator.\r\n\t\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\t\tif (this.context.length === 1) {\r\n\t\t\t\t\t\tthis.getContext().branches = []\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow new Error('\"branches\" not found in an \"or\" group context')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.getContext().branches.push(\r\n\t\t\t\t\texpandSingleElementArray(\r\n\t\t\t\t\t\tthis.getContext().instructions\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t\tthis.getContext().instructions = []\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase '[':\r\n\t\t\t\tif (before) {\r\n\t\t\t\t\tthis.parsePattern(before)\r\n\t\t\t\t}\r\n\t\t\t\tthis.startContext({\r\n\t\t\t\t\toneOfSet: true\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase ']':\r\n\t\t\t\tif (!this.getContext().oneOfSet) {\r\n\t\t\t\t\tthrow new Error('\"]\" operator must be preceded by \"[\" operator')\r\n\t\t\t\t}\r\n\t\t\t\tthis.endContext()\r\n\t\t\t\tthis.getContext().instructions.push({\r\n\t\t\t\t\top: '[]',\r\n\t\t\t\t\targs: parseOneOfSet(before)\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unknown operator: ${operator}`)\r\n\t\t}\r\n\r\n\t\tif (rightPart) {\r\n\t\t\tthis.parsePattern(rightPart)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction parseOneOfSet(pattern) {\r\n\tconst values = []\r\n\tlet i = 0\r\n\twhile (i < pattern.length) {\r\n\t\tif (pattern[i] === '-') {\r\n\t\t\tif (i === 0 || i === pattern.length - 1) {\r\n\t\t\t\tthrow new Error(`Couldn't parse a one-of set pattern: ${pattern}`)\r\n\t\t\t}\r\n\t\t\tconst prevValue = pattern[i - 1].charCodeAt(0) + 1\r\n\t\t\tconst nextValue = pattern[i + 1].charCodeAt(0) - 1\r\n\t\t\tlet value = prevValue\r\n\t\t\twhile (value <= nextValue) {\r\n\t\t\t\tvalues.push(String.fromCharCode(value))\r\n\t\t\t\tvalue++\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvalues.push(pattern[i])\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn values\r\n}\r\n\r\nconst ILLEGAL_CHARACTER_REGEXP = /[\\(\\)\\[\\]\\?\\:\\|]/\r\n\r\nconst OPERATOR = new RegExp(\r\n\t// any of:\r\n\t'(' +\r\n\t\t// or operator\r\n\t\t'\\\\|' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// or group start\r\n\t\t'\\\\(\\\\?\\\\:' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// or group end\r\n\t\t'\\\\)' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// one-of set start\r\n\t\t'\\\\[' +\r\n\t\t// or\r\n\t\t'|' +\r\n\t\t// one-of set end\r\n\t\t'\\\\]' +\r\n\t')'\r\n)\r\n\r\nfunction expandSingleElementArray(array) {\r\n\tif (array.length === 1) {\r\n\t\treturn array[0]\r\n\t}\r\n\treturn array\r\n}", "import PatternParser from './AsYouTypeFormatter.PatternParser.js'\r\n\r\nexport default class PatternMatcher {\r\n\tconstructor(pattern) {\r\n\t\tthis.matchTree = new PatternParser().parse(pattern)\r\n\t}\r\n\r\n\tmatch(string, { allowOverflow } = {}) {\r\n\t\tif (!string) {\r\n\t\t\tthrow new Error('String is required')\r\n\t\t}\r\n\t\tconst result = match(string.split(''), this.matchTree, true)\r\n\t\tif (result && result.match) {\r\n\t\t\tdelete result.matchedChars\r\n\t\t}\r\n\t\tif (result && result.overflow) {\r\n\t\t\tif (!allowOverflow) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\n/**\r\n * Matches `characters` against a pattern compiled into a `tree`.\r\n * @param  {string[]} characters\r\n * @param  {Tree} tree — A pattern compiled into a `tree`. See the `*.d.ts` file for the description of the `tree` structure.\r\n * @param  {boolean} last — Whether it's the last (rightmost) subtree on its level of the match tree.\r\n * @return {object} See the `*.d.ts` file for the description of the result object.\r\n */\r\nfunction match(characters, tree, last) {\r\n\t// If `tree` is a string, then `tree` is a single character.\r\n\t// That's because when a pattern is parsed, multi-character-string parts\r\n\t// of a pattern are compiled into arrays of single characters.\r\n\t// I still wrote this piece of code for a \"general\" hypothetical case\r\n\t// when `tree` could be a string of several characters, even though\r\n\t// such case is not possible with the current implementation.\r\n\tif (typeof tree === 'string') {\r\n\t\tconst characterString = characters.join('')\r\n\t\tif (tree.indexOf(characterString) === 0) {\r\n\t\t\t// `tree` is always a single character.\r\n\t\t\t// If `tree.indexOf(characterString) === 0`\r\n\t\t\t// then `characters.length === tree.length`.\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (characters.length === tree.length) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tmatch: true,\r\n\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// `tree` is always a single character.\r\n\t\t\t// If `tree.indexOf(characterString) === 0`\r\n\t\t\t// then `characters.length === tree.length`.\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\treturn {\r\n\t\t\t\tpartialMatch: true,\r\n\t\t\t\t// matchedChars: characters\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (characterString.indexOf(tree) === 0) {\r\n\t\t\tif (last) {\r\n\t\t\t\t// The `else` path is not possible because `tree` is always a single character.\r\n\t\t\t\t// The `else` case for `characters.length > tree.length` would be\r\n\t\t\t\t// `characters.length <= tree.length` which means `characters.length <= 1`.\r\n\t\t\t\t// `characters` array can't be empty, so that means `characters === [tree]`,\r\n\t\t\t\t// which would also mean `tree.indexOf(characterString) === 0` and that'd mean\r\n\t\t\t\t// that the `if (tree.indexOf(characterString) === 0)` condition before this\r\n\t\t\t\t// `if` condition would be entered, and returned from there, not reaching this code.\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (characters.length > tree.length) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toverflow: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tmatch: true,\r\n\t\t\t\tmatchedChars: characters.slice(0, tree.length)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\tif (Array.isArray(tree)) {\r\n\t\tlet restCharacters = characters.slice()\r\n\t\tlet i = 0\r\n\t\twhile (i < tree.length) {\r\n\t\t\tconst subtree = tree[i]\r\n\t\t\tconst result = match(restCharacters, subtree, last && (i === tree.length - 1))\r\n\t\t\tif (!result) {\r\n\t\t\t\treturn\r\n\t\t\t} else if (result.overflow) {\r\n\t\t\t\treturn result\r\n\t\t\t} else if (result.match) {\r\n\t\t\t\t// Continue with the next subtree with the rest of the characters.\r\n\t\t\t\trestCharacters = restCharacters.slice(result.matchedChars.length)\r\n\t\t\t\tif (restCharacters.length === 0) {\r\n\t\t\t\t\tif (i === tree.length - 1) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t\t\t// matchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (result.partialMatch) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t\t// matchedChars: characters\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(`Unsupported match result:\\n${JSON.stringify(result, null, 2)}`)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t\t// If `last` then overflow has already been checked\r\n\t\t// by the last element of the `tree` array.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (last) {\r\n\t\t\treturn {\r\n\t\t\t\toverflow: true\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tmatch: true,\r\n\t\t\tmatchedChars: characters.slice(0, characters.length - restCharacters.length)\r\n\t\t}\r\n\t}\r\n\r\n\tswitch (tree.op) {\r\n\t\tcase '|':\r\n\t\t\tlet partialMatch\r\n\t\t\tfor (const branch of tree.args) {\r\n\t\t\t\tconst result = match(characters, branch, last)\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\tif (result.overflow) {\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t} else if (result.match) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: result.matchedChars\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\t\t\tif (result.partialMatch) {\r\n\t\t\t\t\t\t\tpartialMatch = true\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow new Error(`Unsupported match result:\\n${JSON.stringify(result, null, 2)}`)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (partialMatch) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpartialMatch: true,\r\n\t\t\t\t\t// matchedChars: ...\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Not even a partial match.\r\n\t\t\treturn\r\n\r\n\t\tcase '[]':\r\n\t\t\tfor (const char of tree.args) {\r\n\t\t\t\tif (characters[0] === char) {\r\n\t\t\t\t\tif (characters.length === 1) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\t\tmatchedChars: characters\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (last) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\toverflow: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tmatch: true,\r\n\t\t\t\t\t\tmatchedChars: [char]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// No character matches.\r\n\t\t\treturn\r\n\r\n\t\t/* istanbul ignore next */\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unsupported instruction tree: ${tree}`)\r\n\t}\r\n}", "import {\r\n\tDIGIT_PLACEHOLDER,\r\n\tcountOccurences,\r\n\trepeat,\r\n\tcutAndStripNonPairedParens,\r\n\tcloseNonPairedParens,\r\n\tstripNonPairedParens,\r\n\tpopulateTemplateWithDigits\r\n} from './AsYouTypeFormatter.util.js'\r\n\r\nimport formatCompleteNumber, {\r\n\tcanFormatCompleteNumber\r\n} from './AsYouTypeFormatter.complete.js'\r\n\r\nimport PatternMatcher from './AsYouTypeFormatter.PatternMatcher.js'\r\n\r\nimport parseDigits from './helpers/parseDigits.js'\r\nexport { DIGIT_PLACEHOLDER } from './AsYouTypeFormatter.util.js'\r\nimport { FIRST_GROUP_PATTERN } from './helpers/formatNationalNumberUsingFormat.js'\r\nimport { VALID_PUNCTUATION } from './constants.js'\r\nimport applyInternationalSeparatorStyle from './helpers/applyInternationalSeparatorStyle.js'\r\n\r\n// Used in phone number format template creation.\r\n// Could be any digit, I guess.\r\nconst DUMMY_DIGIT = '9'\r\n// I don't know why is it exactly `15`\r\nconst LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15\r\n// Create a phone number consisting only of the digit 9 that matches the\r\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\r\nconst LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH)\r\n\r\n// A set of characters that, if found in a national prefix formatting rules, are an indicator to\r\n// us that we should separate the national prefix from the number when formatting.\r\nconst NATIONAL_PREFIX_SEPARATORS_PATTERN = /[- ]/\r\n\r\n// Deprecated: Google has removed some formatting pattern related code from their repo.\r\n// https://github.com/googlei18n/libphonenumber/commit/a395b4fef3caf57c4bc5f082e1152a4d2bd0ba4c\r\n// \"We no longer have numbers in formatting matching patterns, only \\d.\"\r\n// Because this library supports generating custom metadata\r\n// some users may still be using old metadata so the relevant\r\n// code seems to stay until some next major version update.\r\nconst SUPPORT_LEGACY_FORMATTING_PATTERNS = true\r\n\r\n// A pattern that is used to match character classes in regular expressions.\r\n// An example of a character class is \"[1-4]\".\r\nconst CREATE_CHARACTER_CLASS_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && (() => /\\[([^\\[\\]])*\\]/g)\r\n\r\n// Any digit in a regular expression that actually denotes a digit. For\r\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\r\n// (8 and 0) are standalone digits, but the rest are not.\r\n// Two look-aheads are needed because the number following \\\\d could be a\r\n// two-digit number, since the phone number can be as long as 15 digits.\r\nconst CREATE_STANDALONE_DIGIT_PATTERN = SUPPORT_LEGACY_FORMATTING_PATTERNS && (() => /\\d(?=[^,}][^,}])/g)\r\n\r\n// A regular expression that is used to determine if a `format` is\r\n// suitable to be used in the \"as you type formatter\".\r\n// A `format` is suitable when the resulting formatted number has\r\n// the same digits as the user has entered.\r\n//\r\n// In the simplest case, that would mean that the format\r\n// doesn't add any additional digits when formatting a number.\r\n// Google says that it also shouldn't add \"star\" (`*`) characters,\r\n// like it does in some Israeli formats.\r\n// Such basic format would only contain \"valid punctuation\"\r\n// and \"captured group\" identifiers ($1, $2, etc).\r\n//\r\n// An example of a format that adds additional digits:\r\n//\r\n// Country: `AR` (Argentina).\r\n// Format:\r\n// {\r\n//    \"pattern\": \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\r\n//    \"leading_digits_patterns\": [\"91\"],\r\n//    \"national_prefix_formatting_rule\": \"0$1\",\r\n//    \"format\": \"$2 15-$3-$4\",\r\n//    \"international_format\": \"$1 $2 $3-$4\"\r\n// }\r\n//\r\n// In the format above, the `format` adds `15` to the digits when formatting a number.\r\n// A sidenote: this format actually is suitable because `national_prefix_for_parsing`\r\n// has previously removed `15` from a national number, so re-adding `15` in `format`\r\n// doesn't actually result in any extra digits added to user's input.\r\n// But verifying that would be a complex procedure, so the code chooses a simpler path:\r\n// it simply filters out all `format`s that contain anything but \"captured group\" ids.\r\n//\r\n// This regular expression is called `ELIGIBLE_FORMAT_PATTERN` in Google's\r\n// `libphonenumber` code.\r\n//\r\nconst NON_ALTERING_FORMAT_REG_EXP = new RegExp(\r\n\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t// Google developers say:\r\n\t// \"We require that the first matching group is present in the\r\n\t//  output pattern to ensure no data is lost while formatting.\"\r\n\t'\\\\$1' +\r\n\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t'(\\\\$\\\\d[' + VALID_PUNCTUATION + ']*)*' +\r\n\t'$'\r\n)\r\n\r\n// This is the minimum length of the leading digits of a phone number\r\n// to guarantee the first \"leading digits pattern\" for a phone number format\r\n// to be preemptive.\r\nconst MIN_LEADING_DIGITS_LENGTH = 3\r\n\r\nexport default class AsYouTypeFormatter {\r\n\tconstructor({\r\n\t\tstate,\r\n\t\tmetadata\r\n\t}) {\r\n\t\tthis.metadata = metadata\r\n\t\tthis.resetFormat()\r\n\t}\r\n\r\n\tresetFormat() {\r\n\t\tthis.chosenFormat = undefined\r\n\t\tthis.template = undefined\r\n\t\tthis.nationalNumberTemplate = undefined\r\n\t\tthis.populatedNationalNumberTemplate = undefined\r\n\t\tthis.populatedNationalNumberTemplatePosition = -1\r\n\t}\r\n\r\n\treset(numberingPlan, state) {\r\n\t\tthis.resetFormat()\r\n\t\tif (numberingPlan) {\r\n\t\t\tthis.isNANP = numberingPlan.callingCode() === '1'\r\n\t\t\tthis.matchingFormats = numberingPlan.formats()\r\n\t\t\tif (state.nationalSignificantNumber) {\r\n\t\t\t\tthis.narrowDownMatchingFormats(state)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.isNANP = undefined\r\n\t\t\tthis.matchingFormats = []\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Formats an updated phone number.\r\n\t * @param  {string} nextDigits — Additional phone number digits.\r\n\t * @param  {object} state — `AsYouType` state.\r\n\t * @return {[string]} Returns undefined if the updated phone number can't be formatted using any of the available formats.\r\n\t */\r\n\tformat(nextDigits, state) {\r\n\t\t// See if the phone number digits can be formatted as a complete phone number.\r\n\t\t// If not, use the results from `formatNationalNumberWithNextDigits()`,\r\n\t\t// which formats based on the chosen formatting pattern.\r\n\t\t//\r\n\t\t// Attempting to format complete phone number first is how it's done\r\n\t\t// in Google's `libphonenumber`, so this library just follows it.\r\n\t\t// Google's `libphonenumber` code doesn't explain in detail why does it\r\n\t\t// attempt to format digits as a complete phone number\r\n\t\t// instead of just going with a previoulsy (or newly) chosen `format`:\r\n\t\t//\r\n\t\t// \"Checks to see if there is an exact pattern match for these digits.\r\n\t\t//  If so, we should use this instead of any other formatting template\r\n\t\t//  whose leadingDigitsPattern also matches the input.\"\r\n\t\t//\r\n\t\tif (canFormatCompleteNumber(state.nationalSignificantNumber, this.metadata)) {\r\n\t\t\tfor (const format of this.matchingFormats) {\r\n\t\t\t\tconst formattedCompleteNumber = formatCompleteNumber(\r\n\t\t\t\t\tstate,\r\n\t\t\t\t\tformat,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmetadata: this.metadata,\r\n\t\t\t\t\t\tshouldTryNationalPrefixFormattingRule: (format) => this.shouldTryNationalPrefixFormattingRule(format, {\r\n\t\t\t\t\t\t\tinternational: state.international,\r\n\t\t\t\t\t\t\tnationalPrefix: state.nationalPrefix\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tgetSeparatorAfterNationalPrefix: (format) => this.getSeparatorAfterNationalPrefix(format)\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\tif (formattedCompleteNumber) {\r\n\t\t\t\t\tthis.resetFormat()\r\n\t\t\t\t\tthis.chosenFormat = format\r\n\t\t\t\t\tthis.setNationalNumberTemplate(formattedCompleteNumber.replace(/\\d/g, DIGIT_PLACEHOLDER), state)\r\n\t\t\t\t\tthis.populatedNationalNumberTemplate = formattedCompleteNumber\r\n\t\t\t\t\t// With a new formatting template, the matched position\r\n\t\t\t\t\t// using the old template needs to be reset.\r\n\t\t\t\t\tthis.populatedNationalNumberTemplatePosition = this.template.lastIndexOf(DIGIT_PLACEHOLDER)\r\n\t\t\t\t\treturn formattedCompleteNumber\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Format the digits as a partial (incomplete) phone number\r\n\t\t// using the previously chosen formatting pattern (or a newly chosen one).\r\n\t\treturn this.formatNationalNumberWithNextDigits(nextDigits, state)\r\n\t}\r\n\r\n\t// Formats the next phone number digits.\r\n\tformatNationalNumberWithNextDigits(nextDigits, state) {\r\n\t\tconst previouslyChosenFormat = this.chosenFormat\r\n\r\n\t\t// Choose a format from the list of matching ones.\r\n\t\tconst newlyChosenFormat = this.chooseFormat(state)\r\n\r\n\t\tif (newlyChosenFormat) {\r\n\t\t\tif (newlyChosenFormat === previouslyChosenFormat) {\r\n\t\t\t\t// If it can format the next (current) digits\r\n\t\t\t\t// using the previously chosen phone number format\r\n\t\t\t\t// then return the updated formatted number.\r\n\t\t\t\treturn this.formatNextNationalNumberDigits(nextDigits)\r\n\t\t\t} else {\r\n\t\t\t\t// If a more appropriate phone number format\r\n\t\t\t\t// has been chosen for these \"leading digits\",\r\n\t\t\t\t// then re-format the national phone number part\r\n\t\t\t\t// using the newly selected format.\r\n\t\t\t\treturn this.formatNextNationalNumberDigits(state.getNationalDigits())\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tnarrowDownMatchingFormats({\r\n\t\tnationalSignificantNumber,\r\n\t\tnationalPrefix,\r\n\t\tinternational\r\n\t}) {\r\n\t\tconst leadingDigits = nationalSignificantNumber\r\n\r\n\t\t// \"leading digits\" pattern list starts with a\r\n\t\t// \"leading digits\" pattern fitting a maximum of 3 leading digits.\r\n\t\t// So, after a user inputs 3 digits of a national (significant) phone number\r\n\t\t// this national (significant) number can already be formatted.\r\n\t\t// The next \"leading digits\" pattern is for 4 leading digits max,\r\n\t\t// and the \"leading digits\" pattern after it is for 5 leading digits max, etc.\r\n\r\n\t\t// This implementation is different from Google's\r\n\t\t// in that it searches for a fitting format\r\n\t\t// even if the user has entered less than\r\n\t\t// `MIN_LEADING_DIGITS_LENGTH` digits of a national number.\r\n\t\t// Because some leading digit patterns already match for a single first digit.\r\n\t\tlet leadingDigitsPatternIndex = leadingDigits.length - MIN_LEADING_DIGITS_LENGTH\r\n\t\tif (leadingDigitsPatternIndex < 0) {\r\n\t\t\tleadingDigitsPatternIndex = 0\r\n\t\t}\r\n\r\n\t\tthis.matchingFormats = this.matchingFormats.filter(\r\n\t\t\tformat => this.formatSuits(format, international, nationalPrefix)\r\n\t\t\t\t&& this.formatMatches(format, leadingDigits, leadingDigitsPatternIndex)\r\n\t\t)\r\n\r\n\t\t// If there was a phone number format chosen\r\n\t\t// and it no longer holds given the new leading digits then reset it.\r\n\t\t// The test for this `if` condition is marked as:\r\n\t\t// \"Reset a chosen format when it no longer holds given the new leading digits\".\r\n\t\t// To construct a valid test case for this one can find a country\r\n\t\t// in `PhoneNumberMetadata.xml` yielding one format for 3 `<leadingDigits>`\r\n\t\t// and yielding another format for 4 `<leadingDigits>` (Australia in this case).\r\n\t\tif (this.chosenFormat && this.matchingFormats.indexOf(this.chosenFormat) === -1) {\r\n\t\t\tthis.resetFormat()\r\n\t\t}\r\n\t}\r\n\r\n\tformatSuits(format, international, nationalPrefix) {\r\n\t\t// When a prefix before a national (significant) number is\r\n\t\t// simply a national prefix, then it's parsed as `this.nationalPrefix`.\r\n\t\t// In more complex cases, a prefix before national (significant) number\r\n\t\t// could include a national prefix as well as some \"capturing groups\",\r\n\t\t// and in that case there's no info whether a national prefix has been parsed.\r\n\t\t// If national prefix is not used when formatting a phone number\r\n\t\t// using this format, but a national prefix has been entered by the user,\r\n\t\t// and was extracted, then discard such phone number format.\r\n\t\t// In Google's \"AsYouType\" formatter code, the equivalent would be this part:\r\n\t\t// https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L175-L184\r\n\t\tif (nationalPrefix &&\r\n\t\t\t!format.usesNationalPrefix() &&\r\n\t\t\t// !format.domesticCarrierCodeFormattingRule() &&\r\n\t\t\t!format.nationalPrefixIsOptionalWhenFormattingInNationalFormat()) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// If national prefix is mandatory for this phone number format\r\n\t\t// and there're no guarantees that a national prefix is present in user input\r\n\t\t// then discard this phone number format as not suitable.\r\n\t\t// In Google's \"AsYouType\" formatter code, the equivalent would be this part:\r\n\t\t// https://github.com/google/libphonenumber/blob/0a45cfd96e71cad8edb0e162a70fcc8bd9728933/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L185-L193\r\n\t\tif (!international &&\r\n\t\t\t!nationalPrefix &&\r\n\t\t\tformat.nationalPrefixIsMandatoryWhenFormattingInNationalFormat()) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n\r\n\tformatMatches(format, leadingDigits, leadingDigitsPatternIndex) {\r\n\t\tconst leadingDigitsPatternsCount = format.leadingDigitsPatterns().length\r\n\r\n\t\t// If this format is not restricted to a certain\r\n\t\t// leading digits pattern then it fits.\r\n\t\t// The test case could be found by searching for \"leadingDigitsPatternsCount === 0\".\r\n\t\tif (leadingDigitsPatternsCount === 0) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\t// Start narrowing down the list of possible formats based on the leading digits.\r\n\t\t// (only previously matched formats take part in the narrowing down process)\r\n\r\n\t\t// `leading_digits_patterns` start with 3 digits min\r\n\t\t// and then go up from there one digit at a time.\r\n\t\tleadingDigitsPatternIndex = Math.min(leadingDigitsPatternIndex, leadingDigitsPatternsCount - 1)\r\n\t\tconst leadingDigitsPattern = format.leadingDigitsPatterns()[leadingDigitsPatternIndex]\r\n\r\n\t\t// Google imposes a requirement on the leading digits\r\n\t\t// to be minimum 3 digits long in order to be eligible\r\n\t\t// for checking those with a leading digits pattern.\r\n\t\t//\r\n\t\t// Since `leading_digits_patterns` start with 3 digits min,\r\n\t\t// Google's original `libphonenumber` library only starts\r\n\t\t// excluding any non-matching formats only when the\r\n\t\t// national number entered so far is at least 3 digits long,\r\n\t\t// otherwise format matching would give false negatives.\r\n\t\t//\r\n\t\t// For example, when the digits entered so far are `2`\r\n\t\t// and the leading digits pattern is `21` –\r\n\t\t// it's quite obvious in this case that the format could be the one\r\n\t\t// but due to the absence of further digits it would give false negative.\r\n\t\t//\r\n\t\t// Also, `leading_digits_patterns` doesn't always correspond to a single\r\n\t\t// digits count. For example, `60|8` pattern would already match `8`\r\n\t\t// but the `60` part would require having at least two leading digits,\r\n\t\t// so the whole pattern would require inputting two digits first in order to\r\n\t\t// decide on whether it matches the input, even when the input is \"80\".\r\n\t\t//\r\n\t\t// This library — `libphonenumber-js` — allows filtering by `leading_digits_patterns`\r\n\t\t// even when there's only 1 or 2 digits of the national (significant) number.\r\n\t\t// To do that, it uses a non-strict pattern matcher written specifically for that.\r\n\t\t//\r\n\t\tif (leadingDigits.length < MIN_LEADING_DIGITS_LENGTH) {\r\n\t\t\t// Before leading digits < 3 matching was implemented:\r\n\t\t\t// return true\r\n\t\t\t//\r\n\t\t\t// After leading digits < 3 matching was implemented:\r\n\t\t\ttry {\r\n\t\t\t\treturn new PatternMatcher(leadingDigitsPattern).match(leadingDigits, { allowOverflow: true }) !== undefined\r\n\t\t\t} catch (error) /* istanbul ignore next */ {\r\n\t\t\t\t// There's a slight possibility that there could be some undiscovered bug\r\n\t\t\t\t// in the pattern matcher code. Since the \"leading digits < 3 matching\"\r\n\t\t\t\t// feature is not \"essential\" for operation, it can fall back to the old way\r\n\t\t\t\t// in case of any issues rather than halting the application's execution.\r\n\t\t\t\tconsole.error(error)\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If at least `MIN_LEADING_DIGITS_LENGTH` digits of a national number are\r\n\t\t// available then use the usual regular expression matching.\r\n\t\t//\r\n\t\t// The whole pattern is wrapped in round brackets (`()`) because\r\n\t\t// the pattern can use \"or\" operator (`|`) at the top level of the pattern.\r\n\t\t//\r\n\t\treturn new RegExp(`^(${leadingDigitsPattern})`).test(leadingDigits)\r\n\t}\r\n\r\n\tgetFormatFormat(format, international) {\r\n\t\treturn international ? format.internationalFormat() : format.format()\r\n\t}\r\n\r\n\tchooseFormat(state) {\r\n\t\t// When there are multiple available formats, the formatter uses the first\r\n\t\t// format where a formatting template could be created.\r\n\t\t//\r\n\t\t// For some weird reason, `istanbul` says \"else path not taken\"\r\n\t\t// for the `for of` line below. Supposedly that means that\r\n\t\t// the loop doesn't ever go over the last element in the list.\r\n\t\t// That's true because there always is `this.chosenFormat`\r\n\t\t// when `this.matchingFormats` is non-empty.\r\n\t\t// And, for some weird reason, it doesn't think that the case\r\n\t\t// with empty `this.matchingFormats` qualifies for a valid \"else\" path.\r\n\t\t// So simply muting this `istanbul` warning.\r\n\t\t// It doesn't skip the contents of the `for of` loop,\r\n\t\t// it just skips the `for of` line.\r\n\t\t//\r\n\t\t/* istanbul ignore next */\r\n\t\tfor (const format of this.matchingFormats.slice()) {\r\n\t\t\t// If this format is currently being used\r\n\t\t\t// and is still suitable, then stick to it.\r\n\t\t\tif (this.chosenFormat === format) {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\t// Sometimes, a formatting rule inserts additional digits in a phone number,\r\n\t\t\t// and \"as you type\" formatter can't do that: it should only use the digits\r\n\t\t\t// that the user has input.\r\n\t\t\t//\r\n\t\t\t// For example, in Argentina, there's a format for mobile phone numbers:\r\n\t\t\t//\r\n\t\t\t// {\r\n\t\t\t//    \"pattern\": \"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\r\n\t\t\t//    \"leading_digits_patterns\": [\"91\"],\r\n\t\t\t//    \"national_prefix_formatting_rule\": \"0$1\",\r\n\t\t\t//    \"format\": \"$2 15-$3-$4\",\r\n\t\t\t//    \"international_format\": \"$1 $2 $3-$4\"\r\n\t\t\t// }\r\n\t\t\t//\r\n\t\t\t// In that format, `international_format` is used instead of `format`\r\n\t\t\t// because `format` inserts `15` in the formatted number,\r\n\t\t\t// and `AsYouType` formatter should only use the digits\r\n\t\t\t// the user has actually input, without adding any extra digits.\r\n\t\t\t// In this case, it wouldn't make a difference, because the `15`\r\n\t\t\t// is first stripped when applying `national_prefix_for_parsing`\r\n\t\t\t// and then re-added when using `format`, so in reality it doesn't\r\n\t\t\t// add any new digits to the number, but to detect that, the code\r\n\t\t\t// would have to be more complex: it would have to try formatting\r\n\t\t\t// the digits using the format and then see if any digits have\r\n\t\t\t// actually been added or removed, and then, every time a new digit\r\n\t\t\t// is input, it should re-check whether the chosen format doesn't\r\n\t\t\t// alter the digits.\r\n\t\t\t//\r\n\t\t\t// Google's code doesn't go that far, and so does this library:\r\n\t\t\t// it simply requires that a `format` doesn't add any additonal\r\n\t\t\t// digits to user's input.\r\n\t\t\t//\r\n\t\t\t// Also, people in general should move from inputting phone numbers\r\n\t\t\t// in national format (possibly with national prefixes)\r\n\t\t\t// and use international phone number format instead:\r\n\t\t\t// it's a logical thing in the modern age of mobile phones,\r\n\t\t\t// globalization and the internet.\r\n\t\t\t//\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (!NON_ALTERING_FORMAT_REG_EXP.test(this.getFormatFormat(format, state.international))) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tif (!this.createTemplateForFormat(format, state)) {\r\n\t\t\t\t// Remove the format if it can't generate a template.\r\n\t\t\t\tthis.matchingFormats = this.matchingFormats.filter(_ => _ !== format)\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.chosenFormat = format\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tif (!this.chosenFormat) {\r\n\t\t\t// No format matches the national (significant) phone number.\r\n\t\t\tthis.resetFormat()\r\n\t\t}\r\n\t\treturn this.chosenFormat\r\n\t}\r\n\r\n\tcreateTemplateForFormat(format, state) {\r\n\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\r\n\t\t// (20|3)\\d{4}. In those cases we quickly return.\r\n\t\t// (Though there's no such format in current metadata)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (SUPPORT_LEGACY_FORMATTING_PATTERNS && format.pattern().indexOf('|') >= 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Get formatting template for this phone number format\r\n\t\tconst template = this.getTemplateForFormat(format, state)\r\n\t\t// If the national number entered is too long\r\n\t\t// for any phone number format, then abort.\r\n\t\tif (template) {\r\n\t\t\tthis.setNationalNumberTemplate(template, state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tgetSeparatorAfterNationalPrefix(format) {\r\n\t\t// `US` metadata doesn't have a `national_prefix_formatting_rule`,\r\n\t\t// so the `if` condition below doesn't apply to `US`,\r\n\t\t// but in reality there shoudl be a separator\r\n\t\t// between a national prefix and a national (significant) number.\r\n\t\t// So `US` national prefix separator is a \"special\" \"hardcoded\" case.\r\n\t\tif (this.isNANP) {\r\n\t\t\treturn ' '\r\n\t\t}\r\n\t\t// If a `format` has a `national_prefix_formatting_rule`\r\n\t\t// and that rule has a separator after a national prefix,\r\n\t\t// then it means that there should be a separator\r\n\t\t// between a national prefix and a national (significant) number.\r\n\t\tif (format &&\r\n\t\t\tformat.nationalPrefixFormattingRule() &&\r\n\t\t\tNATIONAL_PREFIX_SEPARATORS_PATTERN.test(format.nationalPrefixFormattingRule())) {\r\n\t\t\treturn ' '\r\n\t\t}\r\n\t\t// At this point, there seems to be no clear evidence that\r\n\t\t// there should be a separator between a national prefix\r\n\t\t// and a national (significant) number. So don't insert one.\r\n\t\treturn ''\r\n\t}\r\n\r\n\tgetInternationalPrefixBeforeCountryCallingCode({ IDDPrefix, missingPlus }, options) {\r\n\t\tif (IDDPrefix) {\r\n\t\t\treturn options && options.spacing === false ? IDDPrefix : IDDPrefix + ' '\r\n\t\t}\r\n\t\tif (missingPlus) {\r\n\t\t\treturn ''\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\r\n\tgetTemplate(state) {\r\n\t\tif (!this.template) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// `this.template` holds the template for a \"complete\" phone number.\r\n\t\t// The currently entered phone number is most likely not \"complete\",\r\n\t\t// so trim all non-populated digits.\r\n\t\tlet index = -1\r\n\t\tlet i = 0\r\n\t\tconst internationalPrefix = state.international ? this.getInternationalPrefixBeforeCountryCallingCode(state, { spacing: false }) : ''\r\n\t\twhile (i < internationalPrefix.length + state.getDigitsWithoutInternationalPrefix().length) {\r\n\t\t\tindex = this.template.indexOf(DIGIT_PLACEHOLDER, index + 1)\r\n\t\t\ti++\r\n\t\t}\r\n\t\treturn cutAndStripNonPairedParens(this.template, index + 1)\r\n\t}\r\n\r\n\tsetNationalNumberTemplate(template, state) {\r\n\t\tthis.nationalNumberTemplate = template\r\n\t\tthis.populatedNationalNumberTemplate = template\r\n\t\t// With a new formatting template, the matched position\r\n\t\t// using the old template needs to be reset.\r\n\t\tthis.populatedNationalNumberTemplatePosition = -1\r\n\t\t// For convenience, the public `.template` property\r\n\t\t// contains the whole international number\r\n\t\t// if the phone number being input is international:\r\n\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\r\n\t\t// a spacebar and then the template for the formatted national number.\r\n\t\tif (state.international) {\r\n\t\t\tthis.template =\r\n\t\t\t\tthis.getInternationalPrefixBeforeCountryCallingCode(state).replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER) +\r\n\t\t\t\trepeat(DIGIT_PLACEHOLDER, state.callingCode.length) +\r\n\t\t\t\t' ' +\r\n\t\t\t\ttemplate\r\n\t\t} else {\r\n\t\t\tthis.template = template\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generates formatting template for a national phone number,\r\n\t * optionally containing a national prefix, for a format.\r\n\t * @param  {Format} format\r\n\t * @param  {string} nationalPrefix\r\n\t * @return {string}\r\n\t */\r\n\tgetTemplateForFormat(format, {\r\n\t\tnationalSignificantNumber,\r\n\t\tinternational,\r\n\t\tnationalPrefix,\r\n\t\tcomplexPrefixBeforeNationalSignificantNumber\r\n\t}) {\r\n\t\tlet pattern = format.pattern()\r\n\r\n\t\t/* istanbul ignore else */\r\n\t\tif (SUPPORT_LEGACY_FORMATTING_PATTERNS) {\r\n\t\t\tpattern = pattern\r\n\t\t\t\t// Replace anything in the form of [..] with \\d\r\n\t\t\t\t.replace(CREATE_CHARACTER_CLASS_PATTERN(), '\\\\d')\r\n\t\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\r\n\t\t\t\t.replace(CREATE_STANDALONE_DIGIT_PATTERN(), '\\\\d')\r\n\t\t}\r\n\r\n\t\t// Generate a dummy national number (consisting of `9`s)\r\n\t\t// that fits this format's `pattern`.\r\n\t\t//\r\n\t\t// This match will always succeed,\r\n\t\t// because the \"longest dummy phone number\"\r\n\t\t// has enough length to accomodate any possible\r\n\t\t// national phone number format pattern.\r\n\t\t//\r\n\t\tlet digits = LONGEST_DUMMY_PHONE_NUMBER.match(pattern)[0]\r\n\r\n\t\t// If the national number entered is too long\r\n\t\t// for any phone number format, then abort.\r\n\t\tif (nationalSignificantNumber.length > digits.length) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Get a formatting template which can be used to efficiently format\r\n\t\t// a partial number where digits are added one by one.\r\n\r\n\t\t// Below `strictPattern` is used for the\r\n\t\t// regular expression (with `^` and `$`).\r\n\t\t// This wasn't originally in Google's `libphonenumber`\r\n\t\t// and I guess they don't really need it\r\n\t\t// because they're not using \"templates\" to format phone numbers\r\n\t\t// but I added `strictPattern` after encountering\r\n\t\t// South Korean phone number formatting bug.\r\n\t\t//\r\n\t\t// Non-strict regular expression bug demonstration:\r\n\t\t//\r\n\t\t// this.nationalSignificantNumber : `111111111` (9 digits)\r\n\t\t//\r\n\t\t// pattern : (\\d{2})(\\d{3,4})(\\d{4})\r\n\t\t// format : `$1 $2 $3`\r\n\t\t// digits : `9999999999` (10 digits)\r\n\t\t//\r\n\t\t// '9999999999'.replace(new RegExp(/(\\d{2})(\\d{3,4})(\\d{4})/g), '$1 $2 $3') = \"99 9999 9999\"\r\n\t\t//\r\n\t\t// template : xx xxxx xxxx\r\n\t\t//\r\n\t\t// But the correct template in this case is `xx xxx xxxx`.\r\n\t\t// The template was generated incorrectly because of the\r\n\t\t// `{3,4}` variability in the `pattern`.\r\n\t\t//\r\n\t\t// The fix is, if `this.nationalSignificantNumber` has already sufficient length\r\n\t\t// to satisfy the `pattern` completely then `this.nationalSignificantNumber`\r\n\t\t// is used instead of `digits`.\r\n\r\n\t\tconst strictPattern = new RegExp('^' + pattern + '$')\r\n\t\tconst nationalNumberDummyDigits = nationalSignificantNumber.replace(/\\d/g, DUMMY_DIGIT)\r\n\r\n\t\t// If `this.nationalSignificantNumber` has already sufficient length\r\n\t\t// to satisfy the `pattern` completely then use it\r\n\t\t// instead of `digits`.\r\n\t\tif (strictPattern.test(nationalNumberDummyDigits)) {\r\n\t\t\tdigits = nationalNumberDummyDigits\r\n\t\t}\r\n\r\n\t\tlet numberFormat = this.getFormatFormat(format, international)\r\n\t\tlet nationalPrefixIncludedInTemplate\r\n\r\n\t\t// If a user did input a national prefix (and that's guaranteed),\r\n\t\t// and if a `format` does have a national prefix formatting rule,\r\n\t\t// then see if that national prefix formatting rule\r\n\t\t// prepends exactly the same national prefix the user has input.\r\n\t\t// If that's the case, then use the `format` with the national prefix formatting rule.\r\n\t\t// Otherwise, use  the `format` without the national prefix formatting rule,\r\n\t\t// and prepend a national prefix manually to it.\r\n\t\tif (this.shouldTryNationalPrefixFormattingRule(format, { international, nationalPrefix })) {\r\n\t\t\tconst numberFormatWithNationalPrefix = numberFormat.replace(\r\n\t\t\t\tFIRST_GROUP_PATTERN,\r\n\t\t\t\tformat.nationalPrefixFormattingRule()\r\n\t\t\t)\r\n\t\t\t// If `national_prefix_formatting_rule` of a `format` simply prepends\r\n\t\t\t// national prefix at the start of a national (significant) number,\r\n\t\t\t// then such formatting can be used with `AsYouType` formatter.\r\n\t\t\t// There seems to be no `else` case: everywhere in metadata,\r\n\t\t\t// national prefix formatting rule is national prefix + $1,\r\n\t\t\t// or `($1)`, in which case such format isn't even considered\r\n\t\t\t// when the user has input a national prefix.\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (parseDigits(format.nationalPrefixFormattingRule()) === (nationalPrefix || '') + parseDigits('$1')) {\r\n\t\t\t\tnumberFormat = numberFormatWithNationalPrefix\r\n\t\t\t\tnationalPrefixIncludedInTemplate = true\r\n\t\t\t\t// Replace all digits of the national prefix in the formatting template\r\n\t\t\t\t// with `DIGIT_PLACEHOLDER`s.\r\n\t\t\t\tif (nationalPrefix) {\r\n\t\t\t\t\tlet i = nationalPrefix.length\r\n\t\t\t\t\twhile (i > 0) {\r\n\t\t\t\t\t\tnumberFormat = numberFormat.replace(/\\d/, DIGIT_PLACEHOLDER)\r\n\t\t\t\t\t\ti--\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Generate formatting template for this phone number format.\r\n\t\tlet template = digits\r\n\t\t\t// Format the dummy phone number according to the format.\r\n\t\t\t.replace(new RegExp(pattern), numberFormat)\r\n\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER.\r\n\t\t\t.replace(new RegExp(DUMMY_DIGIT, 'g'), DIGIT_PLACEHOLDER)\r\n\r\n\t\t// If a prefix of a national (significant) number is not as simple\r\n\t\t// as just a basic national prefix, then just prepend such prefix\r\n\t\t// before the national (significant) number, optionally spacing\r\n\t\t// the two with a whitespace.\r\n\t\tif (!nationalPrefixIncludedInTemplate) {\r\n\t\t\tif (complexPrefixBeforeNationalSignificantNumber) {\r\n\t\t\t\t// Prepend the prefix to the template manually.\r\n\t\t\t\ttemplate = repeat(DIGIT_PLACEHOLDER, complexPrefixBeforeNationalSignificantNumber.length) +\r\n\t\t\t\t\t' ' +\r\n\t\t\t\t\ttemplate\r\n\t\t\t} else if (nationalPrefix) {\r\n\t\t\t\t// Prepend national prefix to the template manually.\r\n\t\t\t\ttemplate = repeat(DIGIT_PLACEHOLDER, nationalPrefix.length) +\r\n\t\t\t\t\tthis.getSeparatorAfterNationalPrefix(format) +\r\n\t\t\t\t\ttemplate\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (international) {\r\n\t\t\ttemplate = applyInternationalSeparatorStyle(template)\r\n\t\t}\r\n\r\n\t\treturn template\r\n\t}\r\n\r\n\tformatNextNationalNumberDigits(digits) {\r\n\t\tconst result = populateTemplateWithDigits(\r\n\t\t\tthis.populatedNationalNumberTemplate,\r\n\t\t\tthis.populatedNationalNumberTemplatePosition,\r\n\t\t\tdigits\r\n\t\t)\r\n\r\n\t\tif (!result) {\r\n\t\t\t// Reset the format.\r\n\t\t\tthis.resetFormat()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.populatedNationalNumberTemplate = result[0]\r\n\t\tthis.populatedNationalNumberTemplatePosition = result[1]\r\n\r\n\t\t// Return the formatted phone number so far.\r\n\t\treturn cutAndStripNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1)\r\n\r\n\t\t// The old way which was good for `input-format` but is not so good\r\n\t\t// for `react-phone-number-input`'s default input (`InputBasic`).\r\n\t\t// return closeNonPairedParens(this.populatedNationalNumberTemplate, this.populatedNationalNumberTemplatePosition + 1)\r\n\t\t// \t.replace(new RegExp(DIGIT_PLACEHOLDER, 'g'), ' ')\r\n\t}\r\n\r\n\tshouldTryNationalPrefixFormattingRule(format, { international, nationalPrefix }) {\r\n\t\tif (format.nationalPrefixFormattingRule()) {\r\n\t\t\t// In some countries, `national_prefix_formatting_rule` is `($1)`,\r\n\t\t\t// so it applies even if the user hasn't input a national prefix.\r\n\t\t\t// `format.usesNationalPrefix()` detects such cases.\r\n\t\t\tconst usesNationalPrefix = format.usesNationalPrefix()\r\n\t\t\tif ((usesNationalPrefix && nationalPrefix) ||\r\n\t\t\t\t(!usesNationalPrefix && !international)) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}", "import extractCountryCallingCode from './helpers/extractCountryCallingCode.js'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js'\r\nimport extractNationalNumberFromPossiblyIncompleteNumber from './helpers/extractNationalNumberFromPossiblyIncompleteNumber.js'\r\nimport stripIddPrefix from './helpers/stripIddPrefix.js'\r\nimport parseDigits from './helpers/parseDigits.js'\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from './constants.js'\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART =\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']+'\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN = new RegExp('^' + VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART + '$', 'i')\r\n\r\nconst VALID_FORMATTED_PHONE_NUMBER_PART =\r\n\t'(?:' +\r\n\t\t'[' + PLUS_CHARS + ']' +\r\n\t\t'[' +\r\n\t\t\tVALID_PUNCTUATION +\r\n\t\t\tVALID_DIGITS +\r\n\t\t']*' +\r\n\t\t'|' +\r\n\t\t'[' +\r\n\t\t\tVALID_PUNCTUATION +\r\n\t\t\tVALID_DIGITS +\r\n\t\t']+' +\r\n\t')'\r\n\r\nconst AFTER_PHONE_NUMBER_DIGITS_END_PATTERN = new RegExp(\r\n\t'[^' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']+' +\r\n\t'.*' +\r\n\t'$'\r\n)\r\n\r\n// Tests whether `national_prefix_for_parsing` could match\r\n// different national prefixes.\r\n// Matches anything that's not a digit or a square bracket.\r\nconst COMPLEX_NATIONAL_PREFIX = /[^\\d\\[\\]]/\r\n\r\nexport default class AsYouTypeParser {\r\n\tconstructor({\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata,\r\n\t\tonNationalSignificantNumberChange\r\n\t}) {\r\n\t\tthis.defaultCountry = defaultCountry\r\n\t\tthis.defaultCallingCode = defaultCallingCode\r\n\t\tthis.metadata = metadata\r\n\t\tthis.onNationalSignificantNumberChange = onNationalSignificantNumberChange\r\n\t}\r\n\r\n\tinput(text, state) {\r\n\t\tconst [formattedDigits, hasPlus] = extractFormattedDigitsAndPlus(text)\r\n\t\tconst digits = parseDigits(formattedDigits)\r\n\t\t// Checks for a special case: just a leading `+` has been entered.\r\n\t\tlet justLeadingPlus\r\n\t\tif (hasPlus) {\r\n\t\t\tif (!state.digits) {\r\n\t\t\t\tstate.startInternationalNumber()\r\n\t\t\t\tif (!digits) {\r\n\t\t\t\t\tjustLeadingPlus = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (digits) {\r\n\t\t\tthis.inputDigits(digits, state)\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tdigits,\r\n\t\t\tjustLeadingPlus\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Inputs \"next\" phone number digits.\r\n\t * @param  {string} digits\r\n\t * @return {string} [formattedNumber] Formatted national phone number (if it can be formatted at this stage). Returning `undefined` means \"don't format the national phone number at this stage\".\r\n\t */\r\n\tinputDigits(nextDigits, state) {\r\n\t\tconst { digits } = state\r\n\t\tconst hasReceivedThreeLeadingDigits = digits.length < 3 && digits.length + nextDigits.length >= 3\r\n\r\n\t\t// Append phone number digits.\r\n\t\tstate.appendDigits(nextDigits)\r\n\r\n\t\t// Attempt to extract IDD prefix:\r\n\t\t// Some users input their phone number in international format,\r\n\t\t// but in an \"out-of-country\" dialing format instead of using the leading `+`.\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/185\r\n\t\t// Detect such numbers as soon as there're at least 3 digits.\r\n\t\t// Google's library attempts to extract IDD prefix at 3 digits,\r\n\t\t// so this library just copies that behavior.\r\n\t\t// I guess that's because the most commot IDD prefixes are\r\n\t\t// `00` (Europe) and `011` (US).\r\n\t\t// There exist really long IDD prefixes too:\r\n\t\t// for example, in Australia the default IDD prefix is `0011`,\r\n\t\t// and it could even be as long as `14880011`.\r\n\t\t// An IDD prefix is extracted here, and then every time when\r\n\t\t// there's a new digit and the number couldn't be formatted.\r\n\t\tif (hasReceivedThreeLeadingDigits) {\r\n\t\t\tthis.extractIddPrefix(state)\r\n\t\t}\r\n\r\n\t\tif (this.isWaitingForCountryCallingCode(state)) {\r\n\t\t\tif (!this.extractCountryCallingCode(state)) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstate.appendNationalSignificantNumberDigits(nextDigits)\r\n\t\t}\r\n\r\n\t\t// If a phone number is being input in international format,\r\n\t\t// then it's not valid for it to have a national prefix.\r\n\t\t// Still, some people incorrectly input such numbers with a national prefix.\r\n\t\t// In such cases, only attempt to strip a national prefix if the number becomes too long.\r\n\t\t// (but that is done later, not here)\r\n\t\tif (!state.international) {\r\n\t\t\tif (!this.hasExtractedNationalSignificantNumber) {\r\n\t\t\t\tthis.extractNationalSignificantNumber(\r\n\t\t\t\t\tstate.getNationalDigits(),\r\n\t\t\t\t\t(stateUpdate) => state.update(stateUpdate)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisWaitingForCountryCallingCode({ international, callingCode }) {\r\n\t\treturn international && !callingCode\r\n\t}\r\n\r\n\t// Extracts a country calling code from a number\r\n\t// being entered in internatonal format.\r\n\textractCountryCallingCode(state) {\r\n\t\tconst { countryCallingCode, number } = extractCountryCallingCode(\r\n\t\t\t'+' + state.getDigitsWithoutInternationalPrefix(),\r\n\t\t\tthis.defaultCountry,\r\n\t\t\tthis.defaultCallingCode,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (countryCallingCode) {\r\n\t\t\tstate.setCallingCode(countryCallingCode)\r\n\t\t\tstate.update({\r\n\t\t\t\tnationalSignificantNumber: number\r\n\t\t\t})\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\treset(numberingPlan) {\r\n\t\tif (numberingPlan) {\r\n\t\t\tthis.hasSelectedNumberingPlan = true\r\n\t\t\tconst nationalPrefixForParsing = numberingPlan._nationalPrefixForParsing()\r\n\t\t\tthis.couldPossiblyExtractAnotherNationalSignificantNumber = nationalPrefixForParsing && COMPLEX_NATIONAL_PREFIX.test(nationalPrefixForParsing)\r\n\t\t} else {\r\n\t\t\tthis.hasSelectedNumberingPlan = undefined\r\n\t\t\tthis.couldPossiblyExtractAnotherNationalSignificantNumber = undefined\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts a national (significant) number from user input.\r\n\t * Google's library is different in that it only applies `national_prefix_for_parsing`\r\n\t * and doesn't apply `national_prefix_transform_rule` after that.\r\n\t * https://github.com/google/libphonenumber/blob/a3d70b0487875475e6ad659af404943211d26456/java/libphonenumber/src/com/google/i18n/phonenumbers/AsYouTypeFormatter.java#L539\r\n\t * @return {boolean} [extracted]\r\n\t */\r\n\textractNationalSignificantNumber(nationalDigits, setState) {\r\n\t\tif (!this.hasSelectedNumberingPlan) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst {\r\n\t\t\tnationalPrefix,\r\n\t\t\tnationalNumber,\r\n\t\t\tcarrierCode\r\n\t\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\t\tnationalDigits,\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t\tif (nationalNumber === nationalDigits) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.onExtractedNationalNumber(\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tnationalDigits,\r\n\t\t\tsetState\r\n\t\t)\r\n\t\treturn true\r\n\t}\r\n\r\n\t/**\r\n\t * In Google's code this function is called \"attempt to extract longer NDD\".\r\n\t * \"Some national prefixes are a substring of others\", they say.\r\n\t * @return {boolean} [result] — Returns `true` if extracting a national prefix produced different results from what they were.\r\n\t */\r\n\textractAnotherNationalSignificantNumber(nationalDigits, prevNationalSignificantNumber, setState) {\r\n\t\tif (!this.hasExtractedNationalSignificantNumber) {\r\n\t\t\treturn this.extractNationalSignificantNumber(nationalDigits, setState)\r\n\t\t}\r\n\t\tif (!this.couldPossiblyExtractAnotherNationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst {\r\n\t\t\tnationalPrefix,\r\n\t\t\tnationalNumber,\r\n\t\t\tcarrierCode\r\n\t\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\t\tnationalDigits,\r\n\t\t\tthis.metadata\r\n\t\t)\r\n\t\t// If a national prefix has been extracted previously,\r\n\t\t// then it's always extracted as additional digits are added.\r\n\t\t// That's assuming `extractNationalNumberFromPossiblyIncompleteNumber()`\r\n\t\t// doesn't do anything different from what it currently does.\r\n\t\t// So, just in case, here's this check, though it doesn't occur.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (nationalNumber === prevNationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.onExtractedNationalNumber(\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tnationalDigits,\r\n\t\t\tsetState\r\n\t\t)\r\n\t\treturn true\r\n\t}\r\n\r\n\tonExtractedNationalNumber(\r\n\t\tnationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tnationalSignificantNumber,\r\n\t\tnationalDigits,\r\n\t\tsetState\r\n\t) {\r\n\t\tlet complexPrefixBeforeNationalSignificantNumber\r\n\t\tlet nationalSignificantNumberMatchesInput\r\n\t\t// This check also works with empty `this.nationalSignificantNumber`.\r\n\t\tconst nationalSignificantNumberIndex = nationalDigits.lastIndexOf(nationalSignificantNumber)\r\n\t\t// If the extracted national (significant) number is the\r\n\t\t// last substring of the `digits`, then it means that it hasn't been altered:\r\n\t\t// no digits have been removed from the national (significant) number\r\n\t\t// while applying `national_prefix_transform_rule`.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\tif (nationalSignificantNumberIndex >= 0 &&\r\n\t\t\tnationalSignificantNumberIndex === nationalDigits.length - nationalSignificantNumber.length) {\r\n\t\t\tnationalSignificantNumberMatchesInput = true\r\n\t\t\t// If a prefix of a national (significant) number is not as simple\r\n\t\t\t// as just a basic national prefix, then such prefix is stored in\r\n\t\t\t// `this.complexPrefixBeforeNationalSignificantNumber` property and will be\r\n\t\t\t// prepended \"as is\" to the national (significant) number to produce\r\n\t\t\t// a formatted result.\r\n\t\t\tconst prefixBeforeNationalNumber = nationalDigits.slice(0, nationalSignificantNumberIndex)\r\n\t\t\t// `prefixBeforeNationalNumber` is always non-empty,\r\n\t\t\t// because `onExtractedNationalNumber()` isn't called\r\n\t\t\t// when a national (significant) number hasn't been actually \"extracted\":\r\n\t\t\t// when a national (significant) number is equal to the national part of `digits`,\r\n\t\t\t// then `onExtractedNationalNumber()` doesn't get called.\r\n\t\t\tif (prefixBeforeNationalNumber !== nationalPrefix) {\r\n\t\t\t\tcomplexPrefixBeforeNationalSignificantNumber = prefixBeforeNationalNumber\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetState({\r\n\t\t\tnationalPrefix,\r\n\t\t\tcarrierCode,\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tnationalSignificantNumberMatchesInput,\r\n\t\t\tcomplexPrefixBeforeNationalSignificantNumber\r\n\t\t})\r\n\t\t// `onExtractedNationalNumber()` is only called when\r\n\t\t// the national (significant) number actually did change.\r\n\t\tthis.hasExtractedNationalSignificantNumber = true\r\n\t\tthis.onNationalSignificantNumberChange()\r\n\t}\r\n\r\n\treExtractNationalSignificantNumber(state) {\r\n\t\t// Attempt to extract a national prefix.\r\n\t\t//\r\n\t\t// Some people incorrectly input national prefix\r\n\t\t// in an international phone number.\r\n\t\t// For example, some people write British phone numbers as `+44(0)...`.\r\n\t\t//\r\n\t\t// Also, in some rare cases, it is valid for a national prefix\r\n\t\t// to be a part of an international phone number.\r\n\t\t// For example, mobile phone numbers in Mexico are supposed to be\r\n\t\t// dialled internationally using a `1` national prefix,\r\n\t\t// so the national prefix will be part of an international number.\r\n\t\t//\r\n\t\t// Quote from:\r\n\t\t// https://www.mexperience.com/dialing-cell-phones-in-mexico/\r\n\t\t//\r\n\t\t// \"Dialing a Mexican cell phone from abroad\r\n\t\t// When you are calling a cell phone number in Mexico from outside Mexico,\r\n\t\t// it’s necessary to dial an additional “1” after Mexico’s country code\r\n\t\t// (which is “52”) and before the area code.\r\n\t\t// You also ignore the 045, and simply dial the area code and the\r\n\t\t// cell phone’s number.\r\n\t\t//\r\n\t\t// If you don’t add the “1”, you’ll receive a recorded announcement\r\n\t\t// asking you to redial using it.\r\n\t\t//\r\n\t\t// For example, if you are calling from the USA to a cell phone\r\n\t\t// in Mexico City, you would dial +52 – 1 – 55 – 1234 5678.\r\n\t\t// (Note that this is different to calling a land line in Mexico City\r\n\t\t// from abroad, where the number dialed would be +52 – 55 – 1234 5678)\".\r\n\t\t//\r\n\t\t// Google's demo output:\r\n\t\t// https://libphonenumber.appspot.com/phonenumberparser?number=%2b5215512345678&country=MX\r\n\t\t//\r\n\t\tif (this.extractAnotherNationalSignificantNumber(\r\n\t\t\tstate.getNationalDigits(),\r\n\t\t\tstate.nationalSignificantNumber,\r\n\t\t\t(stateUpdate) => state.update(stateUpdate)\r\n\t\t)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// If no format matches the phone number, then it could be\r\n\t\t// \"a really long IDD\" (quote from a comment in Google's library).\r\n\t\t// An IDD prefix is first extracted when the user has entered at least 3 digits,\r\n\t\t// and then here — every time when there's a new digit and the number\r\n\t\t// couldn't be formatted.\r\n\t\t// For example, in Australia the default IDD prefix is `0011`,\r\n\t\t// and it could even be as long as `14880011`.\r\n\t\t//\r\n\t\t// Could also check `!hasReceivedThreeLeadingDigits` here\r\n\t\t// to filter out the case when this check duplicates the one\r\n\t\t// already performed when there're 3 leading digits,\r\n\t\t// but it's not a big deal, and in most cases there\r\n\t\t// will be a suitable `format` when there're 3 leading digits.\r\n\t\t//\r\n\t\tif (this.extractIddPrefix(state)) {\r\n\t\t\tthis.extractCallingCodeAndNationalSignificantNumber(state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t// Google's AsYouType formatter supports sort of an \"autocorrection\" feature\r\n\t\t// when it \"autocorrects\" numbers that have been input for a country\r\n\t\t// with that country's calling code.\r\n\t\t// Such \"autocorrection\" feature looks weird, but different people have been requesting it:\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/375\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/316\r\n\t\tif (this.fixMissingPlus(state)) {\r\n\t\t\tthis.extractCallingCodeAndNationalSignificantNumber(state)\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\textractIddPrefix(state) {\r\n\t\t// An IDD prefix can't be present in a number written with a `+`.\r\n\t\t// Also, don't re-extract an IDD prefix if has already been extracted.\r\n\t\tconst {\r\n\t\t\tinternational,\r\n\t\t\tIDDPrefix,\r\n\t\t\tdigits,\r\n\t\t\tnationalSignificantNumber\r\n\t\t} = state\r\n\t\tif (international || IDDPrefix) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// Some users input their phone number in \"out-of-country\"\r\n\t\t// dialing format instead of using the leading `+`.\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/185\r\n\t\t// Detect such numbers.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(\r\n\t\t\tdigits,\r\n\t\t\tthis.defaultCountry,\r\n\t\t\tthis.defaultCallingCode,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (numberWithoutIDD !== undefined && numberWithoutIDD !== digits) {\r\n\t\t\t// If an IDD prefix was stripped then convert the IDD-prefixed number\r\n\t\t\t// to international number for subsequent parsing.\r\n\t\t\tstate.update({\r\n\t\t\t\tIDDPrefix: digits.slice(0, digits.length - numberWithoutIDD.length)\r\n\t\t\t})\r\n\t\t\tthis.startInternationalNumber(state, {\r\n\t\t\t\tcountry: undefined,\r\n\t\t\t\tcallingCode: undefined\r\n\t\t\t})\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\tfixMissingPlus(state) {\r\n\t\tif (!state.international) {\r\n\t\t\tconst {\r\n\t\t\t\tcountryCallingCode: newCallingCode,\r\n\t\t\t\tnumber\r\n\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\tstate.digits,\r\n\t\t\t\tthis.defaultCountry,\r\n\t\t\t\tthis.defaultCallingCode,\r\n\t\t\t\tthis.metadata.metadata\r\n\t\t\t)\r\n\t\t\tif (newCallingCode) {\r\n\t\t\t\tstate.update({\r\n\t\t\t\t\tmissingPlus: true\r\n\t\t\t\t})\r\n\t\t\t\tthis.startInternationalNumber(state, {\r\n\t\t\t\t\tcountry: state.country,\r\n\t\t\t\t\tcallingCode: newCallingCode\r\n\t\t\t\t})\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tstartInternationalNumber(state, { country, callingCode }) {\r\n\t\tstate.startInternationalNumber(country, callingCode)\r\n\t\t// If a national (significant) number has been extracted before, reset it.\r\n\t\tif (state.nationalSignificantNumber) {\r\n\t\t\tstate.resetNationalSignificantNumber()\r\n\t\t\tthis.onNationalSignificantNumberChange()\r\n\t\t\tthis.hasExtractedNationalSignificantNumber = undefined\r\n\t\t}\r\n\t}\r\n\r\n\textractCallingCodeAndNationalSignificantNumber(state) {\r\n\t\tif (this.extractCountryCallingCode(state)) {\r\n\t\t\t// `this.extractCallingCode()` is currently called when the number\r\n\t\t\t// couldn't be formatted during the standard procedure.\r\n\t\t\t// Normally, the national prefix would be re-extracted\r\n\t\t\t// for an international number if such number couldn't be formatted,\r\n\t\t\t// but since it's already not able to be formatted,\r\n\t\t\t// there won't be yet another retry, so also extract national prefix here.\r\n\t\t\tthis.extractNationalSignificantNumber(\r\n\t\t\t\tstate.getNationalDigits(),\r\n\t\t\t\t(stateUpdate) => state.update(stateUpdate)\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number from text (if there's any).\r\n * @param  {string} text\r\n * @return {string} [formattedPhoneNumber]\r\n */\r\nfunction extractFormattedPhoneNumber(text) {\r\n\t// Attempt to extract a possible number from the string passed in.\r\n\tconst startsAt = text.search(VALID_FORMATTED_PHONE_NUMBER_PART)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\t// Trim everything to the left of the phone number.\r\n\ttext = text.slice(startsAt)\r\n\t// Trim the `+`.\r\n\tlet hasPlus\r\n\tif (text[0] === '+') {\r\n\t\thasPlus = true\r\n\t\ttext = text.slice('+'.length)\r\n\t}\r\n\t// Trim everything to the right of the phone number.\r\n\ttext = text.replace(AFTER_PHONE_NUMBER_DIGITS_END_PATTERN, '')\r\n\t// Re-add the previously trimmed `+`.\r\n\tif (hasPlus) {\r\n\t\ttext = '+' + text\r\n\t}\r\n\treturn text\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number digits (and a `+`) from text (if there're any).\r\n * @param  {string} text\r\n * @return {any[]}\r\n */\r\nfunction _extractFormattedDigitsAndPlus(text) {\r\n\t// Extract a formatted phone number part from text.\r\n\tconst extractedNumber = extractFormattedPhoneNumber(text) || ''\r\n\t// Trim a `+`.\r\n\tif (extractedNumber[0] === '+') {\r\n\t\treturn [extractedNumber.slice('+'.length), true]\r\n\t}\r\n\treturn [extractedNumber]\r\n}\r\n\r\n/**\r\n * Extracts formatted phone number digits (and a `+`) from text (if there're any).\r\n * @param  {string} text\r\n * @return {any[]}\r\n */\r\nexport function extractFormattedDigitsAndPlus(text) {\r\n\tlet [formattedDigits, hasPlus] = _extractFormattedDigitsAndPlus(text)\r\n\t// If the extracted phone number part\r\n\t// can possibly be a part of some valid phone number\r\n\t// then parse phone number characters from a formatted phone number.\r\n\tif (!VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN.test(formattedDigits)) {\r\n\t\tformattedDigits = ''\r\n\t}\r\n\treturn [formattedDigits, hasPlus]\r\n}", "import Metadata from './metadata.js'\r\nimport PhoneNumber from './PhoneNumber.js'\r\nimport AsYouTypeState from './AsYouTypeState.js'\r\nimport AsYouTypeFormatter, { DIGIT_PLACEHOLDER } from './AsYouTypeFormatter.js'\r\nimport AsYouTypeParser, { extractFormattedDigitsAndPlus } from './AsYouTypeParser.js'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js'\r\nimport getCountryByNationalNumber from './helpers/getCountryByNationalNumber.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class AsYouType {\r\n\t/**\r\n\t * @param {(string|object)?} [optionsOrDefaultCountry] - The default country used for parsing non-international phone numbers. Can also be an `options` object.\r\n\t * @param {Object} metadata\r\n\t */\r\n\tconstructor(optionsOrDefaultCountry, metadata) {\r\n\t\tthis.metadata = new Metadata(metadata)\r\n\t\tconst [defaultCountry, defaultCallingCode] = this.getCountryAndCallingCode(optionsOrDefaultCountry)\r\n\t\t// `this.defaultCountry` and `this.defaultCallingCode` aren't required to be in sync.\r\n\t\t// For example, `this.defaultCountry` could be `\"AR\"` and `this.defaultCallingCode` could be `undefined`.\r\n\t\t// So `this.defaultCountry` and `this.defaultCallingCode` are totally independent.\r\n\t\tthis.defaultCountry = defaultCountry\r\n\t\tthis.defaultCallingCode = defaultCallingCode\r\n\t\tthis.reset()\r\n\t}\r\n\r\n\tgetCountryAndCallingCode(optionsOrDefaultCountry) {\r\n\t\t// Set `defaultCountry` and `defaultCallingCode` options.\r\n\t\tlet defaultCountry\r\n\t\tlet defaultCallingCode\r\n\t\t// Turns out `null` also has type \"object\". Weird.\r\n\t\tif (optionsOrDefaultCountry) {\r\n\t\t\tif (typeof optionsOrDefaultCountry === 'object') {\r\n\t\t\t\tdefaultCountry = optionsOrDefaultCountry.defaultCountry\r\n\t\t\t\tdefaultCallingCode = optionsOrDefaultCountry.defaultCallingCode\r\n\t\t\t} else {\r\n\t\t\t\tdefaultCountry = optionsOrDefaultCountry\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (defaultCountry && !this.metadata.hasCountry(defaultCountry)) {\r\n\t\t\tdefaultCountry = undefined\r\n\t\t}\r\n\t\tif (defaultCallingCode) {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (this.metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tdefaultCountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [defaultCountry, defaultCallingCode]\r\n\t}\r\n\r\n\t/**\r\n\t * Inputs \"next\" phone number characters.\r\n\t * @param  {string} text\r\n\t * @return {string} Formatted phone number characters that have been input so far.\r\n\t */\r\n\tinput(text) {\r\n\t\tconst {\r\n\t\t\tdigits,\r\n\t\t\tjustLeadingPlus\r\n\t\t} = this.parser.input(text, this.state)\r\n\t\tif (justLeadingPlus) {\r\n\t\t\tthis.formattedOutput = '+'\r\n\t\t} else if (digits) {\r\n\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t// Match the available formats by the currently available leading digits.\r\n\t\t\tif (this.state.nationalSignificantNumber) {\r\n\t\t\t\tthis.formatter.narrowDownMatchingFormats(this.state)\r\n\t\t\t}\r\n\t\t\tlet formattedNationalNumber\r\n\t\t\tif (this.metadata.hasSelectedNumberingPlan()) {\r\n\t\t\t\tformattedNationalNumber = this.formatter.format(digits, this.state)\r\n\t\t\t}\r\n\t\t\tif (formattedNationalNumber === undefined) {\r\n\t\t\t\t// See if another national (significant) number could be re-extracted.\r\n\t\t\t\tif (this.parser.reExtractNationalSignificantNumber(this.state)) {\r\n\t\t\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t\t\t// If it could, then re-try formatting the new national (significant) number.\r\n\t\t\t\t\tconst nationalDigits = this.state.getNationalDigits()\r\n\t\t\t\t\tif (nationalDigits) {\r\n\t\t\t\t\t\tformattedNationalNumber = this.formatter.format(nationalDigits, this.state)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.formattedOutput = formattedNationalNumber\r\n\t\t\t\t? this.getFullNumber(formattedNationalNumber)\r\n\t\t\t\t: this.getNonFormattedNumber()\r\n\t\t}\r\n\t\treturn this.formattedOutput\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.state = new AsYouTypeState({\r\n\t\t\tonCountryChange: (country) => {\r\n\t\t\t\t// Before version `1.6.0`, the official `AsYouType` formatter API\r\n\t\t\t\t// included the `.country` property of an `AsYouType` instance.\r\n\t\t\t\t// Since that property (along with the others) have been moved to\r\n\t\t\t\t// `this.state`, `this.country` property is emulated for compatibility\r\n\t\t\t\t// with the old versions.\r\n\t\t\t\tthis.country = country\r\n\t\t\t},\r\n\t\t\tonCallingCodeChange: (callingCode, country) => {\r\n\t\t\t\tthis.metadata.selectNumberingPlan(country, callingCode)\r\n\t\t\t\tthis.formatter.reset(this.metadata.numberingPlan, this.state)\r\n\t\t\t\tthis.parser.reset(this.metadata.numberingPlan)\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.formatter = new AsYouTypeFormatter({\r\n\t\t\tstate: this.state,\r\n\t\t\tmetadata: this.metadata\r\n\t\t})\r\n\t\tthis.parser = new AsYouTypeParser({\r\n\t\t\tdefaultCountry: this.defaultCountry,\r\n\t\t\tdefaultCallingCode: this.defaultCallingCode,\r\n\t\t\tmetadata: this.metadata,\r\n\t\t\tstate: this.state,\r\n\t\t\tonNationalSignificantNumberChange: () => {\r\n\t\t\t\tthis.determineTheCountryIfNeeded()\r\n\t\t\t\tthis.formatter.reset(this.metadata.numberingPlan, this.state)\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.state.reset({\r\n\t\t\tcountry: this.defaultCountry,\r\n\t\t\tcallingCode: this.defaultCallingCode\r\n\t\t})\r\n\t\tthis.formattedOutput = ''\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is being input in international format.\r\n\t * In other words, returns `true` if and only if the parsed phone number starts with a `\"+\"`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisInternational() {\r\n\t\treturn this.state.international\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the \"calling code\" part of the phone number when it's being input\r\n\t * in an international format.\r\n\t * If no valid calling code has been entered so far, returns `undefined`.\r\n\t * @return {string} [callingCode]\r\n\t */\r\n\tgetCallingCode() {\r\n\t\t // If the number is being input in national format and some \"default calling code\"\r\n\t\t // has been passed to `AsYouType` constructor, then `this.state.callingCode`\r\n\t\t // is equal to that \"default calling code\".\r\n\t\t //\r\n\t\t // If the number is being input in national format and no \"default calling code\"\r\n\t\t // has been passed to `AsYouType` constructor, then returns `undefined`,\r\n\t\t // even if a \"default country\" has been passed to `AsYouType` constructor.\r\n\t\t //\r\n\t\tif (this.isInternational()) {\r\n\t\t\treturn this.state.callingCode\r\n\t\t}\r\n\t}\r\n\r\n\t// A legacy alias.\r\n\tgetCountryCallingCode() {\r\n\t\treturn this.getCallingCode()\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a two-letter country code of the phone number.\r\n\t * Returns `undefined` for \"non-geographic\" phone numbering plans.\r\n\t * Returns `undefined` if no phone number has been input yet.\r\n\t * @return {string} [country]\r\n\t */\r\n\tgetCountry() {\r\n\t\tconst { digits } = this.state\r\n\t\t// Return `undefined` if no digits have been input yet.\r\n\t\tif (digits) {\r\n\t\t\treturn this._getCountry()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a two-letter country code of the phone number.\r\n\t * Returns `undefined` for \"non-geographic\" phone numbering plans.\r\n\t * @return {string} [country]\r\n\t */\r\n\t_getCountry() {\r\n\t\tconst { country } = this.state\r\n\t\t/* istanbul ignore if */\r\n\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t// `AsYouType.getCountry()` returns `undefined`\r\n\t\t\t// for \"non-geographic\" phone numbering plans.\r\n\t\t\tif (country === '001') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn country\r\n\t}\r\n\r\n\tdetermineTheCountryIfNeeded() {\r\n\t\t// Suppose a user enters a phone number in international format,\r\n\t\t// and there're several countries corresponding to that country calling code,\r\n\t\t// and a country has been derived from the number, and then\r\n\t\t// a user enters one more digit and the number is no longer\r\n\t\t// valid for the derived country, so the country should be re-derived\r\n\t\t// on every new digit in those cases.\r\n\t\t//\r\n\t\t// If the phone number is being input in national format,\r\n\t\t// then it could be a case when `defaultCountry` wasn't specified\r\n\t\t// when creating `AsYouType` instance, and just `defaultCallingCode` was specified,\r\n\t\t// and that \"calling code\" could correspond to a \"non-geographic entity\",\r\n\t\t// or there could be several countries corresponding to that country calling code.\r\n\t\t// In those cases, `this.country` is `undefined` and should be derived\r\n\t\t// from the number. Again, if country calling code is ambiguous, then\r\n\t\t// `this.country` should be re-derived with each new digit.\r\n\t\t//\r\n\t\tif (!this.state.country || this.isCountryCallingCodeAmbiguous()) {\r\n\t\t\tthis.determineTheCountry()\r\n\t\t}\r\n\t}\r\n\r\n\t// Prepends `+CountryCode ` in case of an international phone number\r\n\tgetFullNumber(formattedNationalNumber) {\r\n\t\tif (this.isInternational()) {\r\n\t\t\tconst prefix = (text) => this.formatter.getInternationalPrefixBeforeCountryCallingCode(this.state, {\r\n\t\t\t\tspacing: text ? true : false\r\n\t\t\t}) + text\r\n\t\t\tconst { callingCode } = this.state\r\n\t\t\tif (!callingCode) {\r\n\t\t\t\treturn prefix(`${this.state.getDigitsWithoutInternationalPrefix()}`)\r\n\t\t\t}\r\n\t\t\tif (!formattedNationalNumber) {\r\n\t\t\t\treturn prefix(callingCode)\r\n\t\t\t}\r\n\t\t\treturn prefix(`${callingCode} ${formattedNationalNumber}`)\r\n\t\t}\r\n\t\treturn formattedNationalNumber\r\n\t}\r\n\r\n\tgetNonFormattedNationalNumberWithPrefix() {\r\n\t\tconst {\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tcomplexPrefixBeforeNationalSignificantNumber,\r\n\t\t\tnationalPrefix\r\n\t\t} = this.state\r\n\t\tlet number = nationalSignificantNumber\r\n\t\tconst prefix = complexPrefixBeforeNationalSignificantNumber || nationalPrefix\r\n\t\tif (prefix) {\r\n\t\t\tnumber = prefix + number\r\n\t\t}\r\n\t\treturn number\r\n\t}\r\n\r\n\tgetNonFormattedNumber() {\r\n\t\tconst { nationalSignificantNumberMatchesInput } = this.state\r\n\t\treturn this.getFullNumber(\r\n\t\t\tnationalSignificantNumberMatchesInput\r\n\t\t\t\t? this.getNonFormattedNationalNumberWithPrefix()\r\n\t\t\t\t: this.state.getNationalDigits()\r\n\t\t)\r\n\t}\r\n\r\n\tgetNonFormattedTemplate() {\r\n\t\tconst number = this.getNonFormattedNumber()\r\n\t\tif (number) {\r\n\t\t\treturn number.replace(/[\\+\\d]/g, DIGIT_PLACEHOLDER)\r\n\t\t}\r\n\t}\r\n\r\n\tisCountryCallingCodeAmbiguous() {\r\n\t\tconst { callingCode } = this.state\r\n\t\tconst countryCodes = this.metadata.getCountryCodesForCallingCode(callingCode)\r\n\t\treturn countryCodes && countryCodes.length > 1\r\n\t}\r\n\r\n\t// Determines the country of the phone number\r\n\t// entered so far based on the country phone code\r\n\t// and the national phone number.\r\n\tdetermineTheCountry() {\r\n\t\tthis.state.setCountry(getCountryByCallingCode(\r\n\t\t\tthis.isInternational() ? this.state.callingCode : this.defaultCallingCode,\r\n\t\t\t{\r\n\t\t\t\tnationalNumber: this.state.nationalSignificantNumber,\r\n\t\t\t\tdefaultCountry: this.defaultCountry,\r\n\t\t\t\tmetadata: this.metadata\r\n\t\t\t}\r\n\t\t))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a E.164 phone number value for the user's input.\r\n\t *\r\n\t * For example, for country `\"US\"` and input `\"(222) 333-4444\"`\r\n\t * it will return `\"+12223334444\"`.\r\n\t *\r\n\t * For international phone number input, it will also auto-correct\r\n\t * some minor errors such as using a national prefix when writing\r\n\t * an international phone number. For example, if the user inputs\r\n\t * `\"+44 0 7400 000000\"` then it will return an auto-corrected\r\n\t * `\"+447400000000\"` phone number value.\r\n\t *\r\n\t * Will return `undefined` if no digits have been input,\r\n\t * or when inputting a phone number in national format and no\r\n\t * default country or default \"country calling code\" have been set.\r\n\t *\r\n\t * @return {string} [value]\r\n\t */\r\n\tgetNumberValue() {\r\n\t\tconst {\r\n\t\t\tdigits,\r\n\t\t\tcallingCode,\r\n\t\t\tcountry,\r\n\t\t\tnationalSignificantNumber\r\n\t\t} = this.state\r\n\r\n\t \t// Will return `undefined` if no digits have been input.\r\n\t\tif (!digits) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (this.isInternational()) {\r\n\t\t\tif (callingCode) {\r\n\t\t\t\treturn '+' + callingCode + nationalSignificantNumber\r\n\t\t\t} else {\r\n\t\t\t\treturn '+' + digits\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (country || callingCode) {\r\n\t\t\t\tconst callingCode_ = country ? this.metadata.countryCallingCode() : callingCode\r\n\t\t\t\treturn '+' + callingCode_ + nationalSignificantNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an instance of `PhoneNumber` class.\r\n\t * Will return `undefined` if no national (significant) number\r\n\t * digits have been entered so far, or if no `defaultCountry` has been\r\n\t * set and the user enters a phone number not in international format.\r\n\t */\r\n\tgetNumber() {\r\n\t\tconst {\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tcarrierCode,\r\n\t\t\tcallingCode\r\n\t\t} = this.state\r\n\r\n\t\t// `this._getCountry()` is basically same as `this.state.country`\r\n\t\t// with the only change that it return `undefined` in case of a\r\n\t\t// \"non-geographic\" numbering plan instead of `\"001\"` \"internal use\" value.\r\n\t\tlet country = this._getCountry()\r\n\r\n\t\tif (!nationalSignificantNumber) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// `state.country` and `state.callingCode` aren't required to be in sync.\r\n\t\t// For example, `country` could be `\"AR\"` and `callingCode` could be `undefined`.\r\n\t\t// So `country` and `callingCode` are totally independent.\r\n\r\n\t\tif (!country && !callingCode) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// By default, if `defaultCountry` parameter was passed when\r\n\t\t// creating `AsYouType` instance, `state.country` is gonna be\r\n\t\t// that `defaultCountry`, which doesn't entirely conform with\r\n\t\t// `parsePhoneNumber()`'s behavior where it attempts to determine\r\n\t\t// the country more precisely in cases when multiple countries\r\n\t\t// could correspond to the same `countryCallingCode`.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/103#note_1417192969\r\n\t\t//\r\n\t\t// Because `AsYouType.getNumber()` method is supposed to be a 1:1\r\n\t\t// equivalent for `parsePhoneNumber(AsYouType.getNumberValue())`,\r\n\t\t// then it should also behave accordingly in cases of `country` ambiguity.\r\n\t\t// That's how users of this library would expect it to behave anyway.\r\n\t\t//\r\n\t\tif (country) {\r\n\t\t\tif (country === this.defaultCountry) {\r\n\t\t\t\t// `state.country` and `state.callingCode` aren't required to be in sync.\r\n\t\t\t\t// For example, `state.country` could be `\"AR\"` and `state.callingCode` could be `undefined`.\r\n\t\t\t\t// So `state.country` and `state.callingCode` are totally independent.\r\n\t\t\t\tconst metadata = new Metadata(this.metadata.metadata)\r\n\t\t\t\tmetadata.selectNumberingPlan(country)\r\n\t\t\t\tconst callingCode = metadata.numberingPlan.callingCode()\r\n\t\t\t\tconst ambiguousCountries = this.metadata.getCountryCodesForCallingCode(callingCode)\r\n\t\t\t\tif (ambiguousCountries.length > 1) {\r\n\t\t\t\t\tconst exactCountry = getCountryByNationalNumber(nationalSignificantNumber, {\r\n\t\t\t\t\t\tcountries: ambiguousCountries,\r\n\t\t\t\t\t\tdefaultCountry: this.defaultCountry,\r\n\t\t\t\t\t\tmetadata: this.metadata.metadata\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (exactCountry) {\r\n\t\t\t\t\t\tcountry = exactCountry\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountry || callingCode,\r\n\t\t\tnationalSignificantNumber,\r\n\t\t\tthis.metadata.metadata\r\n\t\t)\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\t// Phone number extensions are not supported by \"As You Type\" formatter.\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is \"possible\".\r\n\t * Is just a shortcut for `PhoneNumber.isPossible()`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisPossible() {\r\n\t\tconst phoneNumber = this.getNumber()\r\n\t\tif (!phoneNumber) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn phoneNumber.isPossible()\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the phone number is \"valid\".\r\n\t * Is just a shortcut for `PhoneNumber.isValid()`.\r\n\t * @return {boolean}\r\n\t */\r\n\tisValid() {\r\n\t\tconst phoneNumber = this.getNumber()\r\n\t\tif (!phoneNumber) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\treturn phoneNumber.isValid()\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t * This method is used in `react-phone-number-input/source/input-control.js`\r\n\t * in versions before `3.0.16`.\r\n\t */\r\n\tgetNationalNumber() {\r\n\t\treturn this.state.nationalSignificantNumber\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the phone number characters entered by the user.\r\n\t * @return {string}\r\n\t */\r\n\tgetChars() {\r\n\t\treturn (this.state.international ? '+' : '') + this.state.digits\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the template for the formatted phone number.\r\n\t * @return {string}\r\n\t */\r\n\tgetTemplate() {\r\n\t\treturn this.formatter.getTemplate(this.state) || this.getNonFormattedTemplate() || ''\r\n\t}\r\n}", "import Metadata from './metadata.js'\r\n\r\nexport default function getCountries(metadata) {\r\n\treturn new Metadata(metadata).getCountries()\r\n}", "import PhoneNumber from './PhoneNumber.js'\r\n\r\nexport default function getExampleNumber(country, examples, metadata) {\r\n\tif (examples[country]) {\r\n\t\treturn new PhoneNumber(country, examples[country], metadata)\r\n\t}\r\n}", "import AsYouType from './AsYouType.js'\r\n\r\n/**\r\n * Formats a (possibly incomplete) phone number.\r\n * The phone number can be either in E.164 format\r\n * or in a form of national number digits.\r\n * @param {string} value - A possibly incomplete phone number. Either in E.164 format or in a form of national number digits.\r\n * @param {string?} country - Two-letter (\"ISO 3166-1 alpha-2\") country code.\r\n * @return {string} Formatted (possibly incomplete) phone number.\r\n */\r\nexport default function formatIncompletePhoneNumber(value, country, metadata) {\r\n\tif (!metadata) {\r\n\t\tmetadata = country\r\n\t\tcountry = undefined\r\n\t}\r\n\treturn new AsYouType(country, metadata).input(value)\r\n}", "export { default as ParseError } from '../es6/ParseError.js'\r\n// `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\r\nexport { default as parsePhoneNumberWithError, default as parsePhoneNumber } from '../es6/parsePhoneNumberWithError.js'\r\n\r\n// `parsePhoneNumberFromString()` named export is now considered legacy:\r\n// it has been promoted to a default export due to being too verbose.\r\nexport { default as default, default as parsePhoneNumberFromString } from '../es6/parsePhoneNumber.js'\r\n\r\nexport { default as isValidPhoneNumber } from '../es6/isValidPhoneNumber.js'\r\nexport { default as isPossiblePhoneNumber } from '../es6/isPossiblePhoneNumber.js'\r\nexport { default as validatePhoneNumberLength } from '../es6/validatePhoneNumberLength.js'\r\n\r\n// Deprecated.\r\nexport { default as findNumbers } from '../es6/legacy/findNumbers.js'\r\nexport { default as searchNumbers } from '../es6/legacy/searchNumbers.js'\r\n\r\nexport { default as findPhoneNumbersInText } from '../es6/findPhoneNumbersInText.js'\r\nexport { default as searchPhoneNumbersInText } from '../es6/searchPhoneNumbersInText.js'\r\nexport { default as PhoneNumberMatcher } from '../es6/PhoneNumberMatcher.js'\r\n\r\nexport { default as AsYouType } from '../es6/AsYouType.js'\r\nexport { DIGIT_PLACEHOLDER } from '../es6/AsYouTypeFormatter.js'\r\n\r\nexport { default as getCountries } from '../es6/getCountries.js'\r\nexport { default as Metadata, isSupportedCountry, getCountryCallingCode, getExtPrefix } from '../es6/metadata.js'\r\n\r\nexport { default as getExampleNumber } from '../es6/getExampleNumber.js'\r\n\r\nexport { default as formatIncompletePhoneNumber } from '../es6/formatIncompletePhoneNumber.js'\r\nexport { default as parseIncompletePhoneNumber, parsePhoneNumberCharacter } from '../es6/parseIncompletePhoneNumber.js'\r\nexport { default as parseDigits } from '../es6/helpers/parseDigits.js'\r\n\r\nexport { parseRFC3966, formatRFC3966 } from '../es6/helpers/RFC3966.js'\r\n", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { parsePhoneNumberWithError as _parsePhoneNumberWithError } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumberWithError() {\r\n\treturn withMetadataArgument(_parsePhoneNumberWithError, arguments)\r\n}\r\n", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { default as _parsePhoneNumber } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumber() {\r\n\treturn withMetadataArgument(_parsePhoneNumber, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { isValidPhoneNumber as _isValidPhoneNumber } from '../../core/index.js'\r\n\r\nexport function isValidPhoneNumber() {\r\n\treturn withMetadataArgument(_isValidPhoneNumber, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { isPossiblePhoneNumber as _isPossiblePhoneNumber } from '../../core/index.js'\r\n\r\nexport function isPossiblePhoneNumber() {\r\n\treturn withMetadataArgument(_isPossiblePhoneNumber, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { validatePhoneNumberLength as _validatePhoneNumberLength } from '../../core/index.js'\r\n\r\nexport function validatePhoneNumberLength() {\r\n\treturn withMetadataArgument(_validatePhoneNumberLength, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { findNumbers as _findNumbers } from '../../core/index.js'\r\n\r\nexport function findNumbers() {\r\n\treturn withMetadataArgument(_findNumbers, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { searchNumbers as _searchNumbers } from '../../core/index.js'\r\n\r\nexport function searchNumbers() {\r\n\treturn withMetadataArgument(_searchNumbers, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { findPhoneNumbersInText as _findPhoneNumbersInText } from '../../core/index.js'\r\n\r\nexport function findPhoneNumbersInText() {\r\n\treturn withMetadataArgument(_findPhoneNumbersInText, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { searchPhoneNumbersInText as _searchPhoneNumbersInText } from '../../core/index.js'\r\n\r\nexport function searchPhoneNumbersInText() {\r\n\treturn withMetadataArgument(_searchPhoneNumbersInText, arguments)\r\n}", "// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nimport { PhoneNumberMatcher as _PhoneNumberMatcher } from '../../core/index.js'\r\n\r\nexport function PhoneNumberMatcher(text, options) {\r\n\treturn _PhoneNumberMatcher.call(this, text, options, metadata)\r\n}\r\nPhoneNumberMatcher.prototype = Object.create(_PhoneNumberMatcher.prototype, {})\r\nPhoneNumberMatcher.prototype.constructor = PhoneNumberMatcher\r\n", "// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nimport { AsYouType as _AsYouType } from '../../core/index.js'\r\n\r\nexport function AsYouType(country) {\r\n\treturn _AsYouType.call(this, country, metadata)\r\n}\r\n\r\nAsYouType.prototype = Object.create(_AsYouType.prototype, {})\r\nAsYouType.prototype.constructor = AsYouType", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { isSupportedCountry as _isSupportedCountry } from '../../core/index.js'\r\n\r\nexport function isSupportedCountry() {\r\n\treturn withMetadataArgument(_isSupportedCountry, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { getCountries as _getCountries } from '../../core/index.js'\r\n\r\nexport function getCountries() {\r\n\treturn withMetadataArgument(_getCountries, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { getCountryCallingCode as _getCountryCallingCode } from '../../core/index.js'\r\n\r\nexport function getCountryCallingCode() {\r\n\treturn withMetadataArgument(_getCountryCallingCode, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { getExtPrefix as _getExtPrefix } from '../../core/index.js'\r\n\r\nexport function getExtPrefix() {\r\n\treturn withMetadataArgument(_getExtPrefix, arguments)\r\n}", "// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nimport { Metadata as _Metadata } from '../../core/index.js'\r\n\r\nexport function Metadata() {\r\n\treturn _Metadata.call(this, metadata)\r\n}\r\n\r\nMetadata.prototype = Object.create(_Metadata.prototype, {})\r\nMetadata.prototype.constructor = Metadata", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { getExampleNumber as _getExampleNumber } from '../../core/index.js'\r\n\r\nexport function getExampleNumber() {\r\n\treturn withMetadataArgument(_getExampleNumber, arguments)\r\n}", "import withMetadataArgument from './withMetadataArgument.js'\r\nimport { formatIncompletePhoneNumber as _formatIncompletePhoneNumber } from '../../core/index.js'\r\n\r\nexport function formatIncompletePhoneNumber() {\r\n\treturn withMetadataArgument(_formatIncompletePhoneNumber, arguments)\r\n}", "import _parseNumber from '../parse.js'\r\nimport normalizeArguments from '../normalizeArguments.js'\r\n\r\nexport default function parseNumber() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _parseNumber(text, options, metadata)\r\n}", "import withMetadataArgument from '../min/exports/withMetadataArgument.js'\r\n\r\nimport _parse from '../es6/legacy/parse.js'\r\n\r\nexport function parse() {\r\n\treturn withMetadataArgument(_parse, arguments)\r\n}\r\n", "import _formatNumber from '../format.js'\r\nimport parse from '../parse.js'\r\n\r\nexport default function formatNumber() {\r\n\tconst {\r\n\t\tinput,\r\n\t\tformat,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t} = normalizeArguments(arguments)\r\n\r\n\treturn _formatNumber(input, format, options, metadata)\r\n}\r\n\r\n// Sort out arguments\r\nfunction normalizeArguments(args)\r\n{\r\n\tconst [arg_1, arg_2, arg_3, arg_4, arg_5] = Array.prototype.slice.call(args)\r\n\r\n\tlet input\r\n\tlet format\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// Sort out arguments.\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `format('8005553535', ...)`.\r\n\tif (typeof arg_1 === 'string')\r\n\t{\r\n\t\t// If country code is supplied.\r\n\t\t// `format('8005553535', 'RU', 'NATIONAL', [options], metadata)`.\r\n\t\tif (typeof arg_3 === 'string')\r\n\t\t{\r\n\t\t\tformat = arg_3\r\n\r\n\t\t\tif (arg_5)\r\n\t\t\t{\r\n\t\t\t\toptions  = arg_4\r\n\t\t\t\tmetadata = arg_5\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\r\n\t\t\tinput = parse(arg_1, { defaultCountry: arg_2, extended: true }, metadata)\r\n\t\t}\r\n\t\t// Just an international phone number is supplied\r\n\t\t// `format('+78005553535', 'NATIONAL', [options], metadata)`.\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (typeof arg_2 !== 'string')\r\n\t\t\t{\r\n\t\t\t\tthrow new Error('`format` argument not passed to `formatNumber(number, format)`')\r\n\t\t\t}\r\n\r\n\t\t\tformat = arg_2\r\n\r\n\t\t\tif (arg_4)\r\n\t\t\t{\r\n\t\t\t\toptions  = arg_3\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_3\r\n\t\t\t}\r\n\r\n\t\t\tinput = parse(arg_1, { extended: true }, metadata)\r\n\t\t}\r\n\t}\r\n\t// If the phone number is passed as a parsed number object.\r\n\t// `format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', [options], metadata)`.\r\n\telse if (is_object(arg_1))\r\n\t{\r\n\t\tinput  = arg_1\r\n\t\tformat = arg_2\r\n\r\n\t\tif (arg_4)\r\n\t\t{\r\n\t\t\toptions  = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\t}\r\n\telse throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.')\r\n\r\n\t// Legacy lowercase formats.\r\n\tif (format === 'International') {\r\n\t\tformat = 'INTERNATIONAL'\r\n\t} else if (format === 'National') {\r\n\t\tformat = 'NATIONAL'\r\n\t}\r\n\r\n\treturn {\r\n\t\tinput,\r\n\t\tformat,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'", "import withMetadataArgument from '../min/exports/withMetadataArgument.js'\r\n\r\nimport _format from '../es6/legacy/format.js'\r\n\r\nexport function format() {\r\n\treturn withMetadataArgument(_format, arguments)\r\n}\r\n", "import isViablePhoneNumber from '../helpers/isViablePhoneNumber.js'\r\nimport _getNumberType from '../helpers/getNumberType.js'\r\nimport parse from '../parse.js'\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function getNumberType() {\r\n\tconst { input, options, metadata } = normalizeArguments(arguments)\r\n\t// `parseNumber()` would return `{}` when no phone number could be parsed from the input.\r\n\tif (!input.phone) {\r\n\t\treturn\r\n\t}\r\n\treturn _getNumberType(input, options, metadata)\r\n}\r\n\r\n// Sort out arguments\r\nexport function normalizeArguments(args)\r\n{\r\n\tconst [arg_1, arg_2, arg_3, arg_4] = Array.prototype.slice.call(args)\r\n\r\n\tlet input\r\n\tlet options = {}\r\n\tlet metadata\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `getNumberType('88005553535', ...)`.\r\n\tif (typeof arg_1 === 'string')\r\n\t{\r\n\t\t// If \"default country\" argument is being passed\r\n\t\t// then convert it to an `options` object.\r\n\t\t// `getNumberType('88005553535', 'RU', metadata)`.\r\n\t\tif (typeof arg_2 !== 'object')\r\n\t\t{\r\n\t\t\tif (arg_4)\r\n\t\t\t{\r\n\t\t\t\toptions = arg_3\r\n\t\t\t\tmetadata = arg_4\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_3\r\n\t\t\t}\r\n\r\n\t\t\t// `parse` extracts phone numbers from raw text,\r\n\t\t\t// therefore it will cut off all \"garbage\" characters,\r\n\t\t\t// while this `validate` function needs to verify\r\n\t\t\t// that the phone number contains no \"garbage\"\r\n\t\t\t// therefore the explicit `isViablePhoneNumber` check.\r\n\t\t\tif (isViablePhoneNumber(arg_1))\r\n\t\t\t{\r\n\t\t\t\tinput = parse(arg_1, { defaultCountry: arg_2 }, metadata)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinput = {}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// No \"resrict country\" argument is being passed.\r\n\t\t// International phone number is passed.\r\n\t\t// `getNumberType('+78005553535', metadata)`.\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (arg_3)\r\n\t\t\t{\r\n\t\t\t\toptions = arg_2\r\n\t\t\t\tmetadata = arg_3\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmetadata = arg_2\r\n\t\t\t}\r\n\r\n\t\t\t// `parse` extracts phone numbers from raw text,\r\n\t\t\t// therefore it will cut off all \"garbage\" characters,\r\n\t\t\t// while this `validate` function needs to verify\r\n\t\t\t// that the phone number contains no \"garbage\"\r\n\t\t\t// therefore the explicit `isViablePhoneNumber` check.\r\n\t\t\tif (isViablePhoneNumber(arg_1))\r\n\t\t\t{\r\n\t\t\t\tinput = parse(arg_1, undefined, metadata)\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinput = {}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// If the phone number is passed as a parsed phone number.\r\n\t// `getNumberType({ phone: '88005553535', country: 'RU' }, ...)`.\r\n\telse if (is_object(arg_1))\r\n\t{\r\n\t\tinput = arg_1\r\n\r\n\t\tif (arg_3)\r\n\t\t{\r\n\t\t\toptions = arg_2\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tmetadata = arg_2\r\n\t\t}\r\n\t}\r\n\telse throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.')\r\n\r\n\treturn {\r\n\t\tinput,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst is_object = _ => typeof _ === 'object'", "import withMetadataArgument from '../min/exports/withMetadataArgument.js'\r\n\r\nimport _getNumberType from '../es6/legacy/getNumberType.js'\r\n\r\nexport function getNumberType() {\r\n\treturn withMetadataArgument(_getNumberType, arguments)\r\n}\r\n", "import { normalizeArguments } from './getNumberType.js'\r\nimport _isPossibleNumber from '../isPossible.js'\r\n\r\n/**\r\n * Checks if a given phone number is possible.\r\n * Which means it only checks phone number length\r\n * and doesn't test any regular expressions.\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isPossibleNumber('+78005553535', metadata)\r\n * isPossibleNumber('8005553535', 'RU', metadata)\r\n * isPossibleNumber('88005553535', 'RU', metadata)\r\n * isPossibleNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isPossibleNumber() {\r\n\tconst { input, options, metadata } = normalizeArguments(arguments)\r\n\t// `parseNumber()` would return `{}` when no phone number could be parsed from the input.\r\n\tif (!input.phone && !(options && options.v2)) {\r\n\t\treturn false\r\n\t}\r\n\treturn _isPossibleNumber(input, options, metadata)\r\n}", "// Deprecated.\r\n\r\nimport withMetadataArgument from '../min/exports/withMetadataArgument.js'\r\n\r\nimport _isPossibleNumber from '../es6/legacy/isPossibleNumber.js'\r\n\r\nexport function isPossibleNumber() {\r\n\treturn withMetadataArgument(_isPossibleNumber, arguments)\r\n}\r\n", "import _isValidNumber from '../isValid.js'\r\nimport { normalizeArguments } from './getNumberType.js'\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function isValidNumber() {\r\n\tconst { input, options, metadata } = normalizeArguments(arguments)\r\n\t// `parseNumber()` would return `{}` when no phone number could be parsed from the input.\r\n\tif (!input.phone) {\r\n\t\treturn false\r\n\t}\r\n\treturn _isValidNumber(input, options, metadata)\r\n}", "// Deprecated.\r\n\r\nimport withMetadataArgument from '../min/exports/withMetadataArgument.js'\r\n\r\nimport _isValidNumber from '../es6/legacy/isValidNumber.js'\r\n\r\nexport function isValidNumber() {\r\n\treturn withMetadataArgument(_isValidNumber, arguments)\r\n}\r\n", "import isValidNumber from '../isValid.js'\r\n\r\n/**\r\n * Checks if a given phone number is valid within a given region.\r\n * Is just an alias for `phoneNumber.isValid() && phoneNumber.country === country`.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n */\r\nexport default function isValidNumberForRegion(input, country, options, metadata) {\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\treturn input.country === country && isValidNumber(input, options, metadata)\r\n}", "import isViablePhoneNumber from '../helpers/isViablePhoneNumber.js'\r\nimport parseNumber from '../parse.js'\r\nimport _isValidNumberForRegion from './isValidNumberForRegion_.js'\r\n\r\n// This function has been deprecated and is not exported as\r\n// `isValidPhoneNumberForCountry()` or `isValidPhoneNumberForRegion()`.\r\n//\r\n// The rationale is:\r\n//\r\n// * We don't use the \"region\" word, so \"country\" would be better.\r\n//\r\n// * It could be substituted with:\r\n//\r\n// ```js\r\n// export default function isValidPhoneNumberForCountry(phoneNumberString, country) {\r\n// \tconst phoneNumber = parsePhoneNumber(phoneNumberString, {\r\n// \t\tdefaultCountry: country,\r\n// \t\t// Demand that the entire input string must be a phone number.\r\n// \t\t// Otherwise, it would \"extract\" a phone number from an input string.\r\n// \t\textract: false\r\n// \t})\r\n// \tif (!phoneNumber) {\r\n// \t\treturn false\r\n// \t}\r\n// \tif (phoneNumber.country !== country) {\r\n// \t\treturn false\r\n// \t}\r\n// \treturn phoneNumber.isValid()\r\n// }\r\n// ```\r\n//\r\n// * Same function could be used for `isPossiblePhoneNumberForCountry()`\r\n//   by replacing `isValid()` with `isPossible()`.\r\n//\r\n// * The reason why this function is not exported is because its result is ambiguous.\r\n//   Suppose `false` is returned. It could mean any of:\r\n//   * Not a phone number.\r\n//   * The phone number is valid but belongs to another country or another calling code.\r\n//   * The phone number belongs to the correct country but is not valid digit-wise.\r\n//   All those three cases should be handled separately from a \"User Experience\" standpoint.\r\n//   Simply showing \"Invalid phone number\" error in all of those cases would be lazy UX.\r\n\r\nexport default function isValidNumberForRegion(number, country, metadata) {\r\n\tif (typeof number !== 'string') {\r\n\t\tthrow new TypeError('number must be a string')\r\n\t}\r\n\tif (typeof country !== 'string') {\r\n\t\tthrow new TypeError('country must be a string')\r\n\t}\r\n\t// `parse` extracts phone numbers from raw text,\r\n\t// therefore it will cut off all \"garbage\" characters,\r\n\t// while this `validate` function needs to verify\r\n\t// that the phone number contains no \"garbage\"\r\n\t// therefore the explicit `isViablePhoneNumber` check.\r\n\tlet input\r\n\tif (isViablePhoneNumber(number)) {\r\n\t\tinput = parseNumber(number, { defaultCountry: country }, metadata)\r\n\t} else {\r\n\t\tinput = {}\r\n\t}\r\n\treturn _isValidNumberForRegion(input, country, undefined, metadata)\r\n}", "import withMetadataArgument from '../min/exports/withMetadataArgument.js'\r\n\r\nimport _isValidNumberForRegion from '../es6/legacy/isValidNumberForRegion.js'\r\n\r\nexport function isValidNumberForRegion() {\r\n\treturn withMetadataArgument(_isValidNumberForRegion, arguments)\r\n}\r\n", "// This is a legacy function.\r\n// Use `findNumbers()` instead.\r\n\r\nimport {\r\n\tPLUS_CHARS,\r\n\tVALID_PUNCTUATION,\r\n\tVALID_DIGITS,\r\n\tWHITESPACE\r\n} from '../constants.js'\r\n\r\nimport parse from '../parse.js'\r\nimport { VALID_PHONE_NUMBER_WITH_EXTENSION } from '../helpers/isViablePhoneNumber.js'\r\nimport createExtensionPattern from '../helpers/extension/createExtensionPattern.js'\r\n\r\nimport parsePreCandidate from '../findNumbers/parsePreCandidate.js'\r\nimport isValidPreCandidate from '../findNumbers/isValidPreCandidate.js'\r\nimport isValidCandidate from '../findNumbers/isValidCandidate.js'\r\n\r\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\r\nexport const EXTN_PATTERNS_FOR_PARSING = createExtensionPattern('parsing')\r\n\r\nconst WHITESPACE_IN_THE_BEGINNING_PATTERN = new RegExp('^[' + WHITESPACE + ']+')\r\nconst PUNCTUATION_IN_THE_END_PATTERN = new RegExp('[' + VALID_PUNCTUATION + ']+$')\r\n\r\n// // Regular expression for getting opening brackets for a valid number\r\n// // found using `PHONE_NUMBER_START_PATTERN` for prepending those brackets to the number.\r\n// const BEFORE_NUMBER_DIGITS_PUNCTUATION = new RegExp('[' + OPENING_BRACKETS + ']+' + '[' + WHITESPACE + ']*' + '$')\r\n\r\nconst VALID_PRECEDING_CHARACTER_PATTERN = /[^a-zA-Z0-9]/\r\n\r\nexport default function findPhoneNumbers(text, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\tconst search = new PhoneNumberSearch(text, options, metadata)\r\n\tconst phones = []\r\n\twhile (search.hasNext()) {\r\n\t\tphones.push(search.next())\r\n\t}\r\n\treturn phones\r\n}\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport function searchPhoneNumbers(text, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\tconst search = new PhoneNumberSearch(text, options, metadata)\r\n\treturn  {\r\n\t\t[Symbol.iterator]() {\r\n\t\t\treturn {\r\n\t    \t\tnext: () => {\r\n\t    \t\t\tif (search.hasNext()) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tdone: false,\r\n\t\t\t\t\t\t\tvalue: search.next()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t}\r\n\t    \t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts a parseable phone number including any opening brackets, etc.\r\n * @param  {string} text - Input.\r\n * @return {object} `{ ?number, ?startsAt, ?endsAt }`.\r\n */\r\nexport class PhoneNumberSearch {\r\n\tconstructor(text, options, metadata) {\r\n\t\tthis.text = text\r\n\t\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t\t// code coverage would decrease for some weird reason.\r\n\t\tthis.options = options || {}\r\n\t\tthis.metadata = metadata\r\n\r\n\t\t// Iteration tristate.\r\n\t\tthis.state = 'NOT_READY'\r\n\r\n\t\tthis.regexp = new RegExp(VALID_PHONE_NUMBER_WITH_EXTENSION, 'ig')\r\n\t}\r\n\r\n\tfind() {\r\n\t\tconst matches = this.regexp.exec(this.text)\r\n\t\tif (!matches) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet number = matches[0]\r\n\t\tlet startsAt = matches.index\r\n\r\n\t\tnumber = number.replace(WHITESPACE_IN_THE_BEGINNING_PATTERN, '')\r\n\t\tstartsAt += matches[0].length - number.length\r\n\t\t// Fixes not parsing numbers with whitespace in the end.\r\n\t\t// Also fixes not parsing numbers with opening parentheses in the end.\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/252\r\n\t\tnumber = number.replace(PUNCTUATION_IN_THE_END_PATTERN, '')\r\n\r\n\t\tnumber = parsePreCandidate(number)\r\n\r\n\t\tconst result = this.parseCandidate(number, startsAt)\r\n\t\tif (result) {\r\n\t\t\treturn result\r\n\t\t}\r\n\r\n\t\t// Tail recursion.\r\n\t\t// Try the next one if this one is not a valid phone number.\r\n\t\treturn this.find()\r\n\t}\r\n\r\n\tparseCandidate(number, startsAt) {\r\n\t\tif (!isValidPreCandidate(number, startsAt, this.text)) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Don't parse phone numbers which are non-phone numbers\r\n\t\t// due to being part of something else (e.g. a UUID).\r\n\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/213\r\n\t\t// Copy-pasted from Google's `PhoneNumberMatcher.js` (`.parseAndValidate()`).\r\n\t\tif (!isValidCandidate(number, startsAt, this.text, this.options.extended ? 'POSSIBLE' : 'VALID')) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// // Prepend any opening brackets left behind by the\r\n\t\t// // `PHONE_NUMBER_START_PATTERN` regexp.\r\n\t\t// const text_before_number = text.slice(this.searching_from, startsAt)\r\n\t\t// const full_number_starts_at = text_before_number.search(BEFORE_NUMBER_DIGITS_PUNCTUATION)\r\n\t\t// if (full_number_starts_at >= 0)\r\n\t\t// {\r\n\t\t// \tnumber   = text_before_number.slice(full_number_starts_at) + number\r\n\t\t// \tstartsAt = full_number_starts_at\r\n\t\t// }\r\n\t\t//\r\n\t\t// this.searching_from = matches.lastIndex\r\n\r\n\t\tconst result = parse(number, this.options, this.metadata)\r\n\t\tif (!result.phone) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tresult.startsAt = startsAt\r\n\t\tresult.endsAt = startsAt + number.length\r\n\t\treturn result\r\n\t}\r\n\r\n\thasNext() {\r\n\t\tif (this.state === 'NOT_READY') {\r\n\t\t\tthis.last_match = this.find()\r\n\t\t\tif (this.last_match) {\r\n\t\t\t\tthis.state = 'READY'\r\n\t\t\t} else {\r\n\t\t\t\tthis.state = 'DONE'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.state === 'READY'\r\n\t}\r\n\r\n\tnext() {\r\n\t\t// Check the state and find the next match as a side-effect if necessary.\r\n\t\tif (!this.hasNext()) {\r\n\t\t\tthrow new Error('No next element')\r\n\t\t}\r\n\t\t// Don't retain that memory any longer than necessary.\r\n\t\tconst result = this.last_match\r\n\t\tthis.last_match = null\r\n\t\tthis.state = 'NOT_READY'\r\n\t\treturn result\r\n\t}\r\n}", "// This is a legacy function.\r\n// Use `findNumbers()` instead.\r\n\r\nimport _findPhoneNumbers, { searchPhoneNumbers as _searchPhoneNumbers } from './findPhoneNumbersInitialImplementation.js'\r\nimport normalizeArguments from '../normalizeArguments.js'\r\n\r\nexport default function findPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _findPhoneNumbers(text, options, metadata)\r\n}\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport function searchPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _searchPhoneNumbers(text, options, metadata)\r\n}", "import withMetadataArgument from '../min/exports/withMetadataArgument.js'\r\n\r\nimport _findPhoneNumbers from '../es6/legacy/findPhoneNumbers.js'\r\n\r\nexport function findPhoneNumbers() {\r\n\treturn withMetadataArgument(_findPhoneNumbers, arguments)\r\n}\r\n", "import withMetadataArgument from '../min/exports/withMetadataArgument.js'\r\n\r\nimport { searchPhoneNumbers as _searchPhoneNumbers } from '../es6/legacy/findPhoneNumbers.js'\r\n\r\nexport function searchPhoneNumbers() {\r\n\treturn withMetadataArgument(_searchPhoneNumbers, arguments)\r\n}\r\n", "// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../metadata.min.json.js'\r\n\r\nimport { PhoneNumberSearch as _PhoneNumberSearch } from '../es6/legacy/findPhoneNumbersInitialImplementation.js'\r\n\r\nexport function PhoneNumberSearch(text, options) {\r\n\t_PhoneNumberSearch.call(this, text, options, metadata)\r\n}\r\n\r\n// Deprecated.\r\nPhoneNumberSearch.prototype = Object.create(_PhoneNumberSearch.prototype, {})\r\nPhoneNumberSearch.prototype.constructor = PhoneNumberSearch\r\n", "// `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\r\nexport { parsePhoneNumberWithError, parsePhoneNumberWithError as parsePhoneNumber } from './min/exports/parsePhoneNumberWithError.js'\r\n// `parsePhoneNumberFromString()` named export is now considered legacy:\r\n// it has been promoted to a default export due to being too verbose.\r\nexport { parsePhoneNumber as parsePhoneNumberFromString, parsePhoneNumber as default } from './min/exports/parsePhoneNumber.js'\r\n\r\nexport { isValidPhoneNumber } from './min/exports/isValidPhoneNumber.js'\r\nexport { isPossiblePhoneNumber } from './min/exports/isPossiblePhoneNumber.js'\r\nexport { validatePhoneNumberLength } from './min/exports/validatePhoneNumberLength.js'\r\n\r\n// Deprecated.\r\nexport { findNumbers } from './min/exports/findNumbers.js'\r\nexport { searchNumbers } from './min/exports/searchNumbers.js'\r\n\r\nexport { findPhoneNumbersInText } from './min/exports/findPhoneNumbersInText.js'\r\nexport { searchPhoneNumbersInText } from './min/exports/searchPhoneNumbersInText.js'\r\nexport { PhoneNumberMatcher } from './min/exports/PhoneNumberMatcher.js'\r\n\r\nexport { AsYouType } from './min/exports/AsYouType.js'\r\nexport { DIGIT_PLACEHOLDER } from './es6/AsYouTypeFormatter.js'\r\n\r\nexport { isSupportedCountry } from './min/exports/isSupportedCountry.js'\r\nexport { getCountries } from './min/exports/getCountries.js'\r\n// `getPhoneCode` name is deprecated, use `getCountryCallingCode` instead.\r\nexport { getCountryCallingCode, getCountryCallingCode as getPhoneCode } from './min/exports/getCountryCallingCode.js'\r\nexport { getExtPrefix } from './min/exports/getExtPrefix.js'\r\n\r\nexport { Metadata } from './min/exports/Metadata.js'\r\nexport { getExampleNumber } from './min/exports/getExampleNumber.js'\r\n\r\nexport { formatIncompletePhoneNumber } from './min/exports/formatIncompletePhoneNumber.js'\r\n\r\nexport {\r\n\tParseError,\r\n\tparseIncompletePhoneNumber,\r\n\tparsePhoneNumberCharacter,\r\n\tparseDigits,\r\n\tparseRFC3966,\r\n\tformatRFC3966\r\n} from './core/index.js'\r\n\r\n// Deprecated (old) exports.\r\nexport { parse as parseNumber, parse } from './index.es6.exports/parse.js'\r\nexport { format as formatNumber, format } from './index.es6.exports/format.js'\r\nexport { getNumberType } from './index.es6.exports/getNumberType.js'\r\nexport { isPossibleNumber } from './index.es6.exports/isPossibleNumber.js'\r\nexport { isValidNumber } from './index.es6.exports/isValidNumber.js'\r\nexport { isValidNumberForRegion } from './index.es6.exports/isValidNumberForRegion.js'\r\nexport { findPhoneNumbers } from './index.es6.exports/findPhoneNumbers.js'\r\nexport { searchPhoneNumbers } from './index.es6.exports/searchPhoneNumbers.js'\r\nexport { PhoneNumberSearch } from './index.es6.exports/PhoneNumberSearch.js'\r\n\r\n// Deprecated DIGITS export.\r\n// (it was used in `react-phone-number-input`)\r\nexport { DIGITS } from './es6/helpers/parseDigits.js'\r\n\r\n// Deprecated \"custom\" exports.\r\nexport { default as parseCustom } from './es6/legacy/parse.js'\r\nexport { default as formatCustom } from './es6/legacy/format.js'\r\nexport { default as isValidNumberCustom } from './es6/legacy/isValidNumber.js'\r\nexport { default as findPhoneNumbersCustom } from './es6/legacy/findPhoneNumbers.js'\r\nexport { searchPhoneNumbers as searchPhoneNumbersCustom } from './es6/legacy/findPhoneNumbers.js'\r\nexport { PhoneNumberSearch as PhoneNumberSearchCustom } from './es6/legacy/findPhoneNumbersInitialImplementation.js'\r\nexport { default as getNumberTypeCustom } from './es6/legacy/getNumberType.js'\r\nexport { default as getCountryCallingCodeCustom, default as getPhoneCodeCustom } from './es6/getCountryCallingCode.js'\r\nexport { default as AsYouTypeCustom } from './es6/AsYouType.js'\r\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { parsePhoneNumberFromString, CountryCode } from 'libphonenumber-js';\n\nexport const IS_PHONE_NUMBER = 'isPhoneNumber';\n\n/**\n * Checks if the string is a valid phone number. To successfully validate any phone number the text must include\n * the intl. calling code, if the calling code wont be provided then the region must be set.\n *\n * @param value the potential phone number string to test\n * @param region 2 characters uppercase country code (e.g. DE, US, CH) for country specific validation.\n * If text doesn't start with the international calling code (e.g. +41), then you must set this parameter.\n */\nexport function isPhoneNumber(value: string, region?: CountryCode): boolean {\n  try {\n    const phoneNum = parsePhoneNumberFromString(value, region);\n    const result = phoneNum?.isValid();\n    return !!result;\n  } catch (error) {\n    // logging?\n    return false;\n  }\n}\n\n/**\n * Checks if the string is a valid phone number. To successfully validate any phone number the text must include\n * the intl. calling code, if the calling code wont be provided then the region must be set.\n *\n * @param region 2 characters uppercase country code (e.g. DE, US, CH) for country specific validation.\n * If text doesn't start with the international calling code (e.g. +41), then you must set this parameter.\n */\nexport function IsPhoneNumber(region?: CountryCode, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_PHONE_NUMBER,\n      constraints: [region],\n      validator: {\n        validate: (value, args): boolean => isPhoneNumber(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid phone number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\n\nexport const IS_MILITARY_TIME = 'isMilitaryTime';\n\n/**\n * Checks if the string represents a time without a given timezone in the format HH:MM (military)\n * If the given value does not match the pattern HH:MM, then it returns false.\n */\nexport function isMilitaryTime(value: unknown): boolean {\n  const militaryTimeRegex = /^([01]\\d|2[0-3]):?([0-5]\\d)$/;\n  return typeof value === 'string' && matchesValidator(value, militaryTimeRegex);\n}\n\n/**\n * Checks if the string represents a time without a given timezone in the format HH:MM (military)\n * If the given value does not match the pattern HH:MM, then it returns false.\n */\nexport function IsMilitaryTime(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MILITARY_TIME,\n      validator: {\n        validate: (value, args): boolean => isMilitaryTime(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid representation of military time in the format HH:MM',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHash;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar lengths = {\n  md5: 32,\n  md4: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8\n};\n\nfunction isHash(str, algorithm) {\n  (0, _assertString.default)(str);\n  var hash = new RegExp(\"^[a-fA-F0-9]{\".concat(lengths[algorithm], \"}$\"));\n  return hash.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHashValidator from 'validator/lib/isHash';\nimport ValidatorJS from 'validator';\n\nexport const IS_HASH = 'isHash';\n\n/**\n * Check if the string is a hash of type algorithm.\n * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',\n * 'tiger160', 'tiger192', 'crc32', 'crc32b']\n */\nexport function isHash(value: unknown, algorithm: ValidatorJS.HashAlgorithm): boolean {\n  return typeof value === 'string' && isHashValidator(value, algorithm);\n}\n\n/**\n * Check if the string is a hash of type algorithm.\n * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',\n * 'tiger160', 'tiger192', 'crc32', 'crc32b']\n */\nexport function IsHash(algorithm: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HASH,\n      constraints: [algorithm],\n      validator: {\n        validate: (value, args): boolean => isHash(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a hash of type $constraint1',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISSN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\n\nfunction isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n\n  if (!testIssn.test(str)) {\n    return false;\n  }\n\n  var digits = str.replace('-', '').toUpperCase();\n  var checksum = 0;\n\n  for (var i = 0; i < digits.length; i++) {\n    var digit = digits[i];\n    checksum += (digit === 'X' ? 10 : +digit) * (8 - i);\n  }\n\n  return checksum % 11 === 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISSNValidator from 'validator/lib/isISSN';\nimport ValidatorJS from 'validator';\n\nexport const IS_ISSN = 'isISSN';\n\n/**\n * Checks if the string is a ISSN.\n * If given value is not a string, then it returns false.\n */\nexport function isISSN(value: unknown, options?: ValidatorJS.IsISSNOptions): boolean {\n  return typeof value === 'string' && isISSNValidator(value, options);\n}\n\n/**\n * Checks if the string is a ISSN.\n * If given value is not a string, then it returns false.\n */\nexport function IsISSN(options?: ValidatorJS.IsISSNOptions, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISSN,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isISSN(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a ISSN', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport ValidatorJS from 'validator';\nimport { isISO8601 } from './IsISO8601';\n\nexport const IS_DATE_STRING = 'isDateString';\n\n/**\n * Alias for IsISO8601 validator\n */\nexport function isDateString(value: unknown, options?: ValidatorJS.IsISO8601Options): boolean {\n  return isISO8601(value, options);\n}\n\n/**\n * Alias for IsISO8601 validator\n */\nexport function IsDateString(\n  options?: ValidatorJS.IsISO8601Options,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DATE_STRING,\n      constraints: [options],\n      validator: {\n        validate: (value): boolean => isDateString(value, options),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO 8601 date string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBoolean;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultOptions = {\n  loose: false\n};\nvar strictBooleans = ['true', 'false', '1', '0'];\nvar looseBooleans = [].concat(strictBooleans, ['yes', 'no']);\n\nfunction isBoolean(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  (0, _assertString.default)(str);\n\n  if (options.loose) {\n    return looseBooleans.includes(str.toLowerCase());\n  }\n\n  return strictBooleans.includes(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBooleanValidator from 'validator/lib/isBoolean';\n\nexport const IS_BOOLEAN_STRING = 'isBooleanString';\n\n/**\n * Checks if a string is a boolean.\n * If given value is not a string, then it returns false.\n */\nexport function isBooleanString(value: unknown): boolean {\n  return typeof value === 'string' && isBooleanValidator(value);\n}\n\n/**\n * Checks if a string is a boolean.\n * If given value is not a string, then it returns false.\n */\nexport function IsBooleanString(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BOOLEAN_STRING,\n      validator: {\n        validate: (value, args): boolean => isBooleanString(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a boolean string',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isNumeric;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar numericNoSymbols = /^[0-9]+$/;\n\nfunction isNumeric(str, options) {\n  (0, _assertString.default)(str);\n\n  if (options && options.no_symbols) {\n    return numericNoSymbols.test(str);\n  }\n\n  return new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? _alpha.decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isNumericValidator from 'validator/lib/isNumeric';\nimport ValidatorJS from 'validator';\n\nexport const IS_NUMBER_STRING = 'isNumberString';\n\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\nexport function isNumberString(value: unknown, options?: ValidatorJS.IsNumericOptions): boolean {\n  return typeof value === 'string' && isNumericValidator(value, options);\n}\n\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\nexport function IsNumberString(\n  options?: ValidatorJS.IsNumericOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NUMBER_STRING,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isNumberString(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a number string', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase32;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar base32 = /^[A-Z2-7]+=*$/;\nvar crockfordBase32 = /^[A-HJKMNP-TV-Z0-9]+$/;\nvar defaultBase32Options = {\n  crockford: false\n};\n\nfunction isBase32(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase32Options);\n\n  if (options.crockford) {\n    return crockfordBase32.test(str);\n  }\n\n  var len = str.length;\n\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase32Validator from 'validator/lib/isBase32';\n\nexport const IS_BASE32 = 'isBase32';\n\n/**\n * Checks if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function isBase32(value: unknown): boolean {\n  return typeof value === 'string' && isBase32Validator(value);\n}\n\n/**\n * Check if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function IsBase32(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BASE32,\n      validator: {\n        validate: (value, args): boolean => isBase32(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be base32 encoded', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBIC;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isISO31661Alpha = require(\"./isISO31661Alpha2\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// https://en.wikipedia.org/wiki/ISO_9362\nvar isBICReg = /^[A-Za-z]{6}[A-Za-z0-9]{2}([A-Za-z0-9]{3})?$/;\n\nfunction isBIC(str) {\n  (0, _assertString.default)(str); // toUpperCase() should be removed when a new major version goes out that changes\n  // the regex to [A-Z] (per the spec).\n\n  var countryCode = str.slice(4, 6).toUpperCase();\n\n  if (!_isISO31661Alpha.CountryCodes.has(countryCode) && countryCode !== 'XK') {\n    return false;\n  }\n\n  return isBICReg.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBICValidator from 'validator/lib/isBIC';\n\nexport const IS_BIC = 'isBIC';\n\n/**\n * Check if a string is a BIC (Bank Identification Code) or SWIFT code.\n * If given value is not a string, then it returns false.\n */\nexport function isBIC(value: unknown): boolean {\n  return typeof value === 'string' && isBICValidator(value);\n}\n\n/**\n * Check if a string is a BIC (Bank Identification Code) or SWIFT code.\n * If given value is not a string, then it returns false.\n */\nexport function IsBIC(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BIC,\n      validator: {\n        validate: (value, args): boolean => isBIC(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a BIC or SWIFT code',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBtcAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar bech32 = /^(bc1)[a-z0-9]{25,39}$/;\nvar base58 = /^(1|3)[A-HJ-NP-Za-km-z1-9]{25,39}$/;\n\nfunction isBtcAddress(str) {\n  (0, _assertString.default)(str);\n  return bech32.test(str) || base58.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBtcAddressValidator from 'validator/lib/isBtcAddress';\n\nexport const IS_BTC_ADDRESS = 'isBtcAddress';\n\n/**\n * Check if the string is a valid BTC address.\n * If given value is not a string, then it returns false.\n */\nexport function isBtcAddress(value: unknown): boolean {\n  return typeof value === 'string' && isBtcAddressValidator(value);\n}\n\n/**\n * Check if the string is a valid BTC address.\n * If given value is not a string, then it returns false.\n */\nexport function IsBtcAddress(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BTC_ADDRESS,\n      validator: {\n        validate: (value, args): boolean => isBtcAddress(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a BTC address', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDataURI;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validMediaType = /^[a-z]+\\/[a-z0-9\\-\\+\\._]+$/i;\nvar validAttribute = /^[a-z\\-]+=[a-z0-9\\-]+$/i;\nvar validData = /^[a-z0-9!\\$&'\\(\\)\\*\\+,;=\\-\\._~:@\\/\\?%\\s]*$/i;\n\nfunction isDataURI(str) {\n  (0, _assertString.default)(str);\n  var data = str.split(',');\n\n  if (data.length < 2) {\n    return false;\n  }\n\n  var attributes = data.shift().trim().split(';');\n  var schemeAndMediaType = attributes.shift();\n\n  if (schemeAndMediaType.slice(0, 5) !== 'data:') {\n    return false;\n  }\n\n  var mediaType = schemeAndMediaType.slice(5);\n\n  if (mediaType !== '' && !validMediaType.test(mediaType)) {\n    return false;\n  }\n\n  for (var i = 0; i < attributes.length; i++) {\n    if (!(i === attributes.length - 1 && attributes[i].toLowerCase() === 'base64') && !validAttribute.test(attributes[i])) {\n      return false;\n    }\n  }\n\n  for (var _i = 0; _i < data.length; _i++) {\n    if (!validData.test(data[_i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDataURIValidator from 'validator/lib/isDataURI';\n\nexport const IS_DATA_URI = 'isDataURI';\n\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isDataURI(value: unknown): boolean {\n  return typeof value === 'string' && isDataURIValidator(value);\n}\n\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsDataURI(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DATA_URI,\n      validator: {\n        validate: (value, args): boolean => isDataURI(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a data uri format',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEAN;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The most commonly used EAN standard is\n * the thirteen-digit EAN-13, while the\n * less commonly used 8-digit EAN-8 barcode was\n * introduced for use on small packages.\n * Also EAN/UCC-14 is used for Grouping of individual\n * trade items above unit level(Intermediate, Carton or Pallet).\n * For more info about EAN-14 checkout: https://www.gtin.info/itf-14-barcodes/\n * EAN consists of:\n * GS1 prefix, manufacturer code, product code and check digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number\n * Reference: https://www.gtin.info/\n */\n\n/**\n * Define EAN Lenghts; 8 for EAN-8; 13 for EAN-13; 14 for EAN-14\n * and Regular Expression for valid EANs (EAN-8, EAN-13, EAN-14),\n * with exact numberic matching of 8 or 13 or 14 digits [0-9]\n */\nvar LENGTH_EAN_8 = 8;\nvar LENGTH_EAN_14 = 14;\nvar validEanRegex = /^(\\d{8}|\\d{13}|\\d{14})$/;\n/**\n * Get position weight given:\n * EAN length and digit index/position\n *\n * @param {number} length\n * @param {number} index\n * @return {number}\n */\n\nfunction getPositionWeightThroughLengthAndIndex(length, index) {\n  if (length === LENGTH_EAN_8 || length === LENGTH_EAN_14) {\n    return index % 2 === 0 ? 3 : 1;\n  }\n\n  return index % 2 === 0 ? 1 : 3;\n}\n/**\n * Calculate EAN Check Digit\n * Reference: https://en.wikipedia.org/wiki/International_Article_Number#Calculation_of_checksum_digit\n *\n * @param {string} ean\n * @return {number}\n */\n\n\nfunction calculateCheckDigit(ean) {\n  var checksum = ean.slice(0, -1).split('').map(function (char, index) {\n    return Number(char) * getPositionWeightThroughLengthAndIndex(ean.length, index);\n  }).reduce(function (acc, partialSum) {\n    return acc + partialSum;\n  }, 0);\n  var remainder = 10 - checksum % 10;\n  return remainder < 10 ? remainder : 0;\n}\n/**\n * Check if string is valid EAN:\n * Matches EAN-8/EAN-13/EAN-14 regex\n * Has valid check digit.\n *\n * @param {string} str\n * @return {boolean}\n */\n\n\nfunction isEAN(str) {\n  (0, _assertString.default)(str);\n  var actualCheckDigit = Number(str.slice(-1));\n  return validEanRegex.test(str) && actualCheckDigit === calculateCheckDigit(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEANValidator from 'validator/lib/isEAN';\n\nexport const IS_EAN = 'isEAN';\n\n/**\n * Check if the string is an EAN (European Article Number).\n * If given value is not a string, then it returns false.\n */\nexport function isEAN(value: unknown): boolean {\n  return typeof value === 'string' && isEANValidator(value);\n}\n\n/**\n * Check if the string is an EAN (European Article Number).\n * If given value is not a string, then it returns false.\n */\nexport function IsEAN(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_EAN,\n      validator: {\n        validate: (value, args): boolean => isEAN(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an EAN (European Article Number)',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEthereumAddress;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar eth = /^(0x)[0-9a-f]{40}$/i;\n\nfunction isEthereumAddress(str) {\n  (0, _assertString.default)(str);\n  return eth.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isEthereumAddressValidator from 'validator/lib/isEthereumAddress';\n\nexport const IS_ETHEREUM_ADDRESS = 'isEthereumAddress';\n\n/**\n * Check if the string is an Ethereum address using basic regex. Does not validate address checksums.\n * If given value is not a string, then it returns false.\n */\nexport function isEthereumAddress(value: unknown): boolean {\n  return typeof value === 'string' && isEthereumAddressValidator(value);\n}\n\n/**\n * Check if the string is an Ethereum address using basic regex. Does not validate address checksums.\n * If given value is not a string, then it returns false.\n */\nexport function IsEthereumAddress(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ETHEREUM_ADDRESS,\n      validator: {\n        validate: (value, args): boolean => isEthereumAddress(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an Ethereum address',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHSL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hslComma = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(,(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}(,((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?))?\\)$/i;\nvar hslSpace = /^hsla?\\(((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?))(deg|grad|rad|turn)?(\\s(\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%){2}\\s?(\\/\\s((\\+|\\-)?([0-9]+(\\.[0-9]+)?(e(\\+|\\-)?[0-9]+)?|\\.[0-9]+(e(\\+|\\-)?[0-9]+)?)%?)\\s?)?\\)$/i;\n\nfunction isHSL(str) {\n  (0, _assertString.default)(str); // Strip duplicate spaces before calling the validation regex (See  #1598 for more info)\n\n  var strippedStr = str.replace(/\\s+/g, ' ').replace(/\\s?(hsla?\\(|\\)|,)\\s?/ig, '$1');\n\n  if (strippedStr.indexOf(',') !== -1) {\n    return hslComma.test(strippedStr);\n  }\n\n  return hslSpace.test(strippedStr);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHSLValidator from 'validator/lib/isHSL';\n\nexport const IS_HSL = 'isHSL';\n\n/**\n * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.\n * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).\n * If given value is not a string, then it returns false.\n */\nexport function isHSL(value: unknown): boolean {\n  return typeof value === 'string' && isHSLValidator(value);\n}\n\n/**\n * Check if the string is an HSL (hue, saturation, lightness, optional alpha) color based on CSS Colors Level 4 specification.\n * Comma-separated format supported. Space-separated format supported with the exception of a few edge cases (ex: hsl(200grad+.1%62%/1)).\n * If given value is not a string, then it returns false.\n */\nexport function IsHSL(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_HSL,\n      validator: {\n        validate: (value, args): boolean => isHSL(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a HSL color', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIBAN;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * List of country codes with\n * corresponding IBAN regular expression\n * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n */\nvar ibanRegexThroughCountryCode = {\n  AD: /^(AD[0-9]{2})\\d{8}[A-Z0-9]{12}$/,\n  AE: /^(AE[0-9]{2})\\d{3}\\d{16}$/,\n  AL: /^(AL[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  AT: /^(AT[0-9]{2})\\d{16}$/,\n  AZ: /^(AZ[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  BA: /^(BA[0-9]{2})\\d{16}$/,\n  BE: /^(BE[0-9]{2})\\d{12}$/,\n  BG: /^(BG[0-9]{2})[A-Z]{4}\\d{6}[A-Z0-9]{8}$/,\n  BH: /^(BH[0-9]{2})[A-Z]{4}[A-Z0-9]{14}$/,\n  BR: /^(BR[0-9]{2})\\d{23}[A-Z]{1}[A-Z0-9]{1}$/,\n  BY: /^(BY[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  CH: /^(CH[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  CR: /^(CR[0-9]{2})\\d{18}$/,\n  CY: /^(CY[0-9]{2})\\d{8}[A-Z0-9]{16}$/,\n  CZ: /^(CZ[0-9]{2})\\d{20}$/,\n  DE: /^(DE[0-9]{2})\\d{18}$/,\n  DK: /^(DK[0-9]{2})\\d{14}$/,\n  DO: /^(DO[0-9]{2})[A-Z]{4}\\d{20}$/,\n  EE: /^(EE[0-9]{2})\\d{16}$/,\n  EG: /^(EG[0-9]{2})\\d{25}$/,\n  ES: /^(ES[0-9]{2})\\d{20}$/,\n  FI: /^(FI[0-9]{2})\\d{14}$/,\n  FO: /^(FO[0-9]{2})\\d{14}$/,\n  FR: /^(FR[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  GB: /^(GB[0-9]{2})[A-Z]{4}\\d{14}$/,\n  GE: /^(GE[0-9]{2})[A-Z0-9]{2}\\d{16}$/,\n  GI: /^(GI[0-9]{2})[A-Z]{4}[A-Z0-9]{15}$/,\n  GL: /^(GL[0-9]{2})\\d{14}$/,\n  GR: /^(GR[0-9]{2})\\d{7}[A-Z0-9]{16}$/,\n  GT: /^(GT[0-9]{2})[A-Z0-9]{4}[A-Z0-9]{20}$/,\n  HR: /^(HR[0-9]{2})\\d{17}$/,\n  HU: /^(HU[0-9]{2})\\d{24}$/,\n  IE: /^(IE[0-9]{2})[A-Z0-9]{4}\\d{14}$/,\n  IL: /^(IL[0-9]{2})\\d{19}$/,\n  IQ: /^(IQ[0-9]{2})[A-Z]{4}\\d{15}$/,\n  IR: /^(IR[0-9]{2})0\\d{2}0\\d{18}$/,\n  IS: /^(IS[0-9]{2})\\d{22}$/,\n  IT: /^(IT[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  JO: /^(JO[0-9]{2})[A-Z]{4}\\d{22}$/,\n  KW: /^(KW[0-9]{2})[A-Z]{4}[A-Z0-9]{22}$/,\n  KZ: /^(KZ[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LB: /^(LB[0-9]{2})\\d{4}[A-Z0-9]{20}$/,\n  LC: /^(LC[0-9]{2})[A-Z]{4}[A-Z0-9]{24}$/,\n  LI: /^(LI[0-9]{2})\\d{5}[A-Z0-9]{12}$/,\n  LT: /^(LT[0-9]{2})\\d{16}$/,\n  LU: /^(LU[0-9]{2})\\d{3}[A-Z0-9]{13}$/,\n  LV: /^(LV[0-9]{2})[A-Z]{4}[A-Z0-9]{13}$/,\n  MC: /^(MC[0-9]{2})\\d{10}[A-Z0-9]{11}\\d{2}$/,\n  MD: /^(MD[0-9]{2})[A-Z0-9]{20}$/,\n  ME: /^(ME[0-9]{2})\\d{18}$/,\n  MK: /^(MK[0-9]{2})\\d{3}[A-Z0-9]{10}\\d{2}$/,\n  MR: /^(MR[0-9]{2})\\d{23}$/,\n  MT: /^(MT[0-9]{2})[A-Z]{4}\\d{5}[A-Z0-9]{18}$/,\n  MU: /^(MU[0-9]{2})[A-Z]{4}\\d{19}[A-Z]{3}$/,\n  MZ: /^(MZ[0-9]{2})\\d{21}$/,\n  NL: /^(NL[0-9]{2})[A-Z]{4}\\d{10}$/,\n  NO: /^(NO[0-9]{2})\\d{11}$/,\n  PK: /^(PK[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  PL: /^(PL[0-9]{2})\\d{24}$/,\n  PS: /^(PS[0-9]{2})[A-Z0-9]{4}\\d{21}$/,\n  PT: /^(PT[0-9]{2})\\d{21}$/,\n  QA: /^(QA[0-9]{2})[A-Z]{4}[A-Z0-9]{21}$/,\n  RO: /^(RO[0-9]{2})[A-Z]{4}[A-Z0-9]{16}$/,\n  RS: /^(RS[0-9]{2})\\d{18}$/,\n  SA: /^(SA[0-9]{2})\\d{2}[A-Z0-9]{18}$/,\n  SC: /^(SC[0-9]{2})[A-Z]{4}\\d{20}[A-Z]{3}$/,\n  SE: /^(SE[0-9]{2})\\d{20}$/,\n  SI: /^(SI[0-9]{2})\\d{15}$/,\n  SK: /^(SK[0-9]{2})\\d{20}$/,\n  SM: /^(SM[0-9]{2})[A-Z]{1}\\d{10}[A-Z0-9]{12}$/,\n  SV: /^(SV[0-9]{2})[A-Z0-9]{4}\\d{20}$/,\n  TL: /^(TL[0-9]{2})\\d{19}$/,\n  TN: /^(TN[0-9]{2})\\d{20}$/,\n  TR: /^(TR[0-9]{2})\\d{5}[A-Z0-9]{17}$/,\n  UA: /^(UA[0-9]{2})\\d{6}[A-Z0-9]{19}$/,\n  VA: /^(VA[0-9]{2})\\d{18}$/,\n  VG: /^(VG[0-9]{2})[A-Z0-9]{4}\\d{16}$/,\n  XK: /^(XK[0-9]{2})\\d{16}$/\n};\n/**\n * Check whether string has correct universal IBAN format\n * The IBAN consists of up to 34 alphanumeric characters, as follows:\n * Country Code using ISO 3166-1 alpha-2, two letters\n * check digits, two digits and\n * Basic Bank Account Number (BBAN), up to 30 alphanumeric characters.\n * NOTE: Permitted IBAN characters are: digits [0-9] and the 26 latin alphabetic [A-Z]\n *\n * @param {string} str - string under validation\n * @return {boolean}\n */\n\nfunction hasValidIbanFormat(str) {\n  // Strip white spaces and hyphens\n  var strippedStr = str.replace(/[\\s\\-]+/gi, '').toUpperCase();\n  var isoCountryCode = strippedStr.slice(0, 2).toUpperCase();\n  return isoCountryCode in ibanRegexThroughCountryCode && ibanRegexThroughCountryCode[isoCountryCode].test(strippedStr);\n}\n/**\n   * Check whether string has valid IBAN Checksum\n   * by performing basic mod-97 operation and\n   * the remainder should equal 1\n   * -- Start by rearranging the IBAN by moving the four initial characters to the end of the string\n   * -- Replace each letter in the string with two digits, A -> 10, B = 11, Z = 35\n   * -- Interpret the string as a decimal integer and\n   * -- compute the remainder on division by 97 (mod 97)\n   * Reference: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n   *\n   * @param {string} str\n   * @return {boolean}\n   */\n\n\nfunction hasValidIbanChecksum(str) {\n  var strippedStr = str.replace(/[^A-Z0-9]+/gi, '').toUpperCase(); // Keep only digits and A-Z latin alphabetic\n\n  var rearranged = strippedStr.slice(4) + strippedStr.slice(0, 4);\n  var alphaCapsReplacedWithDigits = rearranged.replace(/[A-Z]/g, function (char) {\n    return char.charCodeAt(0) - 55;\n  });\n  var remainder = alphaCapsReplacedWithDigits.match(/\\d{1,7}/g).reduce(function (acc, value) {\n    return Number(acc + value) % 97;\n  }, '');\n  return remainder === 1;\n}\n\nfunction isIBAN(str) {\n  (0, _assertString.default)(str);\n  return hasValidIbanFormat(str) && hasValidIbanChecksum(str);\n}\n\nvar locales = Object.keys(ibanRegexThroughCountryCode);\nexports.locales = locales;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIBANValidator from 'validator/lib/isIBAN';\n\nexport const IS_IBAN = 'isIBAN';\n\n/**\n * Check if a string is a IBAN (International Bank Account Number).\n * If given value is not a string, then it returns false.\n */\nexport function isIBAN(value: unknown): boolean {\n  return typeof value === 'string' && isIBANValidator(value);\n}\n\n/**\n * Check if a string is a IBAN (International Bank Account Number).\n * If given value is not a string, then it returns false.\n */\nexport function IsIBAN(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_IBAN,\n      validator: {\n        validate: (value, args): boolean => isIBAN(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an IBAN', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIdentityCard;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validators = {\n  PL: function PL(str) {\n    (0, _assertString.default)(str);\n    var weightOfDigits = {\n      1: 1,\n      2: 3,\n      3: 7,\n      4: 9,\n      5: 1,\n      6: 3,\n      7: 7,\n      8: 9,\n      9: 1,\n      10: 3,\n      11: 0\n    };\n\n    if (str != null && str.length === 11 && (0, _isInt.default)(str, {\n      allow_leading_zeroes: true\n    })) {\n      var digits = str.split('').slice(0, -1);\n      var sum = digits.reduce(function (acc, digit, index) {\n        return acc + Number(digit) * weightOfDigits[index + 1];\n      }, 0);\n      var modulo = sum % 10;\n      var lastDigit = Number(str.charAt(str.length - 1));\n\n      if (modulo === 0 && lastDigit === 0 || lastDigit === 10 - modulo) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  ES: function ES(str) {\n    (0, _assertString.default)(str);\n    var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\n    var charsValue = {\n      X: 0,\n      Y: 1,\n      Z: 2\n    };\n    var controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E']; // sanitize user input\n\n    var sanitized = str.trim().toUpperCase(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    } // validate the control digit\n\n\n    var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (char) {\n      return charsValue[char];\n    });\n    return sanitized.endsWith(controlDigits[number % 23]);\n  },\n  FI: function FI(str) {\n    // https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated\n    (0, _assertString.default)(str);\n\n    if (str.length !== 11) {\n      return false;\n    }\n\n    if (!str.match(/^\\d{6}[\\-A\\+]\\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) {\n      return false;\n    }\n\n    var checkDigits = '0123456789ABCDEFHJKLMNPRSTUVWXY';\n    var idAsNumber = parseInt(str.slice(0, 6), 10) * 1000 + parseInt(str.slice(7, 10), 10);\n    var remainder = idAsNumber % 31;\n    var checkDigit = checkDigits[remainder];\n    return checkDigit === str.slice(10, 11);\n  },\n  IN: function IN(str) {\n    var DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/; // multiplication table\n\n    var d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]; // permutation table\n\n    var p = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var c = 0;\n    var invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\n    invertedArray.forEach(function (val, i) {\n      c = d[c][p[i % 8][val]];\n    });\n    return c === 0;\n  },\n  IR: function IR(str) {\n    if (!str.match(/^\\d{10}$/)) return false;\n    str = \"0000\".concat(str).slice(str.length - 6);\n    if (parseInt(str.slice(3, 9), 10) === 0) return false;\n    var lastNumber = parseInt(str.slice(9, 10), 10);\n    var sum = 0;\n\n    for (var i = 0; i < 9; i++) {\n      sum += parseInt(str.slice(i, i + 1), 10) * (10 - i);\n    }\n\n    sum %= 11;\n    return sum < 2 && lastNumber === sum || sum >= 2 && lastNumber === 11 - sum;\n  },\n  IT: function IT(str) {\n    if (str.length !== 9) return false;\n    if (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\n\n    return str.search(/C[A-Z][0-9]{5}[A-Z]{2}/i) > -1;\n  },\n  NO: function NO(str) {\n    var sanitized = str.trim();\n    if (isNaN(Number(sanitized))) return false;\n    if (sanitized.length !== 11) return false;\n    if (sanitized === '00000000000') return false; // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\n\n    var f = sanitized.split('').map(Number);\n    var k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;\n    var k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;\n    if (k1 !== f[9] || k2 !== f[10]) return false;\n    return true;\n  },\n  TH: function TH(str) {\n    if (!str.match(/^[1-8]\\d{12}$/)) return false; // validate check digit\n\n    var sum = 0;\n\n    for (var i = 0; i < 12; i++) {\n      sum += parseInt(str[i], 10) * (13 - i);\n    }\n\n    return str[12] === ((11 - sum % 11) % 10).toString();\n  },\n  LK: function LK(str) {\n    var old_nic = /^[1-9]\\d{8}[vx]$/i;\n    var new_nic = /^[1-9]\\d{11}$/i;\n    if (str.length === 10 && old_nic.test(str)) return true;else if (str.length === 12 && new_nic.test(str)) return true;\n    return false;\n  },\n  'he-IL': function heIL(str) {\n    var DNI = /^\\d{9}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var id = sanitized;\n    var sum = 0,\n        incNum;\n\n    for (var i = 0; i < id.length; i++) {\n      incNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2\n\n      sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\n    }\n\n    return sum % 10 === 0;\n  },\n  'ar-LY': function arLY(str) {\n    // Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2\n    var NIN = /^(1|2)\\d{11}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!NIN.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'ar-TN': function arTN(str) {\n    var DNI = /^\\d{8}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'zh-CN': function zhCN(str) {\n    var provincesAndCities = ['11', // 北京\n    '12', // 天津\n    '13', // 河北\n    '14', // 山西\n    '15', // 内蒙古\n    '21', // 辽宁\n    '22', // 吉林\n    '23', // 黑龙江\n    '31', // 上海\n    '32', // 江苏\n    '33', // 浙江\n    '34', // 安徽\n    '35', // 福建\n    '36', // 江西\n    '37', // 山东\n    '41', // 河南\n    '42', // 湖北\n    '43', // 湖南\n    '44', // 广东\n    '45', // 广西\n    '46', // 海南\n    '50', // 重庆\n    '51', // 四川\n    '52', // 贵州\n    '53', // 云南\n    '54', // 西藏\n    '61', // 陕西\n    '62', // 甘肃\n    '63', // 青海\n    '64', // 宁夏\n    '65', // 新疆\n    '71', // 台湾\n    '81', // 香港\n    '82', // 澳门\n    '91' // 国外\n    ];\n    var powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\n    var parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n    var checkAddressCode = function checkAddressCode(addressCode) {\n      return provincesAndCities.includes(addressCode);\n    };\n\n    var checkBirthDayCode = function checkBirthDayCode(birDayCode) {\n      var yyyy = parseInt(birDayCode.substring(0, 4), 10);\n      var mm = parseInt(birDayCode.substring(4, 6), 10);\n      var dd = parseInt(birDayCode.substring(6), 10);\n      var xdata = new Date(yyyy, mm - 1, dd);\n\n      if (xdata > new Date()) {\n        return false; // eslint-disable-next-line max-len\n      } else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var getParityBit = function getParityBit(idCardNo) {\n      var id17 = idCardNo.substring(0, 17);\n      var power = 0;\n\n      for (var i = 0; i < 17; i++) {\n        power += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\n      }\n\n      var mod = power % 11;\n      return parityBit[mod];\n    };\n\n    var checkParityBit = function checkParityBit(idCardNo) {\n      return getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\n    };\n\n    var check15IdCardNo = function check15IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = \"19\".concat(idCardNo.substring(6, 12));\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return true;\n    };\n\n    var check18IdCardNo = function check18IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = idCardNo.substring(6, 14);\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return checkParityBit(idCardNo);\n    };\n\n    var checkIdCardNo = function checkIdCardNo(idCardNo) {\n      var check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\n      if (!check) return false;\n\n      if (idCardNo.length === 15) {\n        return check15IdCardNo(idCardNo);\n      }\n\n      return check18IdCardNo(idCardNo);\n    };\n\n    return checkIdCardNo(str);\n  },\n  'zh-HK': function zhHK(str) {\n    // sanitize user input\n    str = str.trim(); // HKID number starts with 1 or 2 letters, followed by 6 digits,\n    // then a checksum contained in square / round brackets or nothing\n\n    var regexHKID = /^[A-Z]{1,2}[0-9]{6}((\\([0-9A]\\))|(\\[[0-9A]\\])|([0-9A]))$/;\n    var regexIsDigit = /^[0-9]$/; // convert the user input to all uppercase and apply regex\n\n    str = str.toUpperCase();\n    if (!regexHKID.test(str)) return false;\n    str = str.replace(/\\[|\\]|\\(|\\)/g, '');\n    if (str.length === 8) str = \"3\".concat(str);\n    var checkSumVal = 0;\n\n    for (var i = 0; i <= 7; i++) {\n      var convertedChar = void 0;\n      if (!regexIsDigit.test(str[i])) convertedChar = (str[i].charCodeAt(0) - 55) % 11;else convertedChar = str[i];\n      checkSumVal += convertedChar * (9 - i);\n    }\n\n    checkSumVal %= 11;\n    var checkSumConverted;\n    if (checkSumVal === 0) checkSumConverted = '0';else if (checkSumVal === 1) checkSumConverted = 'A';else checkSumConverted = String(11 - checkSumVal);\n    if (checkSumConverted === str[str.length - 1]) return true;\n    return false;\n  },\n  'zh-TW': function zhTW(str) {\n    var ALPHABET_CODES = {\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      G: 16,\n      H: 17,\n      I: 34,\n      J: 18,\n      K: 19,\n      L: 20,\n      M: 21,\n      N: 22,\n      O: 35,\n      P: 23,\n      Q: 24,\n      R: 25,\n      S: 26,\n      T: 27,\n      U: 28,\n      V: 29,\n      W: 32,\n      X: 30,\n      Y: 31,\n      Z: 33\n    };\n    var sanitized = str.trim().toUpperCase();\n    if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\n    return Array.from(sanitized).reduce(function (sum, number, index) {\n      if (index === 0) {\n        var code = ALPHABET_CODES[number];\n        return code % 10 * 9 + Math.floor(code / 10);\n      }\n\n      if (index === 9) {\n        return (10 - sum % 10 - Number(number)) % 10 === 0;\n      }\n\n      return sum + Number(number) * (9 - index);\n    }, 0);\n  }\n};\n\nfunction isIdentityCard(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (var key in validators) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (validators.hasOwnProperty(key)) {\n        var validator = validators[key];\n\n        if (validator(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIdentityCardValidator from 'validator/lib/isIdentityCard';\nimport ValidatorJS from 'validator';\n\nexport const IS_IDENTITY_CARD = 'isIdentityCard';\n\n/**\n * Check if the string is a valid identity card code.\n * locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.\n * Defaults to 'any'.\n * If given value is not a string, then it returns false.\n */\nexport function isIdentityCard(value: unknown, locale: ValidatorJS.IdentityCardLocale): boolean {\n  return typeof value === 'string' && isIdentityCardValidator(value, locale);\n}\n\n/**\n * Check if the string is a valid identity card code.\n * locale is one of ['ES', 'zh-TW', 'he-IL', 'ar-TN'] OR 'any'. If 'any' is used, function will check if any of the locals match.\n * Defaults to 'any'.\n * If given value is not a string, then it returns false.\n */\nexport function IsIdentityCard(\n  locale?: ValidatorJS.IdentityCardLocale,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_IDENTITY_CARD,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isIdentityCard(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a identity card number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISRC;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// see http://isrc.ifpi.org/en/isrc-standard/code-syntax\nvar isrc = /^[A-Z]{2}[0-9A-Z]{3}\\d{2}\\d{5}$/;\n\nfunction isISRC(str) {\n  (0, _assertString.default)(str);\n  return isrc.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISRCValidator from 'validator/lib/isISRC';\n\nexport const IS_ISRC = 'isISRC';\n\n/**\n * Check if the string is a ISRC.\n * If given value is not a string, then it returns false.\n */\nexport function isISRC(value: unknown): boolean {\n  return typeof value === 'string' && isISRCValidator(value);\n}\n\n/**\n * Check if the string is a ISRC.\n * If given value is not a string, then it returns false.\n */\nexport function IsISRC(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISRC,\n      validator: {\n        validate: (value, args): boolean => isISRC(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ISRC', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLocale;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar localeReg = /^[A-Za-z]{2,4}([_-]([A-Za-z]{4}|[\\d]{3}))?([_-]([A-Za-z]{2}|[\\d]{3}))?$/;\n\nfunction isLocale(str) {\n  (0, _assertString.default)(str);\n\n  if (str === 'en_US_POSIX' || str === 'ca_ES_VALENCIA') {\n    return true;\n  }\n\n  return localeReg.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLocaleValidator from 'validator/lib/isLocale';\n\nexport const IS_LOCALE = 'isLocale';\n\n/**\n * Check if the string is a locale.\n * If given value is not a string, then it returns false.\n */\nexport function isLocale(value: unknown): boolean {\n  return typeof value === 'string' && isLocaleValidator(value);\n}\n\n/**\n * Check if the string is a locale.\n * If given value is not a string, then it returns false.\n */\nexport function IsLocale(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_LOCALE,\n      validator: {\n        validate: (value, args): boolean => isLocale(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be locale', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMagnetURI;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar magnetURIComponent = /(?:^magnet:\\?|[^?&]&)xt(?:\\.1)?=urn:(?:(?:aich|bitprint|btih|ed2k|ed2khash|kzhash|md5|sha1|tree:tiger):[a-z0-9]{32}(?:[a-z0-9]{8})?|btmh:1220[a-z0-9]{64})(?:$|&)/i;\n\nfunction isMagnetURI(url) {\n  (0, _assertString.default)(url);\n\n  if (url.indexOf('magnet:?') !== 0) {\n    return false;\n  }\n\n  return magnetURIComponent.test(url);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMagnetURIValidator from 'validator/lib/isMagnetURI';\n\nexport const IS_MAGNET_URI = 'isMagnetURI';\n\n/**\n * Check if the string is a magnet uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isMagnetURI(value: unknown): boolean {\n  return typeof value === 'string' && isMagnetURIValidator(value);\n}\n\n/**\n * Check if the string is a magnet uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsMagnetURI(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MAGNET_URI,\n      validator: {\n        validate: (value, args): boolean => isMagnetURI(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be magnet uri format',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMimeType;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  Checks if the provided string matches to a correct Media type format (MIME type)\n\n  This function only checks is the string format follows the\n  etablished rules by the according RFC specifications.\n  This function supports 'charset' in textual media types\n  (https://tools.ietf.org/html/rfc6657).\n\n  This function does not check against all the media types listed\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\n  because of lightness purposes : it would require to include\n  all these MIME types in this librairy, which would weigh it\n  significantly. This kind of effort maybe is not worth for the use that\n  this function has in this entire librairy.\n\n  More informations in the RFC specifications :\n  - https://tools.ietf.org/html/rfc2045\n  - https://tools.ietf.org/html/rfc2046\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\n*/\n// Match simple MIME types\n// NB :\n//   Subtype length must not exceed 100 characters.\n//   This rule does not comply to the RFC specs (what is the max length ?).\nvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+_]{1,100}$/i; // eslint-disable-line max-len\n// Handle \"charset\" in \"text/*\"\n\nvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n// Handle \"boundary\" in \"multipart/*\"\n\nvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\nfunction isMimeType(str) {\n  (0, _assertString.default)(str);\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isMimeTypeValidator from 'validator/lib/isMimeType';\n\nexport const IS_MIME_TYPE = 'isMimeType';\n\n/**\n * Check if the string matches to a valid MIME type format\n * If given value is not a string, then it returns false.\n */\nexport function isMimeType(value: unknown): boolean {\n  return typeof value === 'string' && isMimeTypeValidator(value);\n}\n\n/**\n * Check if the string matches to a valid MIME type format\n * If given value is not a string, then it returns false.\n */\nexport function IsMimeType(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_MIME_TYPE,\n      validator: {\n        validate: (value, args): boolean => isMimeType(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be MIME type format',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isOctal;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar octal = /^(0o)?[0-7]+$/i;\n\nfunction isOctal(str) {\n  (0, _assertString.default)(str);\n  return octal.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isOctalValidator from 'validator/lib/isOctal';\n\nexport const IS_OCTAL = 'isOctal';\n\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function isOctal(value: unknown): boolean {\n  return typeof value === 'string' && isOctalValidator(value);\n}\n\n/**\n * Check if the string is a valid octal number.\n * If given value is not a string, then it returns false.\n */\nexport function IsOctal(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_OCTAL,\n      validator: {\n        validate: (value, args): boolean => isOctal(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be valid octal number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPassportNumber;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Reference:\n * https://en.wikipedia.org/ -- Wikipedia\n * https://docs.microsoft.com/en-us/microsoft-365/compliance/eu-passport-number -- EU Passport Number\n * https://countrycode.org/ -- Country Codes\n */\nvar passportRegexByCountryCode = {\n  AM: /^[A-Z]{2}\\d{7}$/,\n  // ARMENIA\n  AR: /^[A-Z]{3}\\d{6}$/,\n  // ARGENTINA\n  AT: /^[A-Z]\\d{7}$/,\n  // AUSTRIA\n  AU: /^[A-Z]\\d{7}$/,\n  // AUSTRALIA\n  AZ: /^[A-Z]{2,3}\\d{7,8}$/,\n  // AZERBAIJAN\n  BE: /^[A-Z]{2}\\d{6}$/,\n  // BELGIUM\n  BG: /^\\d{9}$/,\n  // BULGARIA\n  BR: /^[A-Z]{2}\\d{6}$/,\n  // BRAZIL\n  BY: /^[A-Z]{2}\\d{7}$/,\n  // BELARUS\n  CA: /^[A-Z]{2}\\d{6}$/,\n  // CANADA\n  CH: /^[A-Z]\\d{7}$/,\n  // SWITZERLAND\n  CN: /^G\\d{8}$|^E(?![IO])[A-Z0-9]\\d{7}$/,\n  // CHINA [G=Ordinary, E=Electronic] followed by 8-digits, or E followed by any UPPERCASE letter (except I and O) followed by 7 digits\n  CY: /^[A-Z](\\d{6}|\\d{8})$/,\n  // CYPRUS\n  CZ: /^\\d{8}$/,\n  // CZECH REPUBLIC\n  DE: /^[CFGHJKLMNPRTVWXYZ0-9]{9}$/,\n  // GERMANY\n  DK: /^\\d{9}$/,\n  // DENMARK\n  DZ: /^\\d{9}$/,\n  // ALGERIA\n  EE: /^([A-Z]\\d{7}|[A-Z]{2}\\d{7})$/,\n  // ESTONIA (K followed by 7-digits), e-passports have 2 UPPERCASE followed by 7 digits\n  ES: /^[A-Z0-9]{2}([A-Z0-9]?)\\d{6}$/,\n  // SPAIN\n  FI: /^[A-Z]{2}\\d{7}$/,\n  // FINLAND\n  FR: /^\\d{2}[A-Z]{2}\\d{5}$/,\n  // FRANCE\n  GB: /^\\d{9}$/,\n  // UNITED KINGDOM\n  GR: /^[A-Z]{2}\\d{7}$/,\n  // GREECE\n  HR: /^\\d{9}$/,\n  // CROATIA\n  HU: /^[A-Z]{2}(\\d{6}|\\d{7})$/,\n  // HUNGARY\n  IE: /^[A-Z0-9]{2}\\d{7}$/,\n  // IRELAND\n  IN: /^[A-Z]{1}-?\\d{7}$/,\n  // INDIA\n  ID: /^[A-C]\\d{7}$/,\n  // INDONESIA\n  IR: /^[A-Z]\\d{8}$/,\n  // IRAN\n  IS: /^(A)\\d{7}$/,\n  // ICELAND\n  IT: /^[A-Z0-9]{2}\\d{7}$/,\n  // ITALY\n  JM: /^[Aa]\\d{7}$/,\n  // JAMAICA\n  JP: /^[A-Z]{2}\\d{7}$/,\n  // JAPAN\n  KR: /^[MS]\\d{8}$/,\n  // SOUTH KOREA, REPUBLIC OF KOREA, [S=PS Passports, M=PM Passports]\n  KZ: /^[a-zA-Z]\\d{7}$/,\n  // KAZAKHSTAN\n  LI: /^[a-zA-Z]\\d{5}$/,\n  // LIECHTENSTEIN\n  LT: /^[A-Z0-9]{8}$/,\n  // LITHUANIA\n  LU: /^[A-Z0-9]{8}$/,\n  // LUXEMBURG\n  LV: /^[A-Z0-9]{2}\\d{7}$/,\n  // LATVIA\n  LY: /^[A-Z0-9]{8}$/,\n  // LIBYA\n  MT: /^\\d{7}$/,\n  // MALTA\n  MZ: /^([A-Z]{2}\\d{7})|(\\d{2}[A-Z]{2}\\d{5})$/,\n  // MOZAMBIQUE\n  MY: /^[AHK]\\d{8}$/,\n  // MALAYSIA\n  MX: /^\\d{10,11}$/,\n  // MEXICO\n  NL: /^[A-Z]{2}[A-Z0-9]{6}\\d$/,\n  // NETHERLANDS\n  NZ: /^([Ll]([Aa]|[Dd]|[Ff]|[Hh])|[Ee]([Aa]|[Pp])|[Nn])\\d{6}$/,\n  // NEW ZEALAND\n  PH: /^([A-Z](\\d{6}|\\d{7}[A-Z]))|([A-Z]{2}(\\d{6}|\\d{7}))$/,\n  // PHILIPPINES\n  PK: /^[A-Z]{2}\\d{7}$/,\n  // PAKISTAN\n  PL: /^[A-Z]{2}\\d{7}$/,\n  // POLAND\n  PT: /^[A-Z]\\d{6}$/,\n  // PORTUGAL\n  RO: /^\\d{8,9}$/,\n  // ROMANIA\n  RU: /^\\d{9}$/,\n  // RUSSIAN FEDERATION\n  SE: /^\\d{8}$/,\n  // SWEDEN\n  SL: /^(P)[A-Z]\\d{7}$/,\n  // SLOVENIA\n  SK: /^[0-9A-Z]\\d{7}$/,\n  // SLOVAKIA\n  TH: /^[A-Z]{1,2}\\d{6,7}$/,\n  // THAILAND\n  TR: /^[A-Z]\\d{8}$/,\n  // TURKEY\n  UA: /^[A-Z]{2}\\d{6}$/,\n  // UKRAINE\n  US: /^\\d{9}$/ // UNITED STATES\n\n};\n/**\n * Check if str is a valid passport number\n * relative to provided ISO Country Code.\n *\n * @param {string} str\n * @param {string} countryCode\n * @return {boolean}\n */\n\nfunction isPassportNumber(str, countryCode) {\n  (0, _assertString.default)(str);\n  /** Remove All Whitespaces, Convert to UPPERCASE */\n\n  var normalizedStr = str.replace(/\\s/g, '').toUpperCase();\n  return countryCode.toUpperCase() in passportRegexByCountryCode && passportRegexByCountryCode[countryCode].test(normalizedStr);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPassportNumberValidator from 'validator/lib/isPassportNumber';\n\nexport const IS_PASSPORT_NUMBER = 'isPassportNumber';\n\n/**\n * Check if the string is a valid passport number relative to a specific country code.\n * If given value is not a string, then it returns false.\n */\nexport function isPassportNumber(value: unknown, countryCode: string): boolean {\n  return typeof value === 'string' && isPassportNumberValidator(value, countryCode);\n}\n\n/**\n * Check if the string is a valid passport number relative to a specific country code.\n * If given value is not a string, then it returns false.\n */\nexport function IsPassportNumber(countryCode: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_PASSPORT_NUMBER,\n      constraints: [countryCode],\n      validator: {\n        validate: (value, args): boolean => isPassportNumber(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be valid passport number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isPostalCode;\nexports.locales = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// common patterns\nvar threeDigit = /^\\d{3}$/;\nvar fourDigit = /^\\d{4}$/;\nvar fiveDigit = /^\\d{5}$/;\nvar sixDigit = /^\\d{6}$/;\nvar patterns = {\n  AD: /^AD\\d{3}$/,\n  AT: fourDigit,\n  AU: fourDigit,\n  AZ: /^AZ\\d{4}$/,\n  BA: /^([7-8]\\d{4}$)/,\n  BE: fourDigit,\n  BG: fourDigit,\n  BR: /^\\d{5}-\\d{3}$/,\n  BY: /^2[1-4]\\d{4}$/,\n  CA: /^[ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][\\s\\-]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i,\n  CH: fourDigit,\n  CN: /^(0[1-7]|1[012356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[1-5]|8[1345]|9[09])\\d{4}$/,\n  CZ: /^\\d{3}\\s?\\d{2}$/,\n  DE: fiveDigit,\n  DK: fourDigit,\n  DO: fiveDigit,\n  DZ: fiveDigit,\n  EE: fiveDigit,\n  ES: /^(5[0-2]{1}|[0-4]{1}\\d{1})\\d{3}$/,\n  FI: fiveDigit,\n  FR: /^\\d{2}\\s?\\d{3}$/,\n  GB: /^(gir\\s?0aa|[a-z]{1,2}\\d[\\da-z]?\\s?(\\d[a-z]{2})?)$/i,\n  GR: /^\\d{3}\\s?\\d{2}$/,\n  HR: /^([1-5]\\d{4}$)/,\n  HT: /^HT\\d{4}$/,\n  HU: fourDigit,\n  ID: fiveDigit,\n  IE: /^(?!.*(?:o))[A-Za-z]\\d[\\dw]\\s\\w{4}$/i,\n  IL: /^(\\d{5}|\\d{7})$/,\n  IN: /^((?!10|29|35|54|55|65|66|86|87|88|89)[1-9][0-9]{5})$/,\n  IR: /^(?!(\\d)\\1{3})[13-9]{4}[1346-9][013-9]{5}$/,\n  IS: threeDigit,\n  IT: fiveDigit,\n  JP: /^\\d{3}\\-\\d{4}$/,\n  KE: fiveDigit,\n  KR: /^(\\d{5}|\\d{6})$/,\n  LI: /^(948[5-9]|949[0-7])$/,\n  LT: /^LT\\-\\d{5}$/,\n  LU: fourDigit,\n  LV: /^LV\\-\\d{4}$/,\n  LK: fiveDigit,\n  MG: threeDigit,\n  MX: fiveDigit,\n  MT: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/,\n  MY: fiveDigit,\n  NL: /^\\d{4}\\s?[a-z]{2}$/i,\n  NO: fourDigit,\n  NP: /^(10|21|22|32|33|34|44|45|56|57)\\d{3}$|^(977)$/i,\n  NZ: fourDigit,\n  PL: /^\\d{2}\\-\\d{3}$/,\n  PR: /^00[679]\\d{2}([ -]\\d{4})?$/,\n  PT: /^\\d{4}\\-\\d{3}?$/,\n  RO: sixDigit,\n  RU: sixDigit,\n  SA: fiveDigit,\n  SE: /^[1-9]\\d{2}\\s?\\d{2}$/,\n  SG: sixDigit,\n  SI: fourDigit,\n  SK: /^\\d{3}\\s?\\d{2}$/,\n  TH: fiveDigit,\n  TN: fourDigit,\n  TW: /^\\d{3}(\\d{2})?$/,\n  UA: fiveDigit,\n  US: /^\\d{5}(-\\d{4})?$/,\n  ZA: fourDigit,\n  ZM: fiveDigit\n};\nvar locales = Object.keys(patterns);\nexports.locales = locales;\n\nfunction isPostalCode(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in patterns) {\n    return patterns[locale].test(str);\n  } else if (locale === 'any') {\n    for (var key in patterns) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (patterns.hasOwnProperty(key)) {\n        var pattern = patterns[key];\n\n        if (pattern.test(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isPostalCodeValidator from 'validator/lib/isPostalCode';\nimport ValidatorJS from 'validator';\n\nexport const IS_POSTAL_CODE = 'isPostalCode';\n\n/**\n * Check if the string is a postal code, in the specified locale.\n * If given value is not a string, then it returns false.\n */\nexport function isPostalCode(value: unknown, locale: 'any' | ValidatorJS.PostalCodeLocale): boolean {\n  return typeof value === 'string' && isPostalCodeValidator(value, locale);\n}\n\n/**\n * Check if the string is a postal code, in the specified locale.\n * If given value is not a string, then it returns false.\n */\nexport function IsPostalCode(\n  locale?: 'any' | ValidatorJS.PostalCodeLocale,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_POSTAL_CODE,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isPostalCode(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a postal code', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRFC3339;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* Based on https://tools.ietf.org/html/rfc3339#section-5.6 */\nvar dateFullYear = /[0-9]{4}/;\nvar dateMonth = /(0[1-9]|1[0-2])/;\nvar dateMDay = /([12]\\d|0[1-9]|3[01])/;\nvar timeHour = /([01][0-9]|2[0-3])/;\nvar timeMinute = /[0-5][0-9]/;\nvar timeSecond = /([0-5][0-9]|60)/;\nvar timeSecFrac = /(\\.[0-9]+)?/;\nvar timeNumOffset = new RegExp(\"[-+]\".concat(timeHour.source, \":\").concat(timeMinute.source));\nvar timeOffset = new RegExp(\"([zZ]|\".concat(timeNumOffset.source, \")\"));\nvar partialTime = new RegExp(\"\".concat(timeHour.source, \":\").concat(timeMinute.source, \":\").concat(timeSecond.source).concat(timeSecFrac.source));\nvar fullDate = new RegExp(\"\".concat(dateFullYear.source, \"-\").concat(dateMonth.source, \"-\").concat(dateMDay.source));\nvar fullTime = new RegExp(\"\".concat(partialTime.source).concat(timeOffset.source));\nvar rfc3339 = new RegExp(\"^\".concat(fullDate.source, \"[ tT]\").concat(fullTime.source, \"$\"));\n\nfunction isRFC3339(str) {\n  (0, _assertString.default)(str);\n  return rfc3339.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isRFC3339Validator from 'validator/lib/isRFC3339';\n\nexport const IS_RFC_3339 = 'isRFC3339';\n\n/**\n * Check if the string is a valid RFC 3339 date.\n * If given value is not a string, then it returns false.\n */\nexport function isRFC3339(value: unknown): boolean {\n  return typeof value === 'string' && isRFC3339Validator(value);\n}\n\n/**\n * Check if the string is a valid RFC 3339 date.\n * If given value is not a string, then it returns false.\n */\nexport function IsRFC3339(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_RFC_3339,\n      validator: {\n        validate: (value, args): boolean => isRFC3339(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be RFC 3339 date', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRgbColor;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar rgbColor = /^rgb\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){2}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\)$/;\nvar rgbaColor = /^rgba\\((([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\nvar rgbColorPercent = /^rgb\\((([0-9]%|[1-9][0-9]%|100%),){2}([0-9]%|[1-9][0-9]%|100%)\\)$/;\nvar rgbaColorPercent = /^rgba\\((([0-9]%|[1-9][0-9]%|100%),){3}(0?\\.\\d|1(\\.0)?|0(\\.0)?)\\)$/;\n\nfunction isRgbColor(str) {\n  var includePercentValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  (0, _assertString.default)(str);\n\n  if (!includePercentValues) {\n    return rgbColor.test(str) || rgbaColor.test(str);\n  }\n\n  return rgbColor.test(str) || rgbaColor.test(str) || rgbColorPercent.test(str) || rgbaColorPercent.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isRgbColorValidator from 'validator/lib/isRgbColor';\n\nexport const IS_RGB_COLOR = 'isRgbColor';\n\n/**\n * Check if the string is a rgb or rgba color.\n * `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.\n * If given value is not a string, then it returns false.\n */\nexport function isRgbColor(value: unknown, includePercentValues?: boolean): boolean {\n  return typeof value === 'string' && isRgbColorValidator(value, includePercentValues);\n}\n\n/**\n * Check if the string is a rgb or rgba color.\n * `includePercentValues` defaults to true. If you don't want to allow to set rgb or rgba values with percents, like rgb(5%,5%,5%), or rgba(90%,90%,90%,.3), then set it to false.\n * If given value is not a string, then it returns false.\n */\nexport function IsRgbColor(includePercentValues?: boolean, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_RGB_COLOR,\n      constraints: [includePercentValues],\n      validator: {\n        validate: (value, args): boolean => isRgbColor(value, args?.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be RGB color', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multilineRegexp;\n\n/**\n * Build RegExp object from an array\n * of multiple/multi-line regexp parts\n *\n * @param {string[]} parts\n * @param {string} flags\n * @return {object} - RegExp object\n */\nfunction multilineRegexp(parts, flags) {\n  var regexpAsStringLiteral = parts.join('');\n  return new RegExp(regexpAsStringLiteral, flags);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSemVer;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _multilineRegex = _interopRequireDefault(require(\"./util/multilineRegex\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Regular Expression to match\n * semantic versioning (SemVer)\n * built from multi-line, multi-parts regexp\n * Reference: https://semver.org/\n */\nvar semanticVersioningRegex = (0, _multilineRegex.default)(['^(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)\\\\.(0|[1-9]\\\\d*)', '(?:-((?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*)(?:\\\\.(?:0|[1-9]\\\\d*|\\\\d*[a-z-][0-9a-z-]*))*))', '?(?:\\\\+([0-9a-z-]+(?:\\\\.[0-9a-z-]+)*))?$'], 'i');\n\nfunction isSemVer(str) {\n  (0, _assertString.default)(str);\n  return semanticVersioningRegex.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isSemVerValidator from 'validator/lib/isSemVer';\n\nexport const IS_SEM_VER = 'isSemVer';\n\n/**\n * Check if the string is a Semantic Versioning Specification (SemVer).\n * If given value is not a string, then it returns false.\n */\nexport function isSemVer(value: unknown): boolean {\n  return typeof value === 'string' && isSemVerValidator(value);\n}\n\n/**\n * Check if the string is a Semantic Versioning Specification (SemVer).\n * If given value is not a string, then it returns false.\n */\nexport function IsSemVer(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_SEM_VER,\n      validator: {\n        validate: (value, args): boolean => isSemVer(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a Semantic Versioning Specification',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toDate;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toDate(date) {\n  (0, _assertString.default)(date);\n  date = Date.parse(date);\n  return !isNaN(date) ? new Date(date) : null;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toInt;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toInt(str, radix) {\n  (0, _assertString.default)(str);\n  return parseInt(str, radix || 10);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBoolean;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toBoolean(str, strict) {\n  (0, _assertString.default)(str);\n\n  if (strict) {\n    return str === '1' || /^true$/i.test(str);\n  }\n\n  return str !== '0' && !/^false$/i.test(str) && str !== '';\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = equals;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction equals(str, comparison) {\n  (0, _assertString.default)(str);\n  return str === comparison;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIPRange;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar subnetMaybe = /^\\d{1,3}$/;\nvar v4Subnet = 32;\nvar v6Subnet = 128;\n\nfunction isIPRange(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\n\n  if (parts.length !== 2) {\n    return false;\n  }\n\n  if (!subnetMaybe.test(parts[1])) {\n    return false;\n  } // Disallow preceding 0 i.e. 01, 02, ...\n\n\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\n    return false;\n  }\n\n  var isValidIP = (0, _isIP.default)(parts[0], version);\n\n  if (!isValidIP) {\n    return false;\n  } // Define valid subnet according to IP's version\n\n\n  var expectedSubnet = null;\n\n  switch (String(version)) {\n    case '4':\n      expectedSubnet = v4Subnet;\n      break;\n\n    case '6':\n      expectedSubnet = v6Subnet;\n      break;\n\n    default:\n      expectedSubnet = (0, _isIP.default)(parts[0], '6') ? v6Subnet : v4Subnet;\n  }\n\n  return parts[1] <= expectedSubnet && parts[1] >= 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDate;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar default_date_options = {\n  format: 'YYYY/MM/DD',\n  delimiters: ['/', '-'],\n  strictMode: false\n};\n\nfunction isValidFormat(format) {\n  return /(^(y{4}|y{2})[.\\/-](m{1,2})[.\\/-](d{1,2})$)|(^(m{1,2})[.\\/-](d{1,2})[.\\/-]((y{4}|y{2})$))|(^(d{1,2})[.\\/-](m{1,2})[.\\/-]((y{4}|y{2})$))/gi.test(format);\n}\n\nfunction zip(date, format) {\n  var zippedArr = [],\n      len = Math.min(date.length, format.length);\n\n  for (var i = 0; i < len; i++) {\n    zippedArr.push([date[i], format[i]]);\n  }\n\n  return zippedArr;\n}\n\nfunction isDate(input, options) {\n  if (typeof options === 'string') {\n    // Allow backward compatbility for old format isDate(input [, format])\n    options = (0, _merge.default)({\n      format: options\n    }, default_date_options);\n  } else {\n    options = (0, _merge.default)(options, default_date_options);\n  }\n\n  if (typeof input === 'string' && isValidFormat(options.format)) {\n    var formatDelimiter = options.delimiters.find(function (delimiter) {\n      return options.format.indexOf(delimiter) !== -1;\n    });\n    var dateDelimiter = options.strictMode ? formatDelimiter : options.delimiters.find(function (delimiter) {\n      return input.indexOf(delimiter) !== -1;\n    });\n    var dateAndFormat = zip(input.split(dateDelimiter), options.format.toLowerCase().split(formatDelimiter));\n    var dateObj = {};\n\n    var _iterator = _createForOfIteratorHelper(dateAndFormat),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            dateWord = _step$value[0],\n            formatWord = _step$value[1];\n\n        if (dateWord.length !== formatWord.length) {\n          return false;\n        }\n\n        dateObj[formatWord.charAt(0)] = dateWord;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return new Date(\"\".concat(dateObj.m, \"/\").concat(dateObj.d, \"/\").concat(dateObj.y)).getDate() === +dateObj.d;\n  }\n\n  if (!options.strictMode) {\n    return Object.prototype.toString.call(input) === '[object Date]' && isFinite(input);\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isTime;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_time_options = {\n  hourFormat: 'hour24',\n  mode: 'default'\n};\nvar formats = {\n  hour24: {\n    default: /^([01]?[0-9]|2[0-3]):([0-5][0-9])$/,\n    withSeconds: /^([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/\n  },\n  hour12: {\n    default: /^(0?[1-9]|1[0-2]):([0-5][0-9]) (A|P)M$/,\n    withSeconds: /^(0?[1-9]|1[0-2]):([0-5][0-9]):([0-5][0-9]) (A|P)M$/\n  }\n};\n\nfunction isTime(input, options) {\n  options = (0, _merge.default)(options, default_time_options);\n  if (typeof input !== 'string') return false;\n  return formats[options.hourFormat][options.mode].test(input);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIMEI;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar imeiRegexWithoutHypens = /^[0-9]{15}$/;\nvar imeiRegexWithHypens = /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/;\n\nfunction isIMEI(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {}; // default regex for checking imei is the one without hyphens\n\n  var imeiRegex = imeiRegexWithoutHypens;\n\n  if (options.allow_hyphens) {\n    imeiRegex = imeiRegexWithHypens;\n  }\n\n  if (!imeiRegex.test(str)) {\n    return false;\n  }\n\n  str = str.replace(/-/g, '');\n  var sum = 0,\n      mul = 2,\n      l = 14;\n\n  for (var i = 0; i < l; i++) {\n    var digit = str.substring(l - i - 1, l - i);\n    var tp = parseInt(digit, 10) * mul;\n\n    if (tp >= 10) {\n      sum += tp % 10 + 1;\n    } else {\n      sum += tp;\n    }\n\n    if (mul === 1) {\n      mul += 1;\n    } else {\n      mul -= 1;\n    }\n  }\n\n  var chk = (10 - sum % 10) % 10;\n\n  if (chk !== parseInt(str.substring(14, 15), 10)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMD5;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar md5 = /^[a-f0-9]{32}$/;\n\nfunction isMD5(str) {\n  (0, _assertString.default)(str);\n  return md5.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmpty;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_is_empty_options = {\n  ignore_whitespace: false\n};\n\nfunction isEmpty(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_is_empty_options);\n  return (options.ignore_whitespace ? str.trim().length : str.length) === 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isAfter;\n\nvar _toDate = _interopRequireDefault(require(\"./toDate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAfter(date, options) {\n  // For backwards compatibility:\n  // isAfter(str [, date]), i.e. `options` could be used as argument for the legacy `date`\n  var comparisonDate = (options === null || options === void 0 ? void 0 : options.comparisonDate) || options || Date().toString();\n  var comparison = (0, _toDate.default)(comparisonDate);\n  var original = (0, _toDate.default)(date);\n  return !!(original && comparison && original > comparison);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBefore;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _toDate = _interopRequireDefault(require(\"./toDate\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isBefore(str) {\n  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());\n  (0, _assertString.default)(str);\n  var comparison = (0, _toDate.default)(date);\n  var original = (0, _toDate.default)(str);\n  return !!(original && comparison && original < comparison);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIn;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _toString = _interopRequireDefault(require(\"./util/toString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction isIn(str, options) {\n  (0, _assertString.default)(str);\n  var i;\n\n  if (Object.prototype.toString.call(options) === '[object Array]') {\n    var array = [];\n\n    for (i in options) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if ({}.hasOwnProperty.call(options, i)) {\n        array[i] = (0, _toString.default)(options[i]);\n      }\n    }\n\n    return array.indexOf(str) >= 0;\n  } else if (_typeof(options) === 'object') {\n    return options.hasOwnProperty(str);\n  } else if (options && typeof options.indexOf === 'function') {\n    return options.indexOf(str) >= 0;\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.iso7064Check = iso7064Check;\nexports.luhnCheck = luhnCheck;\nexports.reverseMultiplyAndSum = reverseMultiplyAndSum;\nexports.verhoeffCheck = verhoeffCheck;\n\n/**\n * Algorithmic validation functions\n * May be used as is or implemented in the workflow of other validators.\n */\n\n/*\n * ISO 7064 validation function\n * Called with a string of numbers (incl. check digit)\n * to validate according to ISO 7064 (MOD 11, 10).\n */\nfunction iso7064Check(str) {\n  var checkvalue = 10;\n\n  for (var i = 0; i < str.length - 1; i++) {\n    checkvalue = (parseInt(str[i], 10) + checkvalue) % 10 === 0 ? 10 * 2 % 11 : (parseInt(str[i], 10) + checkvalue) % 10 * 2 % 11;\n  }\n\n  checkvalue = checkvalue === 1 ? 0 : 11 - checkvalue;\n  return checkvalue === parseInt(str[10], 10);\n}\n/*\n * Luhn (mod 10) validation function\n * Called with a string of numbers (incl. check digit)\n * to validate according to the Luhn algorithm.\n */\n\n\nfunction luhnCheck(str) {\n  var checksum = 0;\n  var second = false;\n\n  for (var i = str.length - 1; i >= 0; i--) {\n    if (second) {\n      var product = parseInt(str[i], 10) * 2;\n\n      if (product > 9) {\n        // sum digits of product and add to checksum\n        checksum += product.toString().split('').map(function (a) {\n          return parseInt(a, 10);\n        }).reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      } else {\n        checksum += product;\n      }\n    } else {\n      checksum += parseInt(str[i], 10);\n    }\n\n    second = !second;\n  }\n\n  return checksum % 10 === 0;\n}\n/*\n * Reverse TIN multiplication and summation helper function\n * Called with an array of single-digit integers and a base multiplier\n * to calculate the sum of the digits multiplied in reverse.\n * Normally used in variations of MOD 11 algorithmic checks.\n */\n\n\nfunction reverseMultiplyAndSum(digits, base) {\n  var total = 0;\n\n  for (var i = 0; i < digits.length; i++) {\n    total += digits[i] * (base - i);\n  }\n\n  return total;\n}\n/*\n * Verhoeff validation helper function\n * Called with a string of numbers\n * to validate according to the Verhoeff algorithm.\n */\n\n\nfunction verhoeffCheck(str) {\n  var d_table = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]];\n  var p_table = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // Copy (to prevent replacement) and reverse\n\n  var str_copy = str.split('').reverse().join('');\n  var checksum = 0;\n\n  for (var i = 0; i < str_copy.length; i++) {\n    checksum = d_table[checksum][p_table[i % 8][parseInt(str_copy[i], 10)]];\n  }\n\n  return checksum === 0;\n}", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isTaxID;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar algorithms = _interopRequireWildcard(require(\"./util/algorithms\"));\n\nvar _isDate = _interopRequireDefault(require(\"./isDate\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * TIN Validation\n * Validates Tax Identification Numbers (TINs) from the US, EU member states and the United Kingdom.\n *\n * EU-UK:\n * National TIN validity is calculated using public algorithms as made available by DG TAXUD.\n *\n * See `https://ec.europa.eu/taxation_customs/tin/specs/FS-TIN%20Algorithms-Public.docx` for more information.\n *\n * US:\n * An Employer Identification Number (EIN), also known as a Federal Tax Identification Number,\n *  is used to identify a business entity.\n *\n * NOTES:\n *  - Prefix 47 is being reserved for future use\n *  - Prefixes 26, 27, 45, 46 and 47 were previously assigned by the Philadelphia campus.\n *\n * See `http://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/How-EINs-are-Assigned-and-Valid-EIN-Prefixes`\n * for more information.\n */\n// Locale functions\n\n/*\n * bg-BG validation function\n * (Edinen graždanski nomer (EGN/ЕГН), persons only)\n * Checks if birth date (first six digits) is valid and calculates check (last) digit\n */\nfunction bgBgCheck(tin) {\n  // Extract full year, normalize month and check birth date validity\n  var century_year = tin.slice(0, 2);\n  var month = parseInt(tin.slice(2, 4), 10);\n\n  if (month > 40) {\n    month -= 40;\n    century_year = \"20\".concat(century_year);\n  } else if (month > 20) {\n    month -= 20;\n    century_year = \"18\".concat(century_year);\n  } else {\n    century_year = \"19\".concat(century_year);\n  }\n\n  if (month < 10) {\n    month = \"0\".concat(month);\n  }\n\n  var date = \"\".concat(century_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  } // split digits into an array for further processing\n\n\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  }); // Calculate checksum by multiplying digits with fixed values\n\n  var multip_lookup = [2, 4, 8, 5, 10, 9, 7, 3, 6];\n  var checksum = 0;\n\n  for (var i = 0; i < multip_lookup.length; i++) {\n    checksum += digits[i] * multip_lookup[i];\n  }\n\n  checksum = checksum % 11 === 10 ? 0 : checksum % 11;\n  return checksum === digits[9];\n}\n/**\n * Check if an input is a valid Canadian SIN (Social Insurance Number)\n *\n * The Social Insurance Number (SIN) is a 9 digit number that\n * you need to work in Canada or to have access to government programs and benefits.\n *\n * https://en.wikipedia.org/wiki/Social_Insurance_Number\n * https://www.canada.ca/en/employment-social-development/services/sin.html\n * https://www.codercrunch.com/challenge/819302488/sin-validator\n *\n * @param {string} input\n * @return {boolean}\n */\n\n\nfunction isCanadianSIN(input) {\n  var digitsArray = input.split('');\n  var even = digitsArray.filter(function (_, idx) {\n    return idx % 2;\n  }).map(function (i) {\n    return Number(i) * 2;\n  }).join('').split('');\n  var total = digitsArray.filter(function (_, idx) {\n    return !(idx % 2);\n  }).concat(even).map(function (i) {\n    return Number(i);\n  }).reduce(function (acc, cur) {\n    return acc + cur;\n  });\n  return total % 10 === 0;\n}\n/*\n * cs-CZ validation function\n * (Rodné číslo (RČ), persons only)\n * Checks if birth date (first six digits) is valid and divisibility by 11\n * Material not in DG TAXUD document sourced from:\n * -`https://lorenc.info/3MA381/overeni-spravnosti-rodneho-cisla.htm`\n * -`https://www.mvcr.cz/clanek/rady-a-sluzby-dokumenty-rodne-cislo.aspx`\n */\n\n\nfunction csCzCheck(tin) {\n  tin = tin.replace(/\\W/, ''); // Extract full year from TIN length\n\n  var full_year = parseInt(tin.slice(0, 2), 10);\n\n  if (tin.length === 10) {\n    if (full_year < 54) {\n      full_year = \"20\".concat(full_year);\n    } else {\n      full_year = \"19\".concat(full_year);\n    }\n  } else {\n    if (tin.slice(6) === '000') {\n      return false;\n    } // Three-zero serial not assigned before 1954\n\n\n    if (full_year < 54) {\n      full_year = \"19\".concat(full_year);\n    } else {\n      return false; // No 18XX years seen in any of the resources\n    }\n  } // Add missing zero if needed\n\n\n  if (full_year.length === 3) {\n    full_year = [full_year.slice(0, 2), '0', full_year.slice(2)].join('');\n  } // Extract month from TIN and normalize\n\n\n  var month = parseInt(tin.slice(2, 4), 10);\n\n  if (month > 50) {\n    month -= 50;\n  }\n\n  if (month > 20) {\n    // Month-plus-twenty was only introduced in 2004\n    if (parseInt(full_year, 10) < 2004) {\n      return false;\n    }\n\n    month -= 20;\n  }\n\n  if (month < 10) {\n    month = \"0\".concat(month);\n  } // Check date validity\n\n\n  var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  } // Verify divisibility by 11\n\n\n  if (tin.length === 10) {\n    if (parseInt(tin, 10) % 11 !== 0) {\n      // Some numbers up to and including 1985 are still valid if\n      // check (last) digit equals 0 and modulo of first 9 digits equals 10\n      var checkdigit = parseInt(tin.slice(0, 9), 10) % 11;\n\n      if (parseInt(full_year, 10) < 1986 && checkdigit === 10) {\n        if (parseInt(tin.slice(9), 10) !== 0) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/*\n * de-AT validation function\n * (Abgabenkontonummer, persons/entities)\n * Verify TIN validity by calling luhnCheck()\n */\n\n\nfunction deAtCheck(tin) {\n  return algorithms.luhnCheck(tin);\n}\n/*\n * de-DE validation function\n * (Steueridentifikationsnummer (Steuer-IdNr.), persons only)\n * Tests for single duplicate/triplicate value, then calculates ISO 7064 check (last) digit\n * Partial implementation of spec (same result with both algorithms always)\n */\n\n\nfunction deDeCheck(tin) {\n  // Split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  }); // Fill array with strings of number positions\n\n  var occurences = [];\n\n  for (var i = 0; i < digits.length - 1; i++) {\n    occurences.push('');\n\n    for (var j = 0; j < digits.length - 1; j++) {\n      if (digits[i] === digits[j]) {\n        occurences[i] += j;\n      }\n    }\n  } // Remove digits with one occurence and test for only one duplicate/triplicate\n\n\n  occurences = occurences.filter(function (a) {\n    return a.length > 1;\n  });\n\n  if (occurences.length !== 2 && occurences.length !== 3) {\n    return false;\n  } // In case of triplicate value only two digits are allowed next to each other\n\n\n  if (occurences[0].length === 3) {\n    var trip_locations = occurences[0].split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var recurrent = 0; // Amount of neighbour occurences\n\n    for (var _i = 0; _i < trip_locations.length - 1; _i++) {\n      if (trip_locations[_i] + 1 === trip_locations[_i + 1]) {\n        recurrent += 1;\n      }\n    }\n\n    if (recurrent === 2) {\n      return false;\n    }\n  }\n\n  return algorithms.iso7064Check(tin);\n}\n/*\n * dk-DK validation function\n * (CPR-nummer (personnummer), persons only)\n * Checks if birth date (first six digits) is valid and assigned to century (seventh) digit,\n * and calculates check (last) digit\n */\n\n\nfunction dkDkCheck(tin) {\n  tin = tin.replace(/\\W/, ''); // Extract year, check if valid for given century digit and add century\n\n  var year = parseInt(tin.slice(4, 6), 10);\n  var century_digit = tin.slice(6, 7);\n\n  switch (century_digit) {\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n      year = \"19\".concat(year);\n      break;\n\n    case '4':\n    case '9':\n      if (year < 37) {\n        year = \"20\".concat(year);\n      } else {\n        year = \"19\".concat(year);\n      }\n\n      break;\n\n    default:\n      if (year < 37) {\n        year = \"20\".concat(year);\n      } else if (year > 58) {\n        year = \"18\".concat(year);\n      } else {\n        return false;\n      }\n\n      break;\n  } // Add missing zero if needed\n\n\n  if (year.length === 3) {\n    year = [year.slice(0, 2), '0', year.slice(2)].join('');\n  } // Check date validity\n\n\n  var date = \"\".concat(year, \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(0, 2));\n\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  } // Split digits into an array for further processing\n\n\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 0;\n  var weight = 4; // Multiply by weight and add to checksum\n\n  for (var i = 0; i < 9; i++) {\n    checksum += digits[i] * weight;\n    weight -= 1;\n\n    if (weight === 1) {\n      weight = 7;\n    }\n  }\n\n  checksum %= 11;\n\n  if (checksum === 1) {\n    return false;\n  }\n\n  return checksum === 0 ? digits[9] === 0 : digits[9] === 11 - checksum;\n}\n/*\n * el-CY validation function\n * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons only)\n * Verify TIN validity by calculating ASCII value of check (last) character\n */\n\n\nfunction elCyCheck(tin) {\n  // split digits into an array for further processing\n  var digits = tin.slice(0, 8).split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 0; // add digits in even places\n\n  for (var i = 1; i < digits.length; i += 2) {\n    checksum += digits[i];\n  } // add digits in odd places\n\n\n  for (var _i2 = 0; _i2 < digits.length; _i2 += 2) {\n    if (digits[_i2] < 2) {\n      checksum += 1 - digits[_i2];\n    } else {\n      checksum += 2 * (digits[_i2] - 2) + 5;\n\n      if (digits[_i2] > 4) {\n        checksum += 2;\n      }\n    }\n  }\n\n  return String.fromCharCode(checksum % 26 + 65) === tin.charAt(8);\n}\n/*\n * el-GR validation function\n * (Arithmos Forologikou Mitroou (AFM/ΑΦΜ), persons/entities)\n * Verify TIN validity by calculating check (last) digit\n * Algorithm not in DG TAXUD document- sourced from:\n * - `http://epixeirisi.gr/%CE%9A%CE%A1%CE%99%CE%A3%CE%99%CE%9C%CE%91-%CE%98%CE%95%CE%9C%CE%91%CE%A4%CE%91-%CE%A6%CE%9F%CE%A1%CE%9F%CE%9B%CE%9F%CE%93%CE%99%CE%91%CE%A3-%CE%9A%CE%91%CE%99-%CE%9B%CE%9F%CE%93%CE%99%CE%A3%CE%A4%CE%99%CE%9A%CE%97%CE%A3/23791/%CE%91%CF%81%CE%B9%CE%B8%CE%BC%CF%8C%CF%82-%CE%A6%CE%BF%CF%81%CE%BF%CE%BB%CE%BF%CE%B3%CE%B9%CE%BA%CE%BF%CF%8D-%CE%9C%CE%B7%CF%84%CF%81%CF%8E%CE%BF%CF%85`\n */\n\n\nfunction elGrCheck(tin) {\n  // split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 0;\n\n  for (var i = 0; i < 8; i++) {\n    checksum += digits[i] * Math.pow(2, 8 - i);\n  }\n\n  return checksum % 11 % 10 === digits[8];\n}\n/*\n * en-GB validation function (should go here if needed)\n * (National Insurance Number (NINO) or Unique Taxpayer Reference (UTR),\n * persons/entities respectively)\n */\n\n/*\n * en-IE validation function\n * (Personal Public Service Number (PPS No), persons only)\n * Verify TIN validity by calculating check (second to last) character\n */\n\n\nfunction enIeCheck(tin) {\n  var checksum = algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 7).map(function (a) {\n    return parseInt(a, 10);\n  }), 8);\n\n  if (tin.length === 9 && tin[8] !== 'W') {\n    checksum += (tin[8].charCodeAt(0) - 64) * 9;\n  }\n\n  checksum %= 23;\n\n  if (checksum === 0) {\n    return tin[7].toUpperCase() === 'W';\n  }\n\n  return tin[7].toUpperCase() === String.fromCharCode(64 + checksum);\n} // Valid US IRS campus prefixes\n\n\nvar enUsCampusPrefix = {\n  andover: ['10', '12'],\n  atlanta: ['60', '67'],\n  austin: ['50', '53'],\n  brookhaven: ['01', '02', '03', '04', '05', '06', '11', '13', '14', '16', '21', '22', '23', '25', '34', '51', '52', '54', '55', '56', '57', '58', '59', '65'],\n  cincinnati: ['30', '32', '35', '36', '37', '38', '61'],\n  fresno: ['15', '24'],\n  internet: ['20', '26', '27', '45', '46', '47'],\n  kansas: ['40', '44'],\n  memphis: ['94', '95'],\n  ogden: ['80', '90'],\n  philadelphia: ['33', '39', '41', '42', '43', '46', '48', '62', '63', '64', '66', '68', '71', '72', '73', '74', '75', '76', '77', '81', '82', '83', '84', '85', '86', '87', '88', '91', '92', '93', '98', '99'],\n  sba: ['31']\n}; // Return an array of all US IRS campus prefixes\n\nfunction enUsGetPrefixes() {\n  var prefixes = [];\n\n  for (var location in enUsCampusPrefix) {\n    // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n    // istanbul ignore else\n    if (enUsCampusPrefix.hasOwnProperty(location)) {\n      prefixes.push.apply(prefixes, _toConsumableArray(enUsCampusPrefix[location]));\n    }\n  }\n\n  return prefixes;\n}\n/*\n * en-US validation function\n * Verify that the TIN starts with a valid IRS campus prefix\n */\n\n\nfunction enUsCheck(tin) {\n  return enUsGetPrefixes().indexOf(tin.slice(0, 2)) !== -1;\n}\n/*\n * es-ES validation function\n * (Documento Nacional de Identidad (DNI)\n * or Número de Identificación de Extranjero (NIE), persons only)\n * Verify TIN validity by calculating check (last) character\n */\n\n\nfunction esEsCheck(tin) {\n  // Split characters into an array for further processing\n  var chars = tin.toUpperCase().split(''); // Replace initial letter if needed\n\n  if (isNaN(parseInt(chars[0], 10)) && chars.length > 1) {\n    var lead_replace = 0;\n\n    switch (chars[0]) {\n      case 'Y':\n        lead_replace = 1;\n        break;\n\n      case 'Z':\n        lead_replace = 2;\n        break;\n\n      default:\n    }\n\n    chars.splice(0, 1, lead_replace); // Fill with zeros if smaller than proper\n  } else {\n    while (chars.length < 9) {\n      chars.unshift(0);\n    }\n  } // Calculate checksum and check according to lookup\n\n\n  var lookup = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E'];\n  chars = chars.join('');\n  var checksum = parseInt(chars.slice(0, 8), 10) % 23;\n  return chars[8] === lookup[checksum];\n}\n/*\n * et-EE validation function\n * (Isikukood (IK), persons only)\n * Checks if birth date (century digit and six following) is valid and calculates check (last) digit\n * Material not in DG TAXUD document sourced from:\n * - `https://www.oecd.org/tax/automatic-exchange/crs-implementation-and-assistance/tax-identification-numbers/Estonia-TIN.pdf`\n */\n\n\nfunction etEeCheck(tin) {\n  // Extract year and add century\n  var full_year = tin.slice(1, 3);\n  var century_digit = tin.slice(0, 1);\n\n  switch (century_digit) {\n    case '1':\n    case '2':\n      full_year = \"18\".concat(full_year);\n      break;\n\n    case '3':\n    case '4':\n      full_year = \"19\".concat(full_year);\n      break;\n\n    default:\n      full_year = \"20\".concat(full_year);\n      break;\n  } // Check date validity\n\n\n  var date = \"\".concat(full_year, \"/\").concat(tin.slice(3, 5), \"/\").concat(tin.slice(5, 7));\n\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  } // Split digits into an array for further processing\n\n\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 0;\n  var weight = 1; // Multiply by weight and add to checksum\n\n  for (var i = 0; i < 10; i++) {\n    checksum += digits[i] * weight;\n    weight += 1;\n\n    if (weight === 10) {\n      weight = 1;\n    }\n  } // Do again if modulo 11 of checksum is 10\n\n\n  if (checksum % 11 === 10) {\n    checksum = 0;\n    weight = 3;\n\n    for (var _i3 = 0; _i3 < 10; _i3++) {\n      checksum += digits[_i3] * weight;\n      weight += 1;\n\n      if (weight === 10) {\n        weight = 1;\n      }\n    }\n\n    if (checksum % 11 === 10) {\n      return digits[10] === 0;\n    }\n  }\n\n  return checksum % 11 === digits[10];\n}\n/*\n * fi-FI validation function\n * (Henkilötunnus (HETU), persons only)\n * Checks if birth date (first six digits plus century symbol) is valid\n * and calculates check (last) digit\n */\n\n\nfunction fiFiCheck(tin) {\n  // Extract year and add century\n  var full_year = tin.slice(4, 6);\n  var century_symbol = tin.slice(6, 7);\n\n  switch (century_symbol) {\n    case '+':\n      full_year = \"18\".concat(full_year);\n      break;\n\n    case '-':\n      full_year = \"19\".concat(full_year);\n      break;\n\n    default:\n      full_year = \"20\".concat(full_year);\n      break;\n  } // Check date validity\n\n\n  var date = \"\".concat(full_year, \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(0, 2));\n\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  } // Calculate check character\n\n\n  var checksum = parseInt(tin.slice(0, 6) + tin.slice(7, 10), 10) % 31;\n\n  if (checksum < 10) {\n    return checksum === parseInt(tin.slice(10), 10);\n  }\n\n  checksum -= 10;\n  var letters_lookup = ['A', 'B', 'C', 'D', 'E', 'F', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y'];\n  return letters_lookup[checksum] === tin.slice(10);\n}\n/*\n * fr/nl-BE validation function\n * (Numéro national (N.N.), persons only)\n * Checks if birth date (first six digits) is valid and calculates check (last two) digits\n */\n\n\nfunction frBeCheck(tin) {\n  // Zero month/day value is acceptable\n  if (tin.slice(2, 4) !== '00' || tin.slice(4, 6) !== '00') {\n    // Extract date from first six digits of TIN\n    var date = \"\".concat(tin.slice(0, 2), \"/\").concat(tin.slice(2, 4), \"/\").concat(tin.slice(4, 6));\n\n    if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n      return false;\n    }\n  }\n\n  var checksum = 97 - parseInt(tin.slice(0, 9), 10) % 97;\n  var checkdigits = parseInt(tin.slice(9, 11), 10);\n\n  if (checksum !== checkdigits) {\n    checksum = 97 - parseInt(\"2\".concat(tin.slice(0, 9)), 10) % 97;\n\n    if (checksum !== checkdigits) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/*\n * fr-FR validation function\n * (Numéro fiscal de référence (numéro SPI), persons only)\n * Verify TIN validity by calculating check (last three) digits\n */\n\n\nfunction frFrCheck(tin) {\n  tin = tin.replace(/\\s/g, '');\n  var checksum = parseInt(tin.slice(0, 10), 10) % 511;\n  var checkdigits = parseInt(tin.slice(10, 13), 10);\n  return checksum === checkdigits;\n}\n/*\n * fr/lb-LU validation function\n * (numéro d’identification personnelle, persons only)\n * Verify birth date validity and run Luhn and Verhoeff checks\n */\n\n\nfunction frLuCheck(tin) {\n  // Extract date and check validity\n  var date = \"\".concat(tin.slice(0, 4), \"/\").concat(tin.slice(4, 6), \"/\").concat(tin.slice(6, 8));\n\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  } // Run Luhn check\n\n\n  if (!algorithms.luhnCheck(tin.slice(0, 12))) {\n    return false;\n  } // Remove Luhn check digit and run Verhoeff check\n\n\n  return algorithms.verhoeffCheck(\"\".concat(tin.slice(0, 11)).concat(tin[12]));\n}\n/*\n * hr-HR validation function\n * (Osobni identifikacijski broj (OIB), persons/entities)\n * Verify TIN validity by calling iso7064Check(digits)\n */\n\n\nfunction hrHrCheck(tin) {\n  return algorithms.iso7064Check(tin);\n}\n/*\n * hu-HU validation function\n * (Adóazonosító jel, persons only)\n * Verify TIN validity by calculating check (last) digit\n */\n\n\nfunction huHuCheck(tin) {\n  // split digits into an array for further processing\n  var digits = tin.split('').map(function (a) {\n    return parseInt(a, 10);\n  });\n  var checksum = 8;\n\n  for (var i = 1; i < 9; i++) {\n    checksum += digits[i] * (i + 1);\n  }\n\n  return checksum % 11 === digits[9];\n}\n/*\n * lt-LT validation function (should go here if needed)\n * (Asmens kodas, persons/entities respectively)\n * Current validation check is alias of etEeCheck- same format applies\n */\n\n/*\n * it-IT first/last name validity check\n * Accepts it-IT TIN-encoded names as a three-element character array and checks their validity\n * Due to lack of clarity between resources (\"Are only Italian consonants used?\n * What happens if a person has X in their name?\" etc.) only two test conditions\n * have been implemented:\n * Vowels may only be followed by other vowels or an X character\n * and X characters after vowels may only be followed by other X characters.\n */\n\n\nfunction itItNameCheck(name) {\n  // true at the first occurence of a vowel\n  var vowelflag = false; // true at the first occurence of an X AFTER vowel\n  // (to properly handle last names with X as consonant)\n\n  var xflag = false;\n\n  for (var i = 0; i < 3; i++) {\n    if (!vowelflag && /[AEIOU]/.test(name[i])) {\n      vowelflag = true;\n    } else if (!xflag && vowelflag && name[i] === 'X') {\n      xflag = true;\n    } else if (i > 0) {\n      if (vowelflag && !xflag) {\n        if (!/[AEIOU]/.test(name[i])) {\n          return false;\n        }\n      }\n\n      if (xflag) {\n        if (!/X/.test(name[i])) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/*\n * it-IT validation function\n * (Codice fiscale (TIN-IT), persons only)\n * Verify name, birth date and codice catastale validity\n * and calculate check character.\n * Material not in DG-TAXUD document sourced from:\n * `https://en.wikipedia.org/wiki/Italian_fiscal_code`\n */\n\n\nfunction itItCheck(tin) {\n  // Capitalize and split characters into an array for further processing\n  var chars = tin.toUpperCase().split(''); // Check first and last name validity calling itItNameCheck()\n\n  if (!itItNameCheck(chars.slice(0, 3))) {\n    return false;\n  }\n\n  if (!itItNameCheck(chars.slice(3, 6))) {\n    return false;\n  } // Convert letters in number spaces back to numbers if any\n\n\n  var number_locations = [6, 7, 9, 10, 12, 13, 14];\n  var number_replace = {\n    L: '0',\n    M: '1',\n    N: '2',\n    P: '3',\n    Q: '4',\n    R: '5',\n    S: '6',\n    T: '7',\n    U: '8',\n    V: '9'\n  };\n\n  for (var _i4 = 0, _number_locations = number_locations; _i4 < _number_locations.length; _i4++) {\n    var i = _number_locations[_i4];\n\n    if (chars[i] in number_replace) {\n      chars.splice(i, 1, number_replace[chars[i]]);\n    }\n  } // Extract month and day, and check date validity\n\n\n  var month_replace = {\n    A: '01',\n    B: '02',\n    C: '03',\n    D: '04',\n    E: '05',\n    H: '06',\n    L: '07',\n    M: '08',\n    P: '09',\n    R: '10',\n    S: '11',\n    T: '12'\n  };\n  var month = month_replace[chars[8]];\n  var day = parseInt(chars[9] + chars[10], 10);\n\n  if (day > 40) {\n    day -= 40;\n  }\n\n  if (day < 10) {\n    day = \"0\".concat(day);\n  }\n\n  var date = \"\".concat(chars[6]).concat(chars[7], \"/\").concat(month, \"/\").concat(day);\n\n  if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n    return false;\n  } // Calculate check character by adding up even and odd characters as numbers\n\n\n  var checksum = 0;\n\n  for (var _i5 = 1; _i5 < chars.length - 1; _i5 += 2) {\n    var char_to_int = parseInt(chars[_i5], 10);\n\n    if (isNaN(char_to_int)) {\n      char_to_int = chars[_i5].charCodeAt(0) - 65;\n    }\n\n    checksum += char_to_int;\n  }\n\n  var odd_convert = {\n    // Maps of characters at odd places\n    A: 1,\n    B: 0,\n    C: 5,\n    D: 7,\n    E: 9,\n    F: 13,\n    G: 15,\n    H: 17,\n    I: 19,\n    J: 21,\n    K: 2,\n    L: 4,\n    M: 18,\n    N: 20,\n    O: 11,\n    P: 3,\n    Q: 6,\n    R: 8,\n    S: 12,\n    T: 14,\n    U: 16,\n    V: 10,\n    W: 22,\n    X: 25,\n    Y: 24,\n    Z: 23,\n    0: 1,\n    1: 0\n  };\n\n  for (var _i6 = 0; _i6 < chars.length - 1; _i6 += 2) {\n    var _char_to_int = 0;\n\n    if (chars[_i6] in odd_convert) {\n      _char_to_int = odd_convert[chars[_i6]];\n    } else {\n      var multiplier = parseInt(chars[_i6], 10);\n      _char_to_int = 2 * multiplier + 1;\n\n      if (multiplier > 4) {\n        _char_to_int += 2;\n      }\n    }\n\n    checksum += _char_to_int;\n  }\n\n  if (String.fromCharCode(65 + checksum % 26) !== chars[15]) {\n    return false;\n  }\n\n  return true;\n}\n/*\n * lv-LV validation function\n * (Personas kods (PK), persons only)\n * Check validity of birth date and calculate check (last) digit\n * Support only for old format numbers (not starting with '32', issued before 2017/07/01)\n * Material not in DG TAXUD document sourced from:\n * `https://boot.ritakafija.lv/forums/index.php?/topic/88314-personas-koda-algoritms-%C4%8Deksumma/`\n */\n\n\nfunction lvLvCheck(tin) {\n  tin = tin.replace(/\\W/, ''); // Extract date from TIN\n\n  var day = tin.slice(0, 2);\n\n  if (day !== '32') {\n    // No date/checksum check if new format\n    var month = tin.slice(2, 4);\n\n    if (month !== '00') {\n      // No date check if unknown month\n      var full_year = tin.slice(4, 6);\n\n      switch (tin[6]) {\n        case '0':\n          full_year = \"18\".concat(full_year);\n          break;\n\n        case '1':\n          full_year = \"19\".concat(full_year);\n          break;\n\n        default:\n          full_year = \"20\".concat(full_year);\n          break;\n      } // Check date validity\n\n\n      var date = \"\".concat(full_year, \"/\").concat(tin.slice(2, 4), \"/\").concat(day);\n\n      if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n        return false;\n      }\n    } // Calculate check digit\n\n\n    var checksum = 1101;\n    var multip_lookup = [1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n\n    for (var i = 0; i < tin.length - 1; i++) {\n      checksum -= parseInt(tin[i], 10) * multip_lookup[i];\n    }\n\n    return parseInt(tin[10], 10) === checksum % 11;\n  }\n\n  return true;\n}\n/*\n * mt-MT validation function\n * (Identity Card Number or Unique Taxpayer Reference, persons/entities)\n * Verify Identity Card Number structure (no other tests found)\n */\n\n\nfunction mtMtCheck(tin) {\n  if (tin.length !== 9) {\n    // No tests for UTR\n    var chars = tin.toUpperCase().split(''); // Fill with zeros if smaller than proper\n\n    while (chars.length < 8) {\n      chars.unshift(0);\n    } // Validate format according to last character\n\n\n    switch (tin[7]) {\n      case 'A':\n      case 'P':\n        if (parseInt(chars[6], 10) === 0) {\n          return false;\n        }\n\n        break;\n\n      default:\n        {\n          var first_part = parseInt(chars.join('').slice(0, 5), 10);\n\n          if (first_part > 32000) {\n            return false;\n          }\n\n          var second_part = parseInt(chars.join('').slice(5, 7), 10);\n\n          if (first_part === second_part) {\n            return false;\n          }\n        }\n    }\n  }\n\n  return true;\n}\n/*\n * nl-NL validation function\n * (Burgerservicenummer (BSN) or Rechtspersonen Samenwerkingsverbanden Informatie Nummer (RSIN),\n * persons/entities respectively)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\n\n\nfunction nlNlCheck(tin) {\n  return algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n    return parseInt(a, 10);\n  }), 9) % 11 === parseInt(tin[8], 10);\n}\n/*\n * pl-PL validation function\n * (Powszechny Elektroniczny System Ewidencji Ludności (PESEL)\n * or Numer identyfikacji podatkowej (NIP), persons/entities)\n * Verify TIN validity by validating birth date (PESEL) and calculating check (last) digit\n */\n\n\nfunction plPlCheck(tin) {\n  // NIP\n  if (tin.length === 10) {\n    // Calculate last digit by multiplying with lookup\n    var lookup = [6, 5, 7, 2, 3, 4, 5, 6, 7];\n    var _checksum = 0;\n\n    for (var i = 0; i < lookup.length; i++) {\n      _checksum += parseInt(tin[i], 10) * lookup[i];\n    }\n\n    _checksum %= 11;\n\n    if (_checksum === 10) {\n      return false;\n    }\n\n    return _checksum === parseInt(tin[9], 10);\n  } // PESEL\n  // Extract full year using month\n\n\n  var full_year = tin.slice(0, 2);\n  var month = parseInt(tin.slice(2, 4), 10);\n\n  if (month > 80) {\n    full_year = \"18\".concat(full_year);\n    month -= 80;\n  } else if (month > 60) {\n    full_year = \"22\".concat(full_year);\n    month -= 60;\n  } else if (month > 40) {\n    full_year = \"21\".concat(full_year);\n    month -= 40;\n  } else if (month > 20) {\n    full_year = \"20\".concat(full_year);\n    month -= 20;\n  } else {\n    full_year = \"19\".concat(full_year);\n  } // Add leading zero to month if needed\n\n\n  if (month < 10) {\n    month = \"0\".concat(month);\n  } // Check date validity\n\n\n  var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n\n  if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  } // Calculate last digit by mulitplying with odd one-digit numbers except 5\n\n\n  var checksum = 0;\n  var multiplier = 1;\n\n  for (var _i7 = 0; _i7 < tin.length - 1; _i7++) {\n    checksum += parseInt(tin[_i7], 10) * multiplier % 10;\n    multiplier += 2;\n\n    if (multiplier > 10) {\n      multiplier = 1;\n    } else if (multiplier === 5) {\n      multiplier += 2;\n    }\n  }\n\n  checksum = 10 - checksum % 10;\n  return checksum === parseInt(tin[10], 10);\n}\n/*\n* pt-BR validation function\n* (Cadastro de Pessoas Físicas (CPF, persons)\n* Cadastro Nacional de Pessoas Jurídicas (CNPJ, entities)\n* Both inputs will be validated\n*/\n\n\nfunction ptBrCheck(tin) {\n  if (tin.length === 11) {\n    var _sum;\n\n    var remainder;\n    _sum = 0;\n    if ( // Reject known invalid CPFs\n    tin === '11111111111' || tin === '22222222222' || tin === '33333333333' || tin === '44444444444' || tin === '55555555555' || tin === '66666666666' || tin === '77777777777' || tin === '88888888888' || tin === '99999999999' || tin === '00000000000') return false;\n\n    for (var i = 1; i <= 9; i++) {\n      _sum += parseInt(tin.substring(i - 1, i), 10) * (11 - i);\n    }\n\n    remainder = _sum * 10 % 11;\n    if (remainder === 10) remainder = 0;\n    if (remainder !== parseInt(tin.substring(9, 10), 10)) return false;\n    _sum = 0;\n\n    for (var _i8 = 1; _i8 <= 10; _i8++) {\n      _sum += parseInt(tin.substring(_i8 - 1, _i8), 10) * (12 - _i8);\n    }\n\n    remainder = _sum * 10 % 11;\n    if (remainder === 10) remainder = 0;\n    if (remainder !== parseInt(tin.substring(10, 11), 10)) return false;\n    return true;\n  }\n\n  if ( // Reject know invalid CNPJs\n  tin === '00000000000000' || tin === '11111111111111' || tin === '22222222222222' || tin === '33333333333333' || tin === '44444444444444' || tin === '55555555555555' || tin === '66666666666666' || tin === '77777777777777' || tin === '88888888888888' || tin === '99999999999999') {\n    return false;\n  }\n\n  var length = tin.length - 2;\n  var identifiers = tin.substring(0, length);\n  var verificators = tin.substring(length);\n  var sum = 0;\n  var pos = length - 7;\n\n  for (var _i9 = length; _i9 >= 1; _i9--) {\n    sum += identifiers.charAt(length - _i9) * pos;\n    pos -= 1;\n\n    if (pos < 2) {\n      pos = 9;\n    }\n  }\n\n  var result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n\n  if (result !== parseInt(verificators.charAt(0), 10)) {\n    return false;\n  }\n\n  length += 1;\n  identifiers = tin.substring(0, length);\n  sum = 0;\n  pos = length - 7;\n\n  for (var _i10 = length; _i10 >= 1; _i10--) {\n    sum += identifiers.charAt(length - _i10) * pos;\n    pos -= 1;\n\n    if (pos < 2) {\n      pos = 9;\n    }\n  }\n\n  result = sum % 11 < 2 ? 0 : 11 - sum % 11;\n\n  if (result !== parseInt(verificators.charAt(1), 10)) {\n    return false;\n  }\n\n  return true;\n}\n/*\n * pt-PT validation function\n * (Número de identificação fiscal (NIF), persons/entities)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\n\n\nfunction ptPtCheck(tin) {\n  var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n    return parseInt(a, 10);\n  }), 9) % 11;\n\n  if (checksum > 9) {\n    return parseInt(tin[8], 10) === 0;\n  }\n\n  return checksum === parseInt(tin[8], 10);\n}\n/*\n * ro-RO validation function\n * (Cod Numeric Personal (CNP) or Cod de înregistrare fiscală (CIF),\n * persons only)\n * Verify CNP validity by calculating check (last) digit (test not found for CIF)\n * Material not in DG TAXUD document sourced from:\n * `https://en.wikipedia.org/wiki/National_identification_number#Romania`\n */\n\n\nfunction roRoCheck(tin) {\n  if (tin.slice(0, 4) !== '9000') {\n    // No test found for this format\n    // Extract full year using century digit if possible\n    var full_year = tin.slice(1, 3);\n\n    switch (tin[0]) {\n      case '1':\n      case '2':\n        full_year = \"19\".concat(full_year);\n        break;\n\n      case '3':\n      case '4':\n        full_year = \"18\".concat(full_year);\n        break;\n\n      case '5':\n      case '6':\n        full_year = \"20\".concat(full_year);\n        break;\n\n      default:\n    } // Check date validity\n\n\n    var date = \"\".concat(full_year, \"/\").concat(tin.slice(3, 5), \"/\").concat(tin.slice(5, 7));\n\n    if (date.length === 8) {\n      if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n        return false;\n      }\n    } else if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    } // Calculate check digit\n\n\n    var digits = tin.split('').map(function (a) {\n      return parseInt(a, 10);\n    });\n    var multipliers = [2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9];\n    var checksum = 0;\n\n    for (var i = 0; i < multipliers.length; i++) {\n      checksum += digits[i] * multipliers[i];\n    }\n\n    if (checksum % 11 === 10) {\n      return digits[12] === 1;\n    }\n\n    return digits[12] === checksum % 11;\n  }\n\n  return true;\n}\n/*\n * sk-SK validation function\n * (Rodné číslo (RČ) or bezvýznamové identifikačné číslo (BIČ), persons only)\n * Checks validity of pre-1954 birth numbers (rodné číslo) only\n * Due to the introduction of the pseudo-random BIČ it is not possible to test\n * post-1954 birth numbers without knowing whether they are BIČ or RČ beforehand\n */\n\n\nfunction skSkCheck(tin) {\n  if (tin.length === 9) {\n    tin = tin.replace(/\\W/, '');\n\n    if (tin.slice(6) === '000') {\n      return false;\n    } // Three-zero serial not assigned before 1954\n    // Extract full year from TIN length\n\n\n    var full_year = parseInt(tin.slice(0, 2), 10);\n\n    if (full_year > 53) {\n      return false;\n    }\n\n    if (full_year < 10) {\n      full_year = \"190\".concat(full_year);\n    } else {\n      full_year = \"19\".concat(full_year);\n    } // Extract month from TIN and normalize\n\n\n    var month = parseInt(tin.slice(2, 4), 10);\n\n    if (month > 50) {\n      month -= 50;\n    }\n\n    if (month < 10) {\n      month = \"0\".concat(month);\n    } // Check date validity\n\n\n    var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(tin.slice(4, 6));\n\n    if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/*\n * sl-SI validation function\n * (Davčna številka, persons/entities)\n * Verify TIN validity by calculating check (last) digit (variant of MOD 11)\n */\n\n\nfunction slSiCheck(tin) {\n  var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 7).map(function (a) {\n    return parseInt(a, 10);\n  }), 8) % 11;\n\n  if (checksum === 10) {\n    return parseInt(tin[7], 10) === 0;\n  }\n\n  return checksum === parseInt(tin[7], 10);\n}\n/*\n * sv-SE validation function\n * (Personnummer or samordningsnummer, persons only)\n * Checks validity of birth date and calls luhnCheck() to validate check (last) digit\n */\n\n\nfunction svSeCheck(tin) {\n  // Make copy of TIN and normalize to two-digit year form\n  var tin_copy = tin.slice(0);\n\n  if (tin.length > 11) {\n    tin_copy = tin_copy.slice(2);\n  } // Extract date of birth\n\n\n  var full_year = '';\n  var month = tin_copy.slice(2, 4);\n  var day = parseInt(tin_copy.slice(4, 6), 10);\n\n  if (tin.length > 11) {\n    full_year = tin.slice(0, 4);\n  } else {\n    full_year = tin.slice(0, 2);\n\n    if (tin.length === 11 && day < 60) {\n      // Extract full year from centenarian symbol\n      // Should work just fine until year 10000 or so\n      var current_year = new Date().getFullYear().toString();\n      var current_century = parseInt(current_year.slice(0, 2), 10);\n      current_year = parseInt(current_year, 10);\n\n      if (tin[6] === '-') {\n        if (parseInt(\"\".concat(current_century).concat(full_year), 10) > current_year) {\n          full_year = \"\".concat(current_century - 1).concat(full_year);\n        } else {\n          full_year = \"\".concat(current_century).concat(full_year);\n        }\n      } else {\n        full_year = \"\".concat(current_century - 1).concat(full_year);\n\n        if (current_year - parseInt(full_year, 10) < 100) {\n          return false;\n        }\n      }\n    }\n  } // Normalize day and check date validity\n\n\n  if (day > 60) {\n    day -= 60;\n  }\n\n  if (day < 10) {\n    day = \"0\".concat(day);\n  }\n\n  var date = \"\".concat(full_year, \"/\").concat(month, \"/\").concat(day);\n\n  if (date.length === 8) {\n    if (!(0, _isDate.default)(date, 'YY/MM/DD')) {\n      return false;\n    }\n  } else if (!(0, _isDate.default)(date, 'YYYY/MM/DD')) {\n    return false;\n  }\n\n  return algorithms.luhnCheck(tin.replace(/\\W/, ''));\n} // Locale lookup objects\n\n/*\n * Tax id regex formats for various locales\n *\n * Where not explicitly specified in DG-TAXUD document both\n * uppercase and lowercase letters are acceptable.\n */\n\n\nvar taxIdFormat = {\n  'bg-BG': /^\\d{10}$/,\n  'cs-CZ': /^\\d{6}\\/{0,1}\\d{3,4}$/,\n  'de-AT': /^\\d{9}$/,\n  'de-DE': /^[1-9]\\d{10}$/,\n  'dk-DK': /^\\d{6}-{0,1}\\d{4}$/,\n  'el-CY': /^[09]\\d{7}[A-Z]$/,\n  'el-GR': /^([0-4]|[7-9])\\d{8}$/,\n  'en-CA': /^\\d{9}$/,\n  'en-GB': /^\\d{10}$|^(?!GB|NK|TN|ZZ)(?![DFIQUV])[A-Z](?![DFIQUVO])[A-Z]\\d{6}[ABCD ]$/i,\n  'en-IE': /^\\d{7}[A-W][A-IW]{0,1}$/i,\n  'en-US': /^\\d{2}[- ]{0,1}\\d{7}$/,\n  'es-ES': /^(\\d{0,8}|[XYZKLM]\\d{7})[A-HJ-NP-TV-Z]$/i,\n  'et-EE': /^[1-6]\\d{6}(00[1-9]|0[1-9][0-9]|[1-6][0-9]{2}|70[0-9]|710)\\d$/,\n  'fi-FI': /^\\d{6}[-+A]\\d{3}[0-9A-FHJ-NPR-Y]$/i,\n  'fr-BE': /^\\d{11}$/,\n  'fr-FR': /^[0-3]\\d{12}$|^[0-3]\\d\\s\\d{2}(\\s\\d{3}){3}$/,\n  // Conforms both to official spec and provided example\n  'fr-LU': /^\\d{13}$/,\n  'hr-HR': /^\\d{11}$/,\n  'hu-HU': /^8\\d{9}$/,\n  'it-IT': /^[A-Z]{6}[L-NP-V0-9]{2}[A-EHLMPRST][L-NP-V0-9]{2}[A-ILMZ][L-NP-V0-9]{3}[A-Z]$/i,\n  'lv-LV': /^\\d{6}-{0,1}\\d{5}$/,\n  // Conforms both to DG TAXUD spec and original research\n  'mt-MT': /^\\d{3,7}[APMGLHBZ]$|^([1-8])\\1\\d{7}$/i,\n  'nl-NL': /^\\d{9}$/,\n  'pl-PL': /^\\d{10,11}$/,\n  'pt-BR': /(?:^\\d{11}$)|(?:^\\d{14}$)/,\n  'pt-PT': /^\\d{9}$/,\n  'ro-RO': /^\\d{13}$/,\n  'sk-SK': /^\\d{6}\\/{0,1}\\d{3,4}$/,\n  'sl-SI': /^[1-9]\\d{7}$/,\n  'sv-SE': /^(\\d{6}[-+]{0,1}\\d{4}|(18|19|20)\\d{6}[-+]{0,1}\\d{4})$/\n}; // taxIdFormat locale aliases\n\ntaxIdFormat['lb-LU'] = taxIdFormat['fr-LU'];\ntaxIdFormat['lt-LT'] = taxIdFormat['et-EE'];\ntaxIdFormat['nl-BE'] = taxIdFormat['fr-BE'];\ntaxIdFormat['fr-CA'] = taxIdFormat['en-CA']; // Algorithmic tax id check functions for various locales\n\nvar taxIdCheck = {\n  'bg-BG': bgBgCheck,\n  'cs-CZ': csCzCheck,\n  'de-AT': deAtCheck,\n  'de-DE': deDeCheck,\n  'dk-DK': dkDkCheck,\n  'el-CY': elCyCheck,\n  'el-GR': elGrCheck,\n  'en-CA': isCanadianSIN,\n  'en-IE': enIeCheck,\n  'en-US': enUsCheck,\n  'es-ES': esEsCheck,\n  'et-EE': etEeCheck,\n  'fi-FI': fiFiCheck,\n  'fr-BE': frBeCheck,\n  'fr-FR': frFrCheck,\n  'fr-LU': frLuCheck,\n  'hr-HR': hrHrCheck,\n  'hu-HU': huHuCheck,\n  'it-IT': itItCheck,\n  'lv-LV': lvLvCheck,\n  'mt-MT': mtMtCheck,\n  'nl-NL': nlNlCheck,\n  'pl-PL': plPlCheck,\n  'pt-BR': ptBrCheck,\n  'pt-PT': ptPtCheck,\n  'ro-RO': roRoCheck,\n  'sk-SK': skSkCheck,\n  'sl-SI': slSiCheck,\n  'sv-SE': svSeCheck\n}; // taxIdCheck locale aliases\n\ntaxIdCheck['lb-LU'] = taxIdCheck['fr-LU'];\ntaxIdCheck['lt-LT'] = taxIdCheck['et-EE'];\ntaxIdCheck['nl-BE'] = taxIdCheck['fr-BE'];\ntaxIdCheck['fr-CA'] = taxIdCheck['en-CA']; // Regexes for locales where characters should be omitted before checking format\n\nvar allsymbols = /[-\\\\\\/!@#$%\\^&\\*\\(\\)\\+\\=\\[\\]]+/g;\nvar sanitizeRegexes = {\n  'de-AT': allsymbols,\n  'de-DE': /[\\/\\\\]/g,\n  'fr-BE': allsymbols\n}; // sanitizeRegexes locale aliases\n\nsanitizeRegexes['nl-BE'] = sanitizeRegexes['fr-BE'];\n/*\n * Validator function\n * Return true if the passed string is a valid tax identification number\n * for the specified locale.\n * Throw an error exception if the locale is not supported.\n */\n\nfunction isTaxID(str) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'en-US';\n  (0, _assertString.default)(str); // Copy TIN to avoid replacement if sanitized\n\n  var strcopy = str.slice(0);\n\n  if (locale in taxIdFormat) {\n    if (locale in sanitizeRegexes) {\n      strcopy = strcopy.replace(sanitizeRegexes[locale], '');\n    }\n\n    if (!taxIdFormat[locale].test(strcopy)) {\n      return false;\n    }\n\n    if (locale in taxIdCheck) {\n      return taxIdCheck[locale](strcopy);\n    } // Fallthrough; not all locales have algorithmic checks\n\n\n    return true;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO6391;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar isISO6391Set = new Set(['aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'io', 'is', 'it', 'iu', 'ja', 'jv', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu']);\n\nfunction isISO6391(str) {\n  (0, _assertString.default)(str);\n  return isISO6391Set.has(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO4217;\nexports.CurrencyCodes = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// from https://en.wikipedia.org/wiki/ISO_4217\nvar validISO4217CurrencyCodes = new Set(['AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'CNY', 'COP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'GBP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'INR', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SVC', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'USN', 'UYI', 'UYU', 'UYW', 'UZS', 'VES', 'VND', 'VUV', 'WST', 'XAF', 'XAG', 'XAU', 'XBA', 'XBB', 'XBC', 'XBD', 'XCD', 'XDR', 'XOF', 'XPD', 'XPF', 'XPT', 'XSU', 'XTS', 'XUA', 'XXX', 'YER', 'ZAR', 'ZMW', 'ZWL']);\n\nfunction isISO4217(str) {\n  (0, _assertString.default)(str);\n  return validISO4217CurrencyCodes.has(str.toUpperCase());\n}\n\nvar CurrencyCodes = validISO4217CurrencyCodes;\nexports.CurrencyCodes = CurrencyCodes;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase58;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Accepted chars - 123456789ABCDEFGH JKLMN PQRSTUVWXYZabcdefghijk mnopqrstuvwxyz\nvar base58Reg = /^[A-HJ-NP-Za-km-z1-9]*$/;\n\nfunction isBase58(str) {\n  (0, _assertString.default)(str);\n\n  if (base58Reg.test(str)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ltrim;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ltrim(str, chars) {\n  (0, _assertString.default)(str); // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n\n  var pattern = chars ? new RegExp(\"^[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+\"), 'g') : /^\\s+/g;\n  return str.replace(pattern, '');\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rtrim;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rtrim(str, chars) {\n  (0, _assertString.default)(str);\n\n  if (chars) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n    var pattern = new RegExp(\"[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+$\"), 'g');\n    return str.replace(pattern, '');\n  } // Use a faster and more safe than regex trim method https://blog.stevenlevithan.com/archives/faster-trim-javascript\n\n\n  var strIndex = str.length - 1;\n\n  while (/\\s/.test(str.charAt(strIndex))) {\n    strIndex -= 1;\n  }\n\n  return str.slice(0, strIndex + 1);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = trim;\n\nvar _rtrim = _interopRequireDefault(require(\"./rtrim\"));\n\nvar _ltrim = _interopRequireDefault(require(\"./ltrim\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction trim(str, chars) {\n  return (0, _rtrim.default)((0, _ltrim.default)(str, chars), chars);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = escape;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction escape(str) {\n  (0, _assertString.default)(str);\n  return str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;').replace(/\\\\/g, '&#x5C;').replace(/`/g, '&#96;');\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = unescape;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction unescape(str) {\n  (0, _assertString.default)(str);\n  return str.replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&#x2F;/g, '/').replace(/&#x5C;/g, '\\\\').replace(/&#96;/g, '`').replace(/&amp;/g, '&'); // &amp; replacement has to be the last one to prevent\n  // bugs with intermediate strings containing escape sequences\n  // See: https://github.com/validatorjs/validator.js/issues/1827\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = blacklist;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction blacklist(str, chars) {\n  (0, _assertString.default)(str);\n  return str.replace(new RegExp(\"[\".concat(chars, \"]+\"), 'g'), '');\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stripLow;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _blacklist = _interopRequireDefault(require(\"./blacklist\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stripLow(str, keep_new_lines) {\n  (0, _assertString.default)(str);\n  var chars = keep_new_lines ? '\\\\x00-\\\\x09\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F' : '\\\\x00-\\\\x1F\\\\x7F';\n  return (0, _blacklist.default)(str, chars);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = whitelist;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction whitelist(str, chars) {\n  (0, _assertString.default)(str);\n  return str.replace(new RegExp(\"[^\".concat(chars, \"]+\"), 'g'), '');\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isWhitelisted;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isWhitelisted(str, chars) {\n  (0, _assertString.default)(str);\n\n  for (var i = str.length - 1; i >= 0; i--) {\n    if (chars.indexOf(str[i]) === -1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = normalizeEmail;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_normalize_email_options = {\n  // The following options apply to all email addresses\n  // Lowercases the local part of the email address.\n  // Please note this may violate RFC 5321 as per http://stackoverflow.com/a/9808332/192024).\n  // The domain is always lowercased, as per RFC 1035\n  all_lowercase: true,\n  // The following conversions are specific to GMail\n  // Lowercases the local part of the GMail address (known to be case-insensitive)\n  gmail_lowercase: true,\n  // Removes dots from the local part of the email address, as that's ignored by GMail\n  gmail_remove_dots: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  gmail_remove_subaddress: true,\n  // Conversts the googlemail.com domain to gmail.com\n  gmail_convert_googlemaildotcom: true,\n  // The following conversions are specific to Outlook.com / Windows Live / Hotmail\n  // Lowercases the local part of the Outlook.com address (known to be case-insensitive)\n  outlookdotcom_lowercase: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  outlookdotcom_remove_subaddress: true,\n  // The following conversions are specific to Yahoo\n  // Lowercases the local part of the Yahoo address (known to be case-insensitive)\n  yahoo_lowercase: true,\n  // Removes the subaddress (e.g. \"-foo\") from the email address\n  yahoo_remove_subaddress: true,\n  // The following conversions are specific to Yandex\n  // Lowercases the local part of the Yandex address (known to be case-insensitive)\n  yandex_lowercase: true,\n  // The following conversions are specific to iCloud\n  // Lowercases the local part of the iCloud address (known to be case-insensitive)\n  icloud_lowercase: true,\n  // Removes the subaddress (e.g. \"+foo\") from the email address\n  icloud_remove_subaddress: true\n}; // List of domains used by iCloud\n\nvar icloud_domains = ['icloud.com', 'me.com']; // List of domains used by Outlook.com and its predecessors\n// This list is likely incomplete.\n// Partial reference:\n// https://blogs.office.com/2013/04/17/outlook-com-gets-two-step-verification-sign-in-by-alias-and-new-international-domains/\n\nvar outlookdotcom_domains = ['hotmail.at', 'hotmail.be', 'hotmail.ca', 'hotmail.cl', 'hotmail.co.il', 'hotmail.co.nz', 'hotmail.co.th', 'hotmail.co.uk', 'hotmail.com', 'hotmail.com.ar', 'hotmail.com.au', 'hotmail.com.br', 'hotmail.com.gr', 'hotmail.com.mx', 'hotmail.com.pe', 'hotmail.com.tr', 'hotmail.com.vn', 'hotmail.cz', 'hotmail.de', 'hotmail.dk', 'hotmail.es', 'hotmail.fr', 'hotmail.hu', 'hotmail.id', 'hotmail.ie', 'hotmail.in', 'hotmail.it', 'hotmail.jp', 'hotmail.kr', 'hotmail.lv', 'hotmail.my', 'hotmail.ph', 'hotmail.pt', 'hotmail.sa', 'hotmail.sg', 'hotmail.sk', 'live.be', 'live.co.uk', 'live.com', 'live.com.ar', 'live.com.mx', 'live.de', 'live.es', 'live.eu', 'live.fr', 'live.it', 'live.nl', 'msn.com', 'outlook.at', 'outlook.be', 'outlook.cl', 'outlook.co.il', 'outlook.co.nz', 'outlook.co.th', 'outlook.com', 'outlook.com.ar', 'outlook.com.au', 'outlook.com.br', 'outlook.com.gr', 'outlook.com.pe', 'outlook.com.tr', 'outlook.com.vn', 'outlook.cz', 'outlook.de', 'outlook.dk', 'outlook.es', 'outlook.fr', 'outlook.hu', 'outlook.id', 'outlook.ie', 'outlook.in', 'outlook.it', 'outlook.jp', 'outlook.kr', 'outlook.lv', 'outlook.my', 'outlook.ph', 'outlook.pt', 'outlook.sa', 'outlook.sg', 'outlook.sk', 'passport.com']; // List of domains used by Yahoo Mail\n// This list is likely incomplete\n\nvar yahoo_domains = ['rocketmail.com', 'yahoo.ca', 'yahoo.co.uk', 'yahoo.com', 'yahoo.de', 'yahoo.fr', 'yahoo.in', 'yahoo.it', 'ymail.com']; // List of domains used by yandex.ru\n\nvar yandex_domains = ['yandex.ru', 'yandex.ua', 'yandex.kz', 'yandex.com', 'yandex.by', 'ya.ru']; // replace single dots, but not multiple consecutive dots\n\nfunction dotsReplacer(match) {\n  if (match.length > 1) {\n    return match;\n  }\n\n  return '';\n}\n\nfunction normalizeEmail(email, options) {\n  options = (0, _merge.default)(options, default_normalize_email_options);\n  var raw_parts = email.split('@');\n  var domain = raw_parts.pop();\n  var user = raw_parts.join('@');\n  var parts = [user, domain]; // The domain is always lowercased, as it's case-insensitive per RFC 1035\n\n  parts[1] = parts[1].toLowerCase();\n\n  if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {\n    // Address is GMail\n    if (options.gmail_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n\n    if (options.gmail_remove_dots) {\n      // this does not replace consecutive dots like example..email@gmail.com\n      parts[0] = parts[0].replace(/\\.+/g, dotsReplacer);\n    }\n\n    if (!parts[0].length) {\n      return false;\n    }\n\n    if (options.all_lowercase || options.gmail_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n\n    parts[1] = options.gmail_convert_googlemaildotcom ? 'gmail.com' : parts[1];\n  } else if (icloud_domains.indexOf(parts[1]) >= 0) {\n    // Address is iCloud\n    if (options.icloud_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n\n    if (!parts[0].length) {\n      return false;\n    }\n\n    if (options.all_lowercase || options.icloud_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (outlookdotcom_domains.indexOf(parts[1]) >= 0) {\n    // Address is Outlook.com\n    if (options.outlookdotcom_remove_subaddress) {\n      parts[0] = parts[0].split('+')[0];\n    }\n\n    if (!parts[0].length) {\n      return false;\n    }\n\n    if (options.all_lowercase || options.outlookdotcom_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (yahoo_domains.indexOf(parts[1]) >= 0) {\n    // Address is Yahoo\n    if (options.yahoo_remove_subaddress) {\n      var components = parts[0].split('-');\n      parts[0] = components.length > 1 ? components.slice(0, -1).join('-') : components[0];\n    }\n\n    if (!parts[0].length) {\n      return false;\n    }\n\n    if (options.all_lowercase || options.yahoo_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n  } else if (yandex_domains.indexOf(parts[1]) >= 0) {\n    if (options.all_lowercase || options.yandex_lowercase) {\n      parts[0] = parts[0].toLowerCase();\n    }\n\n    parts[1] = 'yandex.ru'; // all yandex domains are equal, 1st preferred\n  } else if (options.all_lowercase) {\n    // Any other address\n    parts[0] = parts[0].toLowerCase();\n  }\n\n  return parts.join('@');\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSlug;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar charsetRegex = /^[^\\s-_](?!.*?[-_]{2,})[a-z0-9-\\\\][^\\s]*[^-_\\s]$/;\n\nfunction isSlug(str) {\n  (0, _assertString.default)(str);\n  return charsetRegex.test(str);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isLicensePlate;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validators = {\n  'cs-CZ': function csCZ(str) {\n    return /^(([ABCDEFHIJKLMNPRSTUVXYZ]|[0-9])-?){5,8}$/.test(str);\n  },\n  'de-DE': function deDE(str) {\n    return /^((A|AA|AB|AC|AE|AH|AK|AM|AN|AÖ|AP|AS|AT|AU|AW|AZ|B|BA|BB|BC|BE|BF|BH|BI|BK|BL|BM|BN|BO|BÖ|BS|BT|BZ|C|CA|CB|CE|CO|CR|CW|D|DA|DD|DE|DH|DI|DL|DM|DN|DO|DU|DW|DZ|E|EA|EB|ED|EE|EF|EG|EH|EI|EL|EM|EN|ER|ES|EU|EW|F|FB|FD|FF|FG|FI|FL|FN|FO|FR|FS|FT|FÜ|FW|FZ|G|GA|GC|GD|GE|GF|GG|GI|GK|GL|GM|GN|GÖ|GP|GR|GS|GT|GÜ|GV|GW|GZ|H|HA|HB|HC|HD|HE|HF|HG|HH|HI|HK|HL|HM|HN|HO|HP|HR|HS|HU|HV|HX|HY|HZ|IK|IL|IN|IZ|J|JE|JL|K|KA|KB|KC|KE|KF|KG|KH|KI|KK|KL|KM|KN|KO|KR|KS|KT|KU|KW|KY|L|LA|LB|LC|LD|LF|LG|LH|LI|LL|LM|LN|LÖ|LP|LR|LU|M|MA|MB|MC|MD|ME|MG|MH|MI|MK|ML|MM|MN|MO|MQ|MR|MS|MÜ|MW|MY|MZ|N|NB|ND|NE|NF|NH|NI|NK|NM|NÖ|NP|NR|NT|NU|NW|NY|NZ|OA|OB|OC|OD|OE|OF|OG|OH|OK|OL|OP|OS|OZ|P|PA|PB|PE|PF|PI|PL|PM|PN|PR|PS|PW|PZ|R|RA|RC|RD|RE|RG|RH|RI|RL|RM|RN|RO|RP|RS|RT|RU|RV|RW|RZ|S|SB|SC|SE|SG|SI|SK|SL|SM|SN|SO|SP|SR|ST|SU|SW|SY|SZ|TE|TF|TG|TO|TP|TR|TS|TT|TÜ|ÜB|UE|UH|UL|UM|UN|V|VB|VG|VK|VR|VS|W|WA|WB|WE|WF|WI|WK|WL|WM|WN|WO|WR|WS|WT|WÜ|WW|WZ|Z|ZE|ZI|ZP|ZR|ZW|ZZ)[- ]?[A-Z]{1,2}[- ]?\\d{1,4}|(ABG|ABI|AIB|AIC|ALF|ALZ|ANA|ANG|ANK|APD|ARN|ART|ASL|ASZ|AUR|AZE|BAD|BAR|BBG|BCH|BED|BER|BGD|BGL|BID|BIN|BIR|BIT|BIW|BKS|BLB|BLK|BNA|BOG|BOH|BOR|BOT|BRA|BRB|BRG|BRK|BRL|BRV|BSB|BSK|BTF|BÜD|BUL|BÜR|BÜS|BÜZ|CAS|CHA|CLP|CLZ|COC|COE|CUX|DAH|DAN|DAU|DBR|DEG|DEL|DGF|DIL|DIN|DIZ|DKB|DLG|DON|DUD|DÜW|EBE|EBN|EBS|ECK|EIC|EIL|EIN|EIS|EMD|EMS|ERB|ERH|ERK|ERZ|ESB|ESW|FDB|FDS|FEU|FFB|FKB|FLÖ|FOR|FRG|FRI|FRW|FTL|FÜS|GAN|GAP|GDB|GEL|GEO|GER|GHA|GHC|GLA|GMN|GNT|GOA|GOH|GRA|GRH|GRI|GRM|GRZ|GTH|GUB|GUN|GVM|HAB|HAL|HAM|HAS|HBN|HBS|HCH|HDH|HDL|HEB|HEF|HEI|HER|HET|HGN|HGW|HHM|HIG|HIP|HMÜ|HOG|HOH|HOL|HOM|HOR|HÖS|HOT|HRO|HSK|HST|HVL|HWI|IGB|ILL|JÜL|KEH|KEL|KEM|KIB|KLE|KLZ|KÖN|KÖT|KÖZ|KRU|KÜN|KUS|KYF|LAN|LAU|LBS|LBZ|LDK|LDS|LEO|LER|LEV|LIB|LIF|LIP|LÖB|LOS|LRO|LSZ|LÜN|LUP|LWL|MAB|MAI|MAK|MAL|MED|MEG|MEI|MEK|MEL|MER|MET|MGH|MGN|MHL|MIL|MKK|MOD|MOL|MON|MOS|MSE|MSH|MSP|MST|MTK|MTL|MÜB|MÜR|MYK|MZG|NAB|NAI|NAU|NDH|NEA|NEB|NEC|NEN|NES|NEW|NMB|NMS|NOH|NOL|NOM|NOR|NVP|NWM|OAL|OBB|OBG|OCH|OHA|ÖHR|OHV|OHZ|OPR|OSL|OVI|OVL|OVP|PAF|PAN|PAR|PCH|PEG|PIR|PLÖ|PRÜ|QFT|QLB|RDG|REG|REH|REI|RID|RIE|ROD|ROF|ROK|ROL|ROS|ROT|ROW|RSL|RÜD|RÜG|SAB|SAD|SAN|SAW|SBG|SBK|SCZ|SDH|SDL|SDT|SEB|SEE|SEF|SEL|SFB|SFT|SGH|SHA|SHG|SHK|SHL|SIG|SIM|SLE|SLF|SLK|SLN|SLS|SLÜ|SLZ|SMÜ|SOB|SOG|SOK|SÖM|SON|SPB|SPN|SRB|SRO|STA|STB|STD|STE|STL|SUL|SÜW|SWA|SZB|TBB|TDO|TET|TIR|TÖL|TUT|UEM|UER|UFF|USI|VAI|VEC|VER|VIB|VIE|VIT|VOH|WAF|WAK|WAN|WAR|WAT|WBS|WDA|WEL|WEN|WER|WES|WHV|WIL|WIS|WIT|WIZ|WLG|WMS|WND|WOB|WOH|WOL|WOR|WOS|WRN|WSF|WST|WSW|WTL|WTM|WUG|WÜM|WUN|WUR|WZL|ZEL|ZIG)[- ]?(([A-Z][- ]?\\d{1,4})|([A-Z]{2}[- ]?\\d{1,3})))[- ]?(E|H)?$/.test(str);\n  },\n  'de-LI': function deLI(str) {\n    return /^FL[- ]?\\d{1,5}[UZ]?$/.test(str);\n  },\n  'en-IN': function enIN(str) {\n    return /^[A-Z]{2}[ -]?[0-9]{1,2}(?:[ -]?[A-Z])(?:[ -]?[A-Z]*)?[ -]?[0-9]{4}$/.test(str);\n  },\n  'es-AR': function esAR(str) {\n    return /^(([A-Z]{2} ?[0-9]{3} ?[A-Z]{2})|([A-Z]{3} ?[0-9]{3}))$/.test(str);\n  },\n  'fi-FI': function fiFI(str) {\n    return /^(?=.{4,7})(([A-Z]{1,3}|[0-9]{1,3})[\\s-]?([A-Z]{1,3}|[0-9]{1,5}))$/.test(str);\n  },\n  'hu-HU': function huHU(str) {\n    return /^((((?!AAA)(([A-NPRSTVZWXY]{1})([A-PR-Z]{1})([A-HJ-NPR-Z]))|(A[ABC]I)|A[ABC]O|A[A-W]Q|BPI|BPO|UCO|UDO|XAO)-(?!000)\\d{3})|(M\\d{6})|((CK|DT|CD|HC|H[ABEFIKLMNPRSTVX]|MA|OT|R[A-Z]) \\d{2}-\\d{2})|(CD \\d{3}-\\d{3})|(C-(C|X) \\d{4})|(X-(A|B|C) \\d{4})|(([EPVZ]-\\d{5}))|(S A[A-Z]{2} \\d{2})|(SP \\d{2}-\\d{2}))$/.test(str);\n  },\n  'pt-BR': function ptBR(str) {\n    return /^[A-Z]{3}[ -]?[0-9][A-Z][0-9]{2}|[A-Z]{3}[ -]?[0-9]{4}$/.test(str);\n  },\n  'pt-PT': function ptPT(str) {\n    return /^([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})[ -·]?([A-Z]{2}|[0-9]{2})$/.test(str);\n  },\n  'sq-AL': function sqAL(str) {\n    return /^[A-Z]{2}[- ]?((\\d{3}[- ]?(([A-Z]{2})|T))|(R[- ]?\\d{3}))$/.test(str);\n  },\n  'sv-SE': function svSE(str) {\n    return /^[A-HJ-PR-UW-Z]{3} ?[\\d]{2}[A-HJ-PR-UW-Z1-9]$|(^[A-ZÅÄÖ ]{2,7}$)/.test(str.trim());\n  }\n};\n\nfunction isLicensePlate(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (var key in validators) {\n      /* eslint guard-for-in: 0 */\n      var validator = validators[key];\n\n      if (validator(str)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStrongPassword;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar upperCaseRegex = /^[A-Z]$/;\nvar lowerCaseRegex = /^[a-z]$/;\nvar numberRegex = /^[0-9]$/;\nvar symbolRegex = /^[-#!$@£%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\nvar defaultOptions = {\n  minLength: 8,\n  minLowercase: 1,\n  minUppercase: 1,\n  minNumbers: 1,\n  minSymbols: 1,\n  returnScore: false,\n  pointsPerUnique: 1,\n  pointsPerRepeat: 0.5,\n  pointsForContainingLower: 10,\n  pointsForContainingUpper: 10,\n  pointsForContainingNumber: 10,\n  pointsForContainingSymbol: 10\n};\n/* Counts number of occurrences of each char in a string\n * could be moved to util/ ?\n*/\n\nfunction countChars(str) {\n  var result = {};\n  Array.from(str).forEach(function (char) {\n    var curVal = result[char];\n\n    if (curVal) {\n      result[char] += 1;\n    } else {\n      result[char] = 1;\n    }\n  });\n  return result;\n}\n/* Return information about a password */\n\n\nfunction analyzePassword(password) {\n  var charMap = countChars(password);\n  var analysis = {\n    length: password.length,\n    uniqueChars: Object.keys(charMap).length,\n    uppercaseCount: 0,\n    lowercaseCount: 0,\n    numberCount: 0,\n    symbolCount: 0\n  };\n  Object.keys(charMap).forEach(function (char) {\n    /* istanbul ignore else */\n    if (upperCaseRegex.test(char)) {\n      analysis.uppercaseCount += charMap[char];\n    } else if (lowerCaseRegex.test(char)) {\n      analysis.lowercaseCount += charMap[char];\n    } else if (numberRegex.test(char)) {\n      analysis.numberCount += charMap[char];\n    } else if (symbolRegex.test(char)) {\n      analysis.symbolCount += charMap[char];\n    }\n  });\n  return analysis;\n}\n\nfunction scorePassword(analysis, scoringOptions) {\n  var points = 0;\n  points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n  points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n\n  if (analysis.lowercaseCount > 0) {\n    points += scoringOptions.pointsForContainingLower;\n  }\n\n  if (analysis.uppercaseCount > 0) {\n    points += scoringOptions.pointsForContainingUpper;\n  }\n\n  if (analysis.numberCount > 0) {\n    points += scoringOptions.pointsForContainingNumber;\n  }\n\n  if (analysis.symbolCount > 0) {\n    points += scoringOptions.pointsForContainingSymbol;\n  }\n\n  return points;\n}\n\nfunction isStrongPassword(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  (0, _assertString.default)(str);\n  var analysis = analyzePassword(str);\n  options = (0, _merge.default)(options || {}, defaultOptions);\n\n  if (options.returnScore) {\n    return scorePassword(analysis, options);\n  }\n\n  return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVAT;\nexports.vatMatchers = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar algorithms = _interopRequireWildcard(require(\"./util/algorithms\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PT = function PT(str) {\n  var match = str.match(/^(PT)?(\\d{9})$/);\n\n  if (!match) {\n    return false;\n  }\n\n  var tin = match[2];\n  var checksum = 11 - algorithms.reverseMultiplyAndSum(tin.split('').slice(0, 8).map(function (a) {\n    return parseInt(a, 10);\n  }), 9) % 11;\n\n  if (checksum > 9) {\n    return parseInt(tin[8], 10) === 0;\n  }\n\n  return checksum === parseInt(tin[8], 10);\n};\n\nvar vatMatchers = {\n  /**\r\n   * European Union VAT identification numbers\r\n   */\n  AT: function AT(str) {\n    return /^(AT)?U\\d{8}$/.test(str);\n  },\n  BE: function BE(str) {\n    return /^(BE)?\\d{10}$/.test(str);\n  },\n  BG: function BG(str) {\n    return /^(BG)?\\d{9,10}$/.test(str);\n  },\n  HR: function HR(str) {\n    return /^(HR)?\\d{11}$/.test(str);\n  },\n  CY: function CY(str) {\n    return /^(CY)?\\w{9}$/.test(str);\n  },\n  CZ: function CZ(str) {\n    return /^(CZ)?\\d{8,10}$/.test(str);\n  },\n  DK: function DK(str) {\n    return /^(DK)?\\d{8}$/.test(str);\n  },\n  EE: function EE(str) {\n    return /^(EE)?\\d{9}$/.test(str);\n  },\n  FI: function FI(str) {\n    return /^(FI)?\\d{8}$/.test(str);\n  },\n  FR: function FR(str) {\n    return /^(FR)?\\w{2}\\d{9}$/.test(str);\n  },\n  DE: function DE(str) {\n    return /^(DE)?\\d{9}$/.test(str);\n  },\n  EL: function EL(str) {\n    return /^(EL)?\\d{9}$/.test(str);\n  },\n  HU: function HU(str) {\n    return /^(HU)?\\d{8}$/.test(str);\n  },\n  IE: function IE(str) {\n    return /^(IE)?\\d{7}\\w{1}(W)?$/.test(str);\n  },\n  IT: function IT(str) {\n    return /^(IT)?\\d{11}$/.test(str);\n  },\n  LV: function LV(str) {\n    return /^(LV)?\\d{11}$/.test(str);\n  },\n  LT: function LT(str) {\n    return /^(LT)?\\d{9,12}$/.test(str);\n  },\n  LU: function LU(str) {\n    return /^(LU)?\\d{8}$/.test(str);\n  },\n  MT: function MT(str) {\n    return /^(MT)?\\d{8}$/.test(str);\n  },\n  NL: function NL(str) {\n    return /^(NL)?\\d{9}B\\d{2}$/.test(str);\n  },\n  PL: function PL(str) {\n    return /^(PL)?(\\d{10}|(\\d{3}-\\d{3}-\\d{2}-\\d{2})|(\\d{3}-\\d{2}-\\d{2}-\\d{3}))$/.test(str);\n  },\n  PT: PT,\n  RO: function RO(str) {\n    return /^(RO)?\\d{2,10}$/.test(str);\n  },\n  SK: function SK(str) {\n    return /^(SK)?\\d{10}$/.test(str);\n  },\n  SI: function SI(str) {\n    return /^(SI)?\\d{8}$/.test(str);\n  },\n  ES: function ES(str) {\n    return /^(ES)?\\w\\d{7}[A-Z]$/.test(str);\n  },\n  SE: function SE(str) {\n    return /^(SE)?\\d{12}$/.test(str);\n  },\n\n  /**\r\n   * VAT numbers of non-EU countries\r\n   */\n  AL: function AL(str) {\n    return /^(AL)?\\w{9}[A-Z]$/.test(str);\n  },\n  MK: function MK(str) {\n    return /^(MK)?\\d{13}$/.test(str);\n  },\n  AU: function AU(str) {\n    return /^(AU)?\\d{11}$/.test(str);\n  },\n  BY: function BY(str) {\n    return /^(УНП )?\\d{9}$/.test(str);\n  },\n  CA: function CA(str) {\n    return /^(CA)?\\d{9}$/.test(str);\n  },\n  IS: function IS(str) {\n    return /^(IS)?\\d{5,6}$/.test(str);\n  },\n  IN: function IN(str) {\n    return /^(IN)?\\d{15}$/.test(str);\n  },\n  ID: function ID(str) {\n    return /^(ID)?(\\d{15}|(\\d{2}.\\d{3}.\\d{3}.\\d{1}-\\d{3}.\\d{3}))$/.test(str);\n  },\n  IL: function IL(str) {\n    return /^(IL)?\\d{9}$/.test(str);\n  },\n  KZ: function KZ(str) {\n    return /^(KZ)?\\d{9}$/.test(str);\n  },\n  NZ: function NZ(str) {\n    return /^(NZ)?\\d{9}$/.test(str);\n  },\n  NG: function NG(str) {\n    return /^(NG)?(\\d{12}|(\\d{8}-\\d{4}))$/.test(str);\n  },\n  NO: function NO(str) {\n    return /^(NO)?\\d{9}MVA$/.test(str);\n  },\n  PH: function PH(str) {\n    return /^(PH)?(\\d{12}|\\d{3} \\d{3} \\d{3} \\d{3})$/.test(str);\n  },\n  RU: function RU(str) {\n    return /^(RU)?(\\d{10}|\\d{12})$/.test(str);\n  },\n  SM: function SM(str) {\n    return /^(SM)?\\d{5}$/.test(str);\n  },\n  SA: function SA(str) {\n    return /^(SA)?\\d{15}$/.test(str);\n  },\n  RS: function RS(str) {\n    return /^(RS)?\\d{9}$/.test(str);\n  },\n  CH: function CH(str) {\n    return /^(CH)?(\\d{6}|\\d{9}|(\\d{3}.\\d{3})|(\\d{3}.\\d{3}.\\d{3}))(TVA|MWST|IVA)$/.test(str);\n  },\n  TR: function TR(str) {\n    return /^(TR)?\\d{10}$/.test(str);\n  },\n  UA: function UA(str) {\n    return /^(UA)?\\d{12}$/.test(str);\n  },\n  GB: function GB(str) {\n    return /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/.test(str);\n  },\n  UZ: function UZ(str) {\n    return /^(UZ)?\\d{9}$/.test(str);\n  },\n\n  /**\r\n   * VAT numbers of Latin American countries\r\n   */\n  AR: function AR(str) {\n    return /^(AR)?\\d{11}$/.test(str);\n  },\n  BO: function BO(str) {\n    return /^(BO)?\\d{7}$/.test(str);\n  },\n  BR: function BR(str) {\n    return /^(BR)?((\\d{2}.\\d{3}.\\d{3}\\/\\d{4}-\\d{2})|(\\d{3}.\\d{3}.\\d{3}-\\d{2}))$/.test(str);\n  },\n  CL: function CL(str) {\n    return /^(CL)?\\d{8}-\\d{1}$/.test(str);\n  },\n  CO: function CO(str) {\n    return /^(CO)?\\d{10}$/.test(str);\n  },\n  CR: function CR(str) {\n    return /^(CR)?\\d{9,12}$/.test(str);\n  },\n  EC: function EC(str) {\n    return /^(EC)?\\d{13}$/.test(str);\n  },\n  SV: function SV(str) {\n    return /^(SV)?\\d{4}-\\d{6}-\\d{3}-\\d{1}$/.test(str);\n  },\n  GT: function GT(str) {\n    return /^(GT)?\\d{7}-\\d{1}$/.test(str);\n  },\n  HN: function HN(str) {\n    return /^(HN)?$/.test(str);\n  },\n  MX: function MX(str) {\n    return /^(MX)?\\w{3,4}\\d{6}\\w{3}$/.test(str);\n  },\n  NI: function NI(str) {\n    return /^(NI)?\\d{3}-\\d{6}-\\d{4}\\w{1}$/.test(str);\n  },\n  PA: function PA(str) {\n    return /^(PA)?$/.test(str);\n  },\n  PY: function PY(str) {\n    return /^(PY)?\\d{6,8}-\\d{1}$/.test(str);\n  },\n  PE: function PE(str) {\n    return /^(PE)?\\d{11}$/.test(str);\n  },\n  DO: function DO(str) {\n    return /^(DO)?(\\d{11}|(\\d{3}-\\d{7}-\\d{1})|[1,4,5]{1}\\d{8}|([1,4,5]{1})-\\d{2}-\\d{5}-\\d{1})$/.test(str);\n  },\n  UY: function UY(str) {\n    return /^(UY)?\\d{12}$/.test(str);\n  },\n  VE: function VE(str) {\n    return /^(VE)?[J,G,V,E]{1}-(\\d{9}|(\\d{8}-\\d{1}))$/.test(str);\n  }\n};\nexports.vatMatchers = vatMatchers;\n\nfunction isVAT(str, countryCode) {\n  (0, _assertString.default)(str);\n  (0, _assertString.default)(countryCode);\n\n  if (countryCode in vatMatchers) {\n    return vatMatchers[countryCode](str);\n  }\n\n  throw new Error(\"Invalid country code: '\".concat(countryCode, \"'\"));\n}", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toDate = _interopRequireDefault(require(\"./lib/toDate\"));\n\nvar _toFloat = _interopRequireDefault(require(\"./lib/toFloat\"));\n\nvar _toInt = _interopRequireDefault(require(\"./lib/toInt\"));\n\nvar _toBoolean = _interopRequireDefault(require(\"./lib/toBoolean\"));\n\nvar _equals = _interopRequireDefault(require(\"./lib/equals\"));\n\nvar _contains = _interopRequireDefault(require(\"./lib/contains\"));\n\nvar _matches = _interopRequireDefault(require(\"./lib/matches\"));\n\nvar _isEmail = _interopRequireDefault(require(\"./lib/isEmail\"));\n\nvar _isURL = _interopRequireDefault(require(\"./lib/isURL\"));\n\nvar _isMACAddress = _interopRequireDefault(require(\"./lib/isMACAddress\"));\n\nvar _isIP = _interopRequireDefault(require(\"./lib/isIP\"));\n\nvar _isIPRange = _interopRequireDefault(require(\"./lib/isIPRange\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./lib/isFQDN\"));\n\nvar _isDate = _interopRequireDefault(require(\"./lib/isDate\"));\n\nvar _isTime = _interopRequireDefault(require(\"./lib/isTime\"));\n\nvar _isBoolean = _interopRequireDefault(require(\"./lib/isBoolean\"));\n\nvar _isLocale = _interopRequireDefault(require(\"./lib/isLocale\"));\n\nvar _isAlpha = _interopRequireWildcard(require(\"./lib/isAlpha\"));\n\nvar _isAlphanumeric = _interopRequireWildcard(require(\"./lib/isAlphanumeric\"));\n\nvar _isNumeric = _interopRequireDefault(require(\"./lib/isNumeric\"));\n\nvar _isPassportNumber = _interopRequireDefault(require(\"./lib/isPassportNumber\"));\n\nvar _isPort = _interopRequireDefault(require(\"./lib/isPort\"));\n\nvar _isLowercase = _interopRequireDefault(require(\"./lib/isLowercase\"));\n\nvar _isUppercase = _interopRequireDefault(require(\"./lib/isUppercase\"));\n\nvar _isIMEI = _interopRequireDefault(require(\"./lib/isIMEI\"));\n\nvar _isAscii = _interopRequireDefault(require(\"./lib/isAscii\"));\n\nvar _isFullWidth = _interopRequireDefault(require(\"./lib/isFullWidth\"));\n\nvar _isHalfWidth = _interopRequireDefault(require(\"./lib/isHalfWidth\"));\n\nvar _isVariableWidth = _interopRequireDefault(require(\"./lib/isVariableWidth\"));\n\nvar _isMultibyte = _interopRequireDefault(require(\"./lib/isMultibyte\"));\n\nvar _isSemVer = _interopRequireDefault(require(\"./lib/isSemVer\"));\n\nvar _isSurrogatePair = _interopRequireDefault(require(\"./lib/isSurrogatePair\"));\n\nvar _isInt = _interopRequireDefault(require(\"./lib/isInt\"));\n\nvar _isFloat = _interopRequireWildcard(require(\"./lib/isFloat\"));\n\nvar _isDecimal = _interopRequireDefault(require(\"./lib/isDecimal\"));\n\nvar _isHexadecimal = _interopRequireDefault(require(\"./lib/isHexadecimal\"));\n\nvar _isOctal = _interopRequireDefault(require(\"./lib/isOctal\"));\n\nvar _isDivisibleBy = _interopRequireDefault(require(\"./lib/isDivisibleBy\"));\n\nvar _isHexColor = _interopRequireDefault(require(\"./lib/isHexColor\"));\n\nvar _isRgbColor = _interopRequireDefault(require(\"./lib/isRgbColor\"));\n\nvar _isHSL = _interopRequireDefault(require(\"./lib/isHSL\"));\n\nvar _isISRC = _interopRequireDefault(require(\"./lib/isISRC\"));\n\nvar _isIBAN = _interopRequireWildcard(require(\"./lib/isIBAN\"));\n\nvar _isBIC = _interopRequireDefault(require(\"./lib/isBIC\"));\n\nvar _isMD = _interopRequireDefault(require(\"./lib/isMD5\"));\n\nvar _isHash = _interopRequireDefault(require(\"./lib/isHash\"));\n\nvar _isJWT = _interopRequireDefault(require(\"./lib/isJWT\"));\n\nvar _isJSON = _interopRequireDefault(require(\"./lib/isJSON\"));\n\nvar _isEmpty = _interopRequireDefault(require(\"./lib/isEmpty\"));\n\nvar _isLength = _interopRequireDefault(require(\"./lib/isLength\"));\n\nvar _isByteLength = _interopRequireDefault(require(\"./lib/isByteLength\"));\n\nvar _isUUID = _interopRequireDefault(require(\"./lib/isUUID\"));\n\nvar _isMongoId = _interopRequireDefault(require(\"./lib/isMongoId\"));\n\nvar _isAfter = _interopRequireDefault(require(\"./lib/isAfter\"));\n\nvar _isBefore = _interopRequireDefault(require(\"./lib/isBefore\"));\n\nvar _isIn = _interopRequireDefault(require(\"./lib/isIn\"));\n\nvar _isLuhnNumber = _interopRequireDefault(require(\"./lib/isLuhnNumber\"));\n\nvar _isCreditCard = _interopRequireDefault(require(\"./lib/isCreditCard\"));\n\nvar _isIdentityCard = _interopRequireDefault(require(\"./lib/isIdentityCard\"));\n\nvar _isEAN = _interopRequireDefault(require(\"./lib/isEAN\"));\n\nvar _isISIN = _interopRequireDefault(require(\"./lib/isISIN\"));\n\nvar _isISBN = _interopRequireDefault(require(\"./lib/isISBN\"));\n\nvar _isISSN = _interopRequireDefault(require(\"./lib/isISSN\"));\n\nvar _isTaxID = _interopRequireDefault(require(\"./lib/isTaxID\"));\n\nvar _isMobilePhone = _interopRequireWildcard(require(\"./lib/isMobilePhone\"));\n\nvar _isEthereumAddress = _interopRequireDefault(require(\"./lib/isEthereumAddress\"));\n\nvar _isCurrency = _interopRequireDefault(require(\"./lib/isCurrency\"));\n\nvar _isBtcAddress = _interopRequireDefault(require(\"./lib/isBtcAddress\"));\n\nvar _isISO = _interopRequireDefault(require(\"./lib/isISO6391\"));\n\nvar _isISO2 = _interopRequireDefault(require(\"./lib/isISO8601\"));\n\nvar _isRFC = _interopRequireDefault(require(\"./lib/isRFC3339\"));\n\nvar _isISO31661Alpha = _interopRequireDefault(require(\"./lib/isISO31661Alpha2\"));\n\nvar _isISO31661Alpha2 = _interopRequireDefault(require(\"./lib/isISO31661Alpha3\"));\n\nvar _isISO3 = _interopRequireDefault(require(\"./lib/isISO4217\"));\n\nvar _isBase = _interopRequireDefault(require(\"./lib/isBase32\"));\n\nvar _isBase2 = _interopRequireDefault(require(\"./lib/isBase58\"));\n\nvar _isBase3 = _interopRequireDefault(require(\"./lib/isBase64\"));\n\nvar _isDataURI = _interopRequireDefault(require(\"./lib/isDataURI\"));\n\nvar _isMagnetURI = _interopRequireDefault(require(\"./lib/isMagnetURI\"));\n\nvar _isMimeType = _interopRequireDefault(require(\"./lib/isMimeType\"));\n\nvar _isLatLong = _interopRequireDefault(require(\"./lib/isLatLong\"));\n\nvar _isPostalCode = _interopRequireWildcard(require(\"./lib/isPostalCode\"));\n\nvar _ltrim = _interopRequireDefault(require(\"./lib/ltrim\"));\n\nvar _rtrim = _interopRequireDefault(require(\"./lib/rtrim\"));\n\nvar _trim = _interopRequireDefault(require(\"./lib/trim\"));\n\nvar _escape = _interopRequireDefault(require(\"./lib/escape\"));\n\nvar _unescape = _interopRequireDefault(require(\"./lib/unescape\"));\n\nvar _stripLow = _interopRequireDefault(require(\"./lib/stripLow\"));\n\nvar _whitelist = _interopRequireDefault(require(\"./lib/whitelist\"));\n\nvar _blacklist = _interopRequireDefault(require(\"./lib/blacklist\"));\n\nvar _isWhitelisted = _interopRequireDefault(require(\"./lib/isWhitelisted\"));\n\nvar _normalizeEmail = _interopRequireDefault(require(\"./lib/normalizeEmail\"));\n\nvar _isSlug = _interopRequireDefault(require(\"./lib/isSlug\"));\n\nvar _isLicensePlate = _interopRequireDefault(require(\"./lib/isLicensePlate\"));\n\nvar _isStrongPassword = _interopRequireDefault(require(\"./lib/isStrongPassword\"));\n\nvar _isVAT = _interopRequireDefault(require(\"./lib/isVAT\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar version = '13.9.0';\nvar validator = {\n  version: version,\n  toDate: _toDate.default,\n  toFloat: _toFloat.default,\n  toInt: _toInt.default,\n  toBoolean: _toBoolean.default,\n  equals: _equals.default,\n  contains: _contains.default,\n  matches: _matches.default,\n  isEmail: _isEmail.default,\n  isURL: _isURL.default,\n  isMACAddress: _isMACAddress.default,\n  isIP: _isIP.default,\n  isIPRange: _isIPRange.default,\n  isFQDN: _isFQDN.default,\n  isBoolean: _isBoolean.default,\n  isIBAN: _isIBAN.default,\n  isBIC: _isBIC.default,\n  isAlpha: _isAlpha.default,\n  isAlphaLocales: _isAlpha.locales,\n  isAlphanumeric: _isAlphanumeric.default,\n  isAlphanumericLocales: _isAlphanumeric.locales,\n  isNumeric: _isNumeric.default,\n  isPassportNumber: _isPassportNumber.default,\n  isPort: _isPort.default,\n  isLowercase: _isLowercase.default,\n  isUppercase: _isUppercase.default,\n  isAscii: _isAscii.default,\n  isFullWidth: _isFullWidth.default,\n  isHalfWidth: _isHalfWidth.default,\n  isVariableWidth: _isVariableWidth.default,\n  isMultibyte: _isMultibyte.default,\n  isSemVer: _isSemVer.default,\n  isSurrogatePair: _isSurrogatePair.default,\n  isInt: _isInt.default,\n  isIMEI: _isIMEI.default,\n  isFloat: _isFloat.default,\n  isFloatLocales: _isFloat.locales,\n  isDecimal: _isDecimal.default,\n  isHexadecimal: _isHexadecimal.default,\n  isOctal: _isOctal.default,\n  isDivisibleBy: _isDivisibleBy.default,\n  isHexColor: _isHexColor.default,\n  isRgbColor: _isRgbColor.default,\n  isHSL: _isHSL.default,\n  isISRC: _isISRC.default,\n  isMD5: _isMD.default,\n  isHash: _isHash.default,\n  isJWT: _isJWT.default,\n  isJSON: _isJSON.default,\n  isEmpty: _isEmpty.default,\n  isLength: _isLength.default,\n  isLocale: _isLocale.default,\n  isByteLength: _isByteLength.default,\n  isUUID: _isUUID.default,\n  isMongoId: _isMongoId.default,\n  isAfter: _isAfter.default,\n  isBefore: _isBefore.default,\n  isIn: _isIn.default,\n  isLuhnNumber: _isLuhnNumber.default,\n  isCreditCard: _isCreditCard.default,\n  isIdentityCard: _isIdentityCard.default,\n  isEAN: _isEAN.default,\n  isISIN: _isISIN.default,\n  isISBN: _isISBN.default,\n  isISSN: _isISSN.default,\n  isMobilePhone: _isMobilePhone.default,\n  isMobilePhoneLocales: _isMobilePhone.locales,\n  isPostalCode: _isPostalCode.default,\n  isPostalCodeLocales: _isPostalCode.locales,\n  isEthereumAddress: _isEthereumAddress.default,\n  isCurrency: _isCurrency.default,\n  isBtcAddress: _isBtcAddress.default,\n  isISO6391: _isISO.default,\n  isISO8601: _isISO2.default,\n  isRFC3339: _isRFC.default,\n  isISO31661Alpha2: _isISO31661Alpha.default,\n  isISO31661Alpha3: _isISO31661Alpha2.default,\n  isISO4217: _isISO3.default,\n  isBase32: _isBase.default,\n  isBase58: _isBase2.default,\n  isBase64: _isBase3.default,\n  isDataURI: _isDataURI.default,\n  isMagnetURI: _isMagnetURI.default,\n  isMimeType: _isMimeType.default,\n  isLatLong: _isLatLong.default,\n  ltrim: _ltrim.default,\n  rtrim: _rtrim.default,\n  trim: _trim.default,\n  escape: _escape.default,\n  unescape: _unescape.default,\n  stripLow: _stripLow.default,\n  whitelist: _whitelist.default,\n  blacklist: _blacklist.default,\n  isWhitelisted: _isWhitelisted.default,\n  normalizeEmail: _normalizeEmail.default,\n  toString: toString,\n  isSlug: _isSlug.default,\n  isStrongPassword: _isStrongPassword.default,\n  isTaxID: _isTaxID.default,\n  isDate: _isDate.default,\n  isTime: _isTime.default,\n  isLicensePlate: _isLicensePlate.default,\n  isVAT: _isVAT.default,\n  ibanLocales: _isIBAN.locales\n};\nvar _default = validator;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;", "import validator from 'validator';\nimport { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_STRONG_PASSWORD = 'isStrongPassword';\n\n/**\n * Options to be passed to IsStrongPassword decorator.\n */\nexport type IsStrongPasswordOptions = Pick<\n  validator.StrongPasswordOptions,\n  'minLength' | 'minLowercase' | 'minUppercase' | 'minNumbers' | 'minSymbols'\n>;\n\n/**\n * Checks if the string is a strong password.\n * If given value is not a string, then it returns false.\n */\nexport function isStrongPassword(value: unknown, options?: IsStrongPasswordOptions): boolean {\n  return typeof value === 'string' && validator.isStrongPassword(value, options);\n}\n\n/**\n * Checks if the string is a strong password.\n * If given value is not a string, then it returns false.\n */\nexport function IsStrongPassword(\n  options?: IsStrongPasswordOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_STRONG_PASSWORD,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isStrongPassword(value, args.constraints[0]),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property is not strong enough', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_TIMEZONE = 'isTimeZone';\n\n/**\n * Checks if the string represents a valid IANA timezone\n * If the given value is not a valid IANA timezone, then it returns false.\n */\nexport function isTimeZone(value: unknown): boolean {\n  try {\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    /** Specifying an invalid time-zone will raise a `RangeError: Invalid time zone specified` error. */\n    Intl.DateTimeFormat(undefined, { timeZone: value });\n\n    return true;\n  } catch (exception) {\n    return false;\n  }\n}\n\n/**\n * Checks if the string represents a valid IANA timezone\n * If the given value is not a valid IANA timezone, then it returns false.\n */\nexport function IsTimeZone(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_TIMEZONE,\n      validator: {\n        validate: (value, args): boolean => isTimeZone(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid IANA time-zone',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase58Validator from 'validator/lib/isBase58';\n\nexport const IS_BASE58 = 'isBase58';\n\n/**\n * Checks if a string is base58 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function isBase58(value: unknown): boolean {\n  return typeof value === 'string' && isBase58Validator(value);\n}\n\n/**\n * Checks if a string is base58 encoded.\n * If given value is not a string, then it returns false.\n */\nexport function IsBase58(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BASE58,\n      validator: {\n        validate: (value, args): boolean => isBase58(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be base58 encoded', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isTaxIDValidator from 'validator/lib/isTaxID';\n\nexport const IS_TAX_ID = 'isTaxId';\n\n/**\n * Checks if the string is a valid tax ID. Default locale is `en-US`.\n * If given value is not a string, then it returns false.\n *\n * Supported locales: bg-BG, cs-CZ, de-AT, de-DE, dk-DK, el-CY, el-GR, en-CA,\n * en-IE, en-US, es-ES, et-EE, fi-FI, fr-BE, fr-FR, fr-LU, hr-HR, hu-HU, it-IT,\n * lv-LV, mt-MT, nl-NL, pl-PL, pt-BR, pt-PT, ro-RO, sk-SK, sl-SI, sv-SE.\n */\nexport function isTaxId(value: unknown, locale?: string): boolean {\n  return typeof value === 'string' && isTaxIDValidator(value, locale || 'en-US');\n}\n\n/**\n * Checks if the string is a valid tax ID. Default locale is `en-US`.\n * If given value is not a string, then it returns false.\n *\n * Supported locales: bg-BG, cs-CZ, de-AT, de-DE, dk-DK, el-CY, el-GR, en-CA,\n * en-IE, en-US, es-ES, et-EE, fi-FI, fr-BE, fr-FR, fr-LU, hr-HR, hu-HU, it-IT,\n * lv-LV, mt-MT, nl-NL, pl-PL, pt-BR, pt-PT, ro-RO, sk-SK, sl-SI, sv-SE.\n */\nexport function IsTaxId(locale?: string, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_TAX_ID,\n      constraints: [locale],\n      validator: {\n        validate: (value, args): boolean => isTaxId(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a Tax Identification Number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO4217Validator from 'validator/lib/isISO4217';\n\nexport const IS_ISO4217_CURRENCY_CODE = 'isISO4217CurrencyCode';\n\n/**\n * Check if the string is a valid [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) officially assigned currency code.\n */\nexport function isISO4217CurrencyCode(value: unknown): boolean {\n  return typeof value === 'string' && isISO4217Validator(value);\n}\n\n/**\n * Check if the string is a valid [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) officially assigned currency code.\n */\nexport function IsISO4217CurrencyCode(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ISO4217_CURRENCY_CODE,\n      validator: {\n        validate: (value, args): boolean => isISO4217CurrencyCode(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a valid ISO4217 currency code',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_BOOLEAN = 'isBoolean';\n\n/**\n * Checks if a given value is a boolean.\n */\nexport function isBoolean(value: unknown): value is boolean {\n  return value instanceof Boolean || typeof value === 'boolean';\n}\n\n/**\n * Checks if a value is a boolean.\n */\nexport function IsBoolean(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_BOOLEAN,\n      validator: {\n        validate: (value, args): boolean => isBoolean(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a boolean value', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_DATE = 'isDate';\n\n/**\n * Checks if a given value is a date.\n */\nexport function isDate(value: unknown): value is Date {\n  return value instanceof Date && !isNaN(value.getTime());\n}\n\n/**\n * Checks if a value is a date.\n */\nexport function IsDate(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_DATE,\n      validator: {\n        validate: (value, args): boolean => isDate(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a Date instance', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_NUMBER = 'isNumber';\n\n/**\n * Options to be passed to IsNumber decorator.\n */\nexport interface IsNumberOptions {\n  allowNaN?: boolean;\n  allowInfinity?: boolean;\n  maxDecimalPlaces?: number;\n}\n\n/**\n * Checks if a given value is a number.\n */\nexport function isNumber(value: unknown, options: IsNumberOptions = {}): value is number {\n  if (typeof value !== 'number') {\n    return false;\n  }\n\n  if (value === Infinity || value === -Infinity) {\n    return !!options.allowInfinity;\n  }\n\n  if (Number.isNaN(value)) {\n    return !!options.allowNaN;\n  }\n\n  if (options.maxDecimalPlaces !== undefined) {\n    let decimalPlaces = 0;\n    if (value % 1 !== 0) {\n      decimalPlaces = value.toString().split('.')[1].length;\n    }\n    if (decimalPlaces > options.maxDecimalPlaces) {\n      return false;\n    }\n  }\n\n  return Number.isFinite(value);\n}\n\n/**\n * Checks if a value is a number.\n */\nexport function IsNumber(options: IsNumberOptions = {}, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NUMBER,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isNumber(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a number conforming to the specified constraints',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_ENUM = 'isEnum';\n\n/**\n * Checks if a given value is the member of the provided enum.\n */\nexport function isEnum(value: unknown, entity: any): boolean {\n  const enumValues = Object.keys(entity).map(k => entity[k]);\n  return enumValues.includes(value);\n}\n\n/**\n * Returns the possible values from an enum (both simple number indexed and string indexed enums).\n */\nfunction validEnumValues(entity: any): string[] {\n  return Object.entries(entity)\n    .filter(([key, value]) => isNaN(parseInt(key)))\n    .map(([key, value]) => value as string);\n}\n\n/**\n * Checks if a given value is the member of the provided enum.\n */\nexport function IsEnum(entity: object, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ENUM,\n      constraints: [entity, validEnumValues(entity)],\n      validator: {\n        validate: (value, args): boolean => isEnum(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be one of the following values: $constraint2',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_INT = 'isInt';\n\n/**\n * Checks if value is an integer.\n */\nexport function isInt(val: unknown): val is Number {\n  return typeof val === 'number' && Number.isInteger(val);\n}\n\n/**\n * Checks if value is an integer.\n */\nexport function IsInt(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_INT,\n      validator: {\n        validate: (value, args): boolean => isInt(value),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be an integer number',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_STRING = 'isString';\n\n/**\n * Checks if a given value is a real string.\n */\nexport function isString(value: unknown): value is string {\n  return value instanceof String || typeof value === 'string';\n}\n\n/**\n * Checks if a given value is a real string.\n */\nexport function IsString(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_STRING,\n      validator: {\n        validate: (value, args): boolean => isString(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a string', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_ARRAY = 'isArray';\n\n/**\n * Checks if a given value is an array\n */\nexport function isArray<T = any>(value: unknown): value is Array<T> {\n  return Array.isArray(value);\n}\n\n/**\n * Checks if a given value is an array\n */\nexport function IsArray(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_ARRAY,\n      validator: {\n        validate: (value, args): boolean => isArray(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an array', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_OBJECT = 'isObject';\n\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function isObject<T = object>(value: unknown): value is T {\n  return value != null && (typeof value === 'object' || typeof value === 'function') && !Array.isArray(value);\n}\n\n/**\n * Checks if the value is valid Object.\n * Returns false if the value is not an object.\n */\nexport function IsObject(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_OBJECT,\n      validator: {\n        validate: (value, args): boolean => isObject(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an object', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_CONTAINS = 'arrayContains';\n\n/**\n * Checks if array contains all values from the given array of values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayContains(array: unknown, values: any[]): boolean {\n  if (!Array.isArray(array)) return false;\n\n  return values.every(value => array.indexOf(value) !== -1);\n}\n\n/**\n * Checks if array contains all values from the given array of values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayContains(values: any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_CONTAINS,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => arrayContains(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain $constraint1 values',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_NOT_CONTAINS = 'arrayNotContains';\n\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotContains(array: unknown, values: any[]): boolean {\n  if (!Array.isArray(array)) return false;\n\n  return values.every(value => array.indexOf(value) === -1);\n}\n\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotContains(values: any[], validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_NOT_CONTAINS,\n      constraints: [values],\n      validator: {\n        validate: (value, args): boolean => arrayNotContains(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property should not contain $constraint1 values',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_NOT_EMPTY = 'arrayNotEmpty';\n\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotEmpty(array: unknown): boolean {\n  return Array.isArray(array) && array.length > 0;\n}\n\n/**\n * Checks if given array is not empty.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotEmpty(validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_NOT_EMPTY,\n      validator: {\n        validate: (value, args): boolean => arrayNotEmpty(value),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not be empty', validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_MIN_SIZE = 'arrayMinSize';\n\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayMinSize(array: unknown, min: number): boolean {\n  return Array.isArray(array) && array.length >= min;\n}\n\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayMinSize(min: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_MIN_SIZE,\n      constraints: [min],\n      validator: {\n        validate: (value, args): boolean => arrayMinSize(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain at least $constraint1 elements',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_MAX_SIZE = 'arrayMaxSize';\n\n/**\n * Checks if the array's length is less or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayMaxSize(array: unknown, max: number): boolean {\n  return Array.isArray(array) && array.length <= max;\n}\n\n/**\n * Checks if the array's length is less or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayMaxSize(max: number, validationOptions?: ValidationOptions): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: ARRAY_MAX_SIZE,\n      constraints: [max],\n      validator: {\n        validate: (value, args): boolean => arrayMaxSize(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must contain no more than $constraint1 elements',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const ARRAY_UNIQUE = 'arrayUnique';\nexport type ArrayUniqueIdentifier<T = any> = (o: T) => any;\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayUnique(array: unknown[], identifier?: ArrayUniqueIdentifier): boolean {\n  if (!Array.isArray(array)) return false;\n\n  if (identifier) {\n    array = array.map(o => (o != null ? identifier(o) : o));\n  }\n\n  const uniqueItems = array.filter((a, b, c) => c.indexOf(a) === b);\n  return array.length === uniqueItems.length;\n}\n\n/**\n * Checks if all array's values are unique. Comparison for objects is reference-based.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayUnique<T = any>(\n  identifierOrOptions?: ArrayUniqueIdentifier<T> | ValidationOptions,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  const identifier = typeof identifierOrOptions === 'function' ? identifierOrOptions : undefined;\n  const options = typeof identifierOrOptions !== 'function' ? identifierOrOptions : validationOptions;\n\n  return ValidateBy(\n    {\n      name: ARRAY_UNIQUE,\n      validator: {\n        validate: (value, args): boolean => arrayUnique(value, identifier),\n        defaultMessage: buildMessage(eachPrefix => eachPrefix + \"All $property's elements must be unique\", options),\n      },\n    },\n    options\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { isObject } from '../typechecker/IsObject';\n\nexport const IS_NOT_EMPTY_OBJECT = 'isNotEmptyObject';\n\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function isNotEmptyObject(value: unknown, options?: { nullable?: boolean }): boolean {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  if (options?.nullable === true) {\n    return !Object.values(value).every(propertyValue => propertyValue === null || propertyValue === undefined);\n  }\n\n  for (const key in value) {\n    if (value.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function IsNotEmptyObject(\n  options?: { nullable?: boolean },\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_NOT_EMPTY_OBJECT,\n      constraints: [options],\n      validator: {\n        validate: (value, args): boolean => isNotEmptyObject(value, args?.constraints[0]),\n        defaultMessage: buildMessage(\n          eachPrefix => eachPrefix + '$property must be a non-empty object',\n          validationOptions\n        ),\n      },\n    },\n    validationOptions\n  );\n}\n", "import { ValidationOptions } from '../ValidationOptions';\nimport { buildMessage, ValidateBy } from '../common/ValidateBy';\n\nexport const IS_INSTANCE = 'isInstance';\n\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function isInstance(object: unknown, targetTypeConstructor: new (...args: any[]) => any): boolean {\n  return (\n    targetTypeConstructor && typeof targetTypeConstructor === 'function' && object instanceof targetTypeConstructor\n  );\n}\n\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function IsInstance(\n  targetType: new (...args: any[]) => any,\n  validationOptions?: ValidationOptions\n): PropertyDecorator {\n  return ValidateBy(\n    {\n      name: IS_INSTANCE,\n      constraints: [targetType],\n      validator: {\n        validate: (value, args): boolean => isInstance(value, args?.constraints[0]),\n        defaultMessage: buildMessage((eachPrefix, args) => {\n          if (args?.constraints[0]) {\n            return eachPrefix + `$property must be an instance of ${args?.constraints[0].name as string}`;\n          } else {\n            return eachPrefix + `${IS_INSTANCE} decorator expects and object as value, but got falsy value.`;\n          }\n        }, validationOptions),\n      },\n    },\n    validationOptions\n  );\n}\n", "// -------------------------------------------------------------------------\n// System\n// -------------------------------------------------------------------------\n\n// -------------------------------------------------------------------------\n// Common checkers\n// -------------------------------------------------------------------------\n\nexport * from './common/Allow';\nexport * from './common/IsDefined';\nexport * from './common/IsOptional';\nexport * from './common/Validate';\nexport * from './common/ValidateBy';\nexport * from './common/ValidateIf';\nexport * from './common/ValidateNested';\nexport * from './common/ValidatePromise';\nexport * from './common/IsLatLong';\nexport * from './common/IsLatitude';\nexport * from './common/IsLongitude';\nexport * from './common/Equals';\nexport * from './common/NotEquals';\nexport * from './common/IsEmpty';\nexport * from './common/IsNotEmpty';\nexport * from './common/IsIn';\nexport * from './common/IsNotIn';\n\n// -------------------------------------------------------------------------\n// Number checkers\n// -------------------------------------------------------------------------\n\nexport * from './number/IsDivisibleBy';\nexport * from './number/IsPositive';\nexport * from './number/IsNegative';\nexport * from './number/Max';\nexport * from './number/Min';\n\n// -------------------------------------------------------------------------\n// Date checkers\n// -------------------------------------------------------------------------\n\nexport * from './date/MinDate';\nexport * from './date/MaxDate';\n\n// -------------------------------------------------------------------------\n// String checkers\n// -------------------------------------------------------------------------\n\nexport * from './string/Contains';\nexport * from './string/NotContains';\nexport * from './string/IsAlpha';\nexport * from './string/IsAlphanumeric';\nexport * from './string/IsDecimal';\nexport * from './string/IsAscii';\nexport * from './string/IsBase64';\nexport * from './string/IsByteLength';\nexport * from './string/IsCreditCard';\nexport * from './string/IsCurrency';\nexport * from './string/IsEmail';\nexport * from './string/IsFQDN';\nexport * from './string/IsFullWidth';\nexport * from './string/IsHalfWidth';\nexport * from './string/IsVariableWidth';\nexport * from './string/IsHexColor';\nexport * from './string/IsHexadecimal';\nexport * from './string/IsMacAddress';\nexport * from './string/IsIP';\nexport * from './string/IsPort';\nexport * from './string/IsISBN';\nexport * from './string/IsISIN';\nexport * from './string/IsISO8601';\nexport * from './string/IsJSON';\nexport * from './string/IsJWT';\nexport * from './string/IsLowercase';\nexport * from './string/IsMobilePhone';\nexport * from './string/IsISO31661Alpha2';\nexport * from './string/IsISO31661Alpha3';\nexport * from './string/IsMongoId';\nexport * from './string/IsMultibyte';\nexport * from './string/IsSurrogatePair';\nexport * from './string/IsUrl';\nexport * from './string/IsUUID';\nexport * from './string/IsFirebasePushId';\nexport * from './string/IsUppercase';\nexport * from './string/Length';\nexport * from './string/MaxLength';\nexport * from './string/MinLength';\nexport * from './string/Matches';\nexport * from './string/IsPhoneNumber';\nexport * from './string/IsMilitaryTime';\nexport * from './string/IsHash';\nexport * from './string/IsISSN';\nexport * from './string/IsDateString';\nexport * from './string/IsBooleanString';\nexport * from './string/IsNumberString';\nexport * from './string/IsBase32';\nexport * from './string/IsBIC';\nexport * from './string/IsBtcAddress';\nexport * from './string/IsDataURI';\nexport * from './string/IsEAN';\nexport * from './string/IsEthereumAddress';\nexport * from './string/IsHSL';\nexport * from './string/IsIBAN';\nexport * from './string/IsIdentityCard';\nexport * from './string/IsISRC';\nexport * from './string/IsLocale';\nexport * from './string/IsMagnetURI';\nexport * from './string/IsMimeType';\nexport * from './string/IsOctal';\nexport * from './string/IsPassportNumber';\nexport * from './string/IsPostalCode';\nexport * from './string/IsRFC3339';\nexport * from './string/IsRgbColor';\nexport * from './string/IsSemVer';\nexport * from './string/IsStrongPassword';\nexport * from './string/IsTimeZone';\nexport * from './string/IsBase58';\nexport * from './string/is-tax-id';\nexport * from './string/is-iso4217-currency-code';\n\n// -------------------------------------------------------------------------\n// Type checkers\n// -------------------------------------------------------------------------\n\nexport * from './typechecker/IsBoolean';\nexport * from './typechecker/IsDate';\nexport * from './typechecker/IsNumber';\nexport * from './typechecker/IsEnum';\nexport * from './typechecker/IsInt';\nexport * from './typechecker/IsString';\nexport * from './typechecker/IsArray';\nexport * from './typechecker/IsObject';\n\n// -------------------------------------------------------------------------\n// Array checkers\n// -------------------------------------------------------------------------\n\nexport * from './array/ArrayContains';\nexport * from './array/ArrayNotContains';\nexport * from './array/ArrayNotEmpty';\nexport * from './array/ArrayMinSize';\nexport * from './array/ArrayMaxSize';\nexport * from './array/ArrayUnique';\n\n// -------------------------------------------------------------------------\n// Object checkers\n// -------------------------------------------------------------------------\n\nexport * from './object/IsNotEmptyObject';\nexport * from './object/IsInstance';\n", "export {};\n//# sourceMappingURL=ValidatorConstraintInterface.js.map", "export {};\n//# sourceMappingURL=ValidatorOptions.js.map", "export {};\n//# sourceMappingURL=ValidationArguments.js.map", "export {};\n//# sourceMappingURL=ValidationSchema.js.map", "import { ValidationError } from './validation/ValidationError';\nimport { ValidatorOptions } from './validation/ValidatorOptions';\nimport { ValidationSchema } from './validation-schema/ValidationSchema';\nimport { getMetadataStorage } from './metadata/MetadataStorage';\nimport { Validator } from './validation/Validator';\nimport { getFromContainer } from './container';\n\n// -------------------------------------------------------------------------\n// Export everything api users needs\n// -------------------------------------------------------------------------\n\nexport * from './container';\nexport * from './decorator/decorators';\nexport * from './decorator/ValidationOptions';\nexport * from './validation/ValidatorConstraintInterface';\nexport * from './validation/ValidationError';\nexport * from './validation/ValidatorOptions';\nexport * from './validation/ValidationArguments';\nexport * from './validation/ValidationTypes';\nexport * from './validation/Validator';\nexport * from './validation-schema/ValidationSchema';\nexport * from './register-decorator';\nexport * from './metadata/MetadataStorage';\n\n// -------------------------------------------------------------------------\n// Shortcut methods for api users\n// -------------------------------------------------------------------------\n\n/**\n * Validates given object.\n */\nexport function validate(object: object, validatorOptions?: ValidatorOptions): Promise<ValidationError[]>;\n\n/**\n * Validates given object by a given validation schema.\n */\nexport function validate(\n  schemaName: string,\n  object: object,\n  validatorOptions?: ValidatorOptions\n): Promise<ValidationError[]>;\n\n/**\n * Validates given object by object's decorators or given validation schema.\n */\nexport function validate(\n  schemaNameOrObject: object | string,\n  objectOrValidationOptions?: object | ValidatorOptions,\n  maybeValidatorOptions?: ValidatorOptions\n): Promise<ValidationError[]> {\n  if (typeof schemaNameOrObject === 'string') {\n    return getFromContainer(Validator).validate(\n      schemaNameOrObject,\n      objectOrValidationOptions as object,\n      maybeValidatorOptions\n    );\n  } else {\n    return getFromContainer(Validator).validate(schemaNameOrObject, objectOrValidationOptions as ValidatorOptions);\n  }\n}\n\n/**\n * Validates given object and reject on error.\n */\nexport function validateOrReject(object: object, validatorOptions?: ValidatorOptions): Promise<void>;\n\n/**\n * Validates given object by a given validation schema and reject on error.\n */\nexport function validateOrReject(\n  schemaName: string,\n  object: object,\n  validatorOptions?: ValidatorOptions\n): Promise<void>;\n\n/**\n * Validates given object by object's decorators or given validation schema and reject on error.\n */\nexport function validateOrReject(\n  schemaNameOrObject: object | string,\n  objectOrValidationOptions?: object | ValidatorOptions,\n  maybeValidatorOptions?: ValidatorOptions\n): Promise<void> {\n  if (typeof schemaNameOrObject === 'string') {\n    return getFromContainer(Validator).validateOrReject(\n      schemaNameOrObject,\n      objectOrValidationOptions as object,\n      maybeValidatorOptions\n    );\n  } else {\n    return getFromContainer(Validator).validateOrReject(\n      schemaNameOrObject,\n      objectOrValidationOptions as ValidatorOptions\n    );\n  }\n}\n\n/**\n * Performs sync validation of the given object.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\nexport function validateSync(object: object, validatorOptions?: ValidatorOptions): ValidationError[];\n\n/**\n * Validates given object by a given validation schema.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\nexport function validateSync(\n  schemaName: string,\n  object: object,\n  validatorOptions?: ValidatorOptions\n): ValidationError[];\n\n/**\n * Validates given object by object's decorators or given validation schema.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\nexport function validateSync(\n  schemaNameOrObject: object | string,\n  objectOrValidationOptions?: object | ValidatorOptions,\n  maybeValidatorOptions?: ValidatorOptions\n): ValidationError[] {\n  if (typeof schemaNameOrObject === 'string') {\n    return getFromContainer(Validator).validateSync(\n      schemaNameOrObject,\n      objectOrValidationOptions as object,\n      maybeValidatorOptions\n    );\n  } else {\n    return getFromContainer(Validator).validateSync(schemaNameOrObject, objectOrValidationOptions as ValidatorOptions);\n  }\n}\n\n/**\n * Registers a new validation schema.\n */\nexport function registerSchema(schema: ValidationSchema): void {\n  getMetadataStorage().addValidationSchema(schema);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidationPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst iterare_1 = require(\"iterare\");\nconst util_1 = require(\"util\");\nconst decorators_1 = require(\"../decorators\");\nconst core_1 = require(\"../decorators/core\");\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\nconst load_package_util_1 = require(\"../utils/load-package.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nlet classValidator = {};\nlet classTransformer = {};\n/**\n * @see [Validation](https://docs.nestjs.com/techniques/validation)\n *\n * @publicApi\n */\nlet ValidationPipe = class ValidationPipe {\n    constructor(options) {\n        options = options || {};\n        const { transform, disableErrorMessages, errorHttpStatusCode, expectedType, transformOptions, validateCustomDecorators } = options, validatorOptions = tslib_1.__rest(options, [\"transform\", \"disableErrorMessages\", \"errorHttpStatusCode\", \"expectedType\", \"transformOptions\", \"validateCustomDecorators\"]);\n        // @see https://github.com/nestjs/nest/issues/10683#issuecomment-1413690508\n        this.validatorOptions = Object.assign({ forbidUnknownValues: false }, validatorOptions);\n        this.isTransformEnabled = !!transform;\n        this.transformOptions = transformOptions;\n        this.isDetailedOutputDisabled = disableErrorMessages;\n        this.validateCustomDecorators = validateCustomDecorators || false;\n        this.errorHttpStatusCode = errorHttpStatusCode || http_status_enum_1.HttpStatus.BAD_REQUEST;\n        this.expectedType = expectedType;\n        this.exceptionFactory =\n            options.exceptionFactory || this.createExceptionFactory();\n        classValidator = this.loadValidator(options.validatorPackage);\n        classTransformer = this.loadTransformer(options.transformerPackage);\n    }\n    loadValidator(validatorPackage) {\n        return (validatorPackage !== null && validatorPackage !== void 0 ? validatorPackage : (0, load_package_util_1.loadPackage)('class-validator', 'ValidationPipe', () => require('class-validator')));\n    }\n    loadTransformer(transformerPackage) {\n        return (transformerPackage !== null && transformerPackage !== void 0 ? transformerPackage : (0, load_package_util_1.loadPackage)('class-transformer', 'ValidationPipe', () => require('class-transformer')));\n    }\n    async transform(value, metadata) {\n        if (this.expectedType) {\n            metadata = Object.assign(Object.assign({}, metadata), { metatype: this.expectedType });\n        }\n        const metatype = metadata.metatype;\n        if (!metatype || !this.toValidate(metadata)) {\n            return this.isTransformEnabled\n                ? this.transformPrimitive(value, metadata)\n                : value;\n        }\n        const originalValue = value;\n        value = this.toEmptyIfNil(value);\n        const isNil = value !== originalValue;\n        const isPrimitive = this.isPrimitive(value);\n        this.stripProtoKeys(value);\n        let entity = classTransformer.plainToClass(metatype, value, this.transformOptions);\n        const originalEntity = entity;\n        const isCtorNotEqual = entity.constructor !== metatype;\n        if (isCtorNotEqual && !isPrimitive) {\n            entity.constructor = metatype;\n        }\n        else if (isCtorNotEqual) {\n            // when \"entity\" is a primitive value, we have to temporarily\n            // replace the entity to perform the validation against the original\n            // metatype defined inside the handler\n            entity = { constructor: metatype };\n        }\n        const errors = await this.validate(entity, this.validatorOptions);\n        if (errors.length > 0) {\n            throw await this.exceptionFactory(errors);\n        }\n        if (isPrimitive) {\n            // if the value is a primitive value and the validation process has been successfully completed\n            // we have to revert the original value passed through the pipe\n            entity = originalEntity;\n        }\n        if (this.isTransformEnabled) {\n            return entity;\n        }\n        if (isNil) {\n            // if the value was originally undefined or null, revert it back\n            return originalValue;\n        }\n        // we check if the number of keys of the \"validatorOptions\" is higher than 1 (instead of 0)\n        // because the \"forbidUnknownValues\" now fallbacks to \"false\" (in case it wasn't explicitly specified)\n        const shouldTransformToPlain = Object.keys(this.validatorOptions).length > 1;\n        return shouldTransformToPlain\n            ? classTransformer.classToPlain(entity, this.transformOptions)\n            : value;\n    }\n    createExceptionFactory() {\n        return (validationErrors = []) => {\n            if (this.isDetailedOutputDisabled) {\n                return new http_error_by_code_util_1.HttpErrorByCode[this.errorHttpStatusCode]();\n            }\n            const errors = this.flattenValidationErrors(validationErrors);\n            return new http_error_by_code_util_1.HttpErrorByCode[this.errorHttpStatusCode](errors);\n        };\n    }\n    toValidate(metadata) {\n        const { metatype, type } = metadata;\n        if (type === 'custom' && !this.validateCustomDecorators) {\n            return false;\n        }\n        const types = [String, Boolean, Number, Array, Object, Buffer];\n        return !types.some(t => metatype === t) && !(0, shared_utils_1.isNil)(metatype);\n    }\n    transformPrimitive(value, metadata) {\n        if (!metadata.data) {\n            // leave top-level query/param objects unmodified\n            return value;\n        }\n        const { type, metatype } = metadata;\n        if (type !== 'param' && type !== 'query') {\n            return value;\n        }\n        if (metatype === Boolean) {\n            return value === true || value === 'true';\n        }\n        if (metatype === Number) {\n            return +value;\n        }\n        return value;\n    }\n    toEmptyIfNil(value) {\n        return (0, shared_utils_1.isNil)(value) ? {} : value;\n    }\n    stripProtoKeys(value) {\n        if (value == null ||\n            typeof value !== 'object' ||\n            util_1.types.isTypedArray(value)) {\n            return;\n        }\n        if (Array.isArray(value)) {\n            for (const v of value) {\n                this.stripProtoKeys(v);\n            }\n            return;\n        }\n        delete value.__proto__;\n        for (const key in value) {\n            this.stripProtoKeys(value[key]);\n        }\n    }\n    isPrimitive(value) {\n        return ['number', 'boolean', 'string'].includes(typeof value);\n    }\n    validate(object, validatorOptions) {\n        return classValidator.validate(object, validatorOptions);\n    }\n    flattenValidationErrors(validationErrors) {\n        return (0, iterare_1.iterate)(validationErrors)\n            .map(error => this.mapChildrenToValidationErrors(error))\n            .flatten()\n            .filter(item => !!item.constraints)\n            .map(item => Object.values(item.constraints))\n            .flatten()\n            .toArray();\n    }\n    mapChildrenToValidationErrors(error, parentPath) {\n        if (!(error.children && error.children.length)) {\n            return [error];\n        }\n        const validationErrors = [];\n        parentPath = parentPath\n            ? `${parentPath}.${error.property}`\n            : error.property;\n        for (const item of error.children) {\n            if (item.children && item.children.length) {\n                validationErrors.push(...this.mapChildrenToValidationErrors(item, parentPath));\n            }\n            validationErrors.push(this.prependConstraintsWithParentProp(parentPath, item));\n        }\n        return validationErrors;\n    }\n    prependConstraintsWithParentProp(parentPath, error) {\n        const constraints = {};\n        for (const key in error.constraints) {\n            constraints[key] = `${parentPath}.${error.constraints[key]}`;\n        }\n        return Object.assign(Object.assign({}, error), { constraints });\n    }\n};\nValidationPipe = tslib_1.__decorate([\n    (0, core_1.Injectable)(),\n    tslib_1.__param(0, (0, decorators_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ValidationPipe);\nexports.ValidationPipe = ValidationPipe;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseArrayPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\nconst optional_decorator_1 = require(\"../decorators/core/optional.decorator\");\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nconst validation_pipe_1 = require(\"./validation.pipe\");\nconst VALIDATION_ERROR_MESSAGE = 'Validation failed (parsable array expected)';\nconst DEFAULT_ARRAY_SEPARATOR = ',';\n/**\n * Defines the built-in ParseArray Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseArrayPipe = class ParseArrayPipe {\n    constructor(options = {}) {\n        this.options = options;\n        this.validationPipe = new validation_pipe_1.ValidationPipe(Object.assign({ transform: true, validateCustomDecorators: true }, options));\n        const { exceptionFactory, errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST } = options;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n    }\n    /**\n     * Method that accesses and performs optional transformation on argument for\n     * in-flight requests.\n     *\n     * @param value currently processed route argument\n     * @param metadata contains metadata about the currently processed route argument\n     */\n    async transform(value, metadata) {\n        if (!value && !this.options.optional) {\n            throw this.exceptionFactory(VALIDATION_ERROR_MESSAGE);\n        }\n        else if ((0, shared_utils_1.isNil)(value) && this.options.optional) {\n            return value;\n        }\n        if (!Array.isArray(value)) {\n            if (!(0, shared_utils_1.isString)(value)) {\n                throw this.exceptionFactory(VALIDATION_ERROR_MESSAGE);\n            }\n            else {\n                try {\n                    value = value\n                        .trim()\n                        .split(this.options.separator || DEFAULT_ARRAY_SEPARATOR);\n                }\n                catch (_a) {\n                    throw this.exceptionFactory(VALIDATION_ERROR_MESSAGE);\n                }\n            }\n        }\n        if (this.options.items) {\n            const validationMetadata = {\n                metatype: this.options.items,\n                type: 'query',\n            };\n            const isExpectedTypePrimitive = this.isExpectedTypePrimitive();\n            const toClassInstance = (item, index) => {\n                if (this.options.items !== String) {\n                    try {\n                        item = JSON.parse(item);\n                    }\n                    catch (_a) { }\n                }\n                if (isExpectedTypePrimitive) {\n                    return this.validatePrimitive(item, index);\n                }\n                return this.validationPipe.transform(item, validationMetadata);\n            };\n            if (this.options.stopAtFirstError === false) {\n                // strict compare to \"false\" to make sure\n                // that this option is disabled by default\n                let errors = [];\n                const targetArray = value;\n                for (let i = 0; i < targetArray.length; i++) {\n                    try {\n                        targetArray[i] = await toClassInstance(targetArray[i]);\n                    }\n                    catch (err) {\n                        let message;\n                        if (err.getResponse) {\n                            const response = err.getResponse();\n                            if (Array.isArray(response.message)) {\n                                message = response.message.map((item) => `[${i}] ${item}`);\n                            }\n                            else {\n                                message = `[${i}] ${response.message}`;\n                            }\n                        }\n                        else {\n                            message = err;\n                        }\n                        errors = errors.concat(message);\n                    }\n                }\n                if (errors.length > 0) {\n                    throw this.exceptionFactory(errors);\n                }\n                return targetArray;\n            }\n            else {\n                value = await Promise.all(value.map(toClassInstance));\n            }\n        }\n        return value;\n    }\n    isExpectedTypePrimitive() {\n        return [Boolean, Number, String].includes(this.options.items);\n    }\n    validatePrimitive(originalValue, index) {\n        if (this.options.items === Number) {\n            const value = originalValue !== null && originalValue !== '' ? +originalValue : NaN;\n            if (isNaN(value)) {\n                throw this.exceptionFactory(`${(0, shared_utils_1.isUndefined)(index) ? '' : `[${index}] `}item must be a number`);\n            }\n            return value;\n        }\n        else if (this.options.items === String) {\n            if (!(0, shared_utils_1.isString)(originalValue)) {\n                return `${originalValue}`;\n            }\n        }\n        else if (this.options.items === Boolean) {\n            if (typeof originalValue !== 'boolean') {\n                throw this.exceptionFactory(`${(0, shared_utils_1.isUndefined)(index) ? '' : `[${index}] `}item must be a boolean value`);\n            }\n        }\n        return originalValue;\n    }\n};\nParseArrayPipe = tslib_1.__decorate([\n    (0, injectable_decorator_1.Injectable)(),\n    tslib_1.__param(0, (0, optional_decorator_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ParseArrayPipe);\nexports.ParseArrayPipe = ParseArrayPipe;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseBoolPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\nconst optional_decorator_1 = require(\"../decorators/core/optional.decorator\");\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\n/**\n * Defines the built-in ParseBool Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseBoolPipe = class ParseBoolPipe {\n    constructor(options) {\n        options = options || {};\n        const { exceptionFactory, errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST } = options;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n    }\n    /**\n     * Method that accesses and performs optional transformation on argument for\n     * in-flight requests.\n     *\n     * @param value currently processed route argument\n     * @param metadata contains metadata about the currently processed route argument\n     */\n    async transform(value, metadata) {\n        if (this.isTrue(value)) {\n            return true;\n        }\n        if (this.isFalse(value)) {\n            return false;\n        }\n        throw this.exceptionFactory('Validation failed (boolean string is expected)');\n    }\n    /**\n     * @param value currently processed route argument\n     * @returns `true` if `value` is said 'true', ie., if it is equal to the boolean\n     * `true` or the string `\"true\"`\n     */\n    isTrue(value) {\n        return value === true || value === 'true';\n    }\n    /**\n     * @param value currently processed route argument\n     * @returns `true` if `value` is said 'false', ie., if it is equal to the boolean\n     * `false` or the string `\"false\"`\n     */\n    isFalse(value) {\n        return value === false || value === 'false';\n    }\n};\nParseBoolPipe = tslib_1.__decorate([\n    (0, injectable_decorator_1.Injectable)(),\n    tslib_1.__param(0, (0, optional_decorator_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ParseBoolPipe);\nexports.ParseBoolPipe = ParseBoolPipe;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseIntPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\nconst optional_decorator_1 = require(\"../decorators/core/optional.decorator\");\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\n/**\n * Defines the built-in ParseInt Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseIntPipe = class ParseIntPipe {\n    constructor(options) {\n        options = options || {};\n        const { exceptionFactory, errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST } = options;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n    }\n    /**\n     * Method that accesses and performs optional transformation on argument for\n     * in-flight requests.\n     *\n     * @param value currently processed route argument\n     * @param metadata contains metadata about the currently processed route argument\n     */\n    async transform(value, metadata) {\n        if (!this.isNumeric(value)) {\n            throw this.exceptionFactory('Validation failed (numeric string is expected)');\n        }\n        return parseInt(value, 10);\n    }\n    /**\n     * @param value currently processed route argument\n     * @returns `true` if `value` is a valid integer number\n     */\n    isNumeric(value) {\n        return (['string', 'number'].includes(typeof value) &&\n            /^-?\\d+$/.test(value) &&\n            isFinite(value));\n    }\n};\nParseIntPipe = tslib_1.__decorate([\n    (0, injectable_decorator_1.Injectable)(),\n    tslib_1.__param(0, (0, optional_decorator_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ParseIntPipe);\nexports.ParseIntPipe = ParseIntPipe;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseFloatPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst index_1 = require(\"../index\");\nconst core_1 = require(\"../decorators/core\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\n/**\n * Defines the built-in ParseFloat Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseFloatPipe = class ParseFloatPipe {\n    constructor(options) {\n        options = options || {};\n        const { exceptionFactory, errorHttpStatusCode = index_1.HttpStatus.BAD_REQUEST } = options;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n    }\n    /**\n     * Method that accesses and performs optional transformation on argument for\n     * in-flight requests.\n     *\n     * @param value currently processed route argument\n     * @param metadata contains metadata about the currently processed route argument\n     */\n    async transform(value, metadata) {\n        if (!this.isNumeric(value)) {\n            throw this.exceptionFactory('Validation failed (numeric string is expected)');\n        }\n        return parseFloat(value);\n    }\n    /**\n     * @param value currently processed route argument\n     * @returns `true` if `value` is a valid float number\n     */\n    isNumeric(value) {\n        return (['string', 'number'].includes(typeof value) &&\n            !isNaN(parseFloat(value)) &&\n            isFinite(value));\n    }\n};\nParseFloatPipe = tslib_1.__decorate([\n    (0, core_1.Injectable)(),\n    tslib_1.__param(0, (0, core_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ParseFloatPipe);\nexports.ParseFloatPipe = ParseFloatPipe;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseEnumPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst index_1 = require(\"../index\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\n/**\n * Defines the built-in ParseEnum Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseEnumPipe = class ParseEnumPipe {\n    constructor(enumType, options) {\n        this.enumType = enumType;\n        if (!enumType) {\n            throw new Error(`\"ParseEnumPipe\" requires \"enumType\" argument specified (to validate input values).`);\n        }\n        options = options || {};\n        const { exceptionFactory, errorHttpStatusCode = index_1.HttpStatus.BAD_REQUEST } = options;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n    }\n    /**\n     * Method that accesses and performs optional transformation on argument for\n     * in-flight requests.\n     *\n     * @param value currently processed route argument\n     * @param metadata contains metadata about the currently processed route argument\n     */\n    async transform(value, metadata) {\n        if (!this.isEnum(value)) {\n            throw this.exceptionFactory('Validation failed (enum string is expected)');\n        }\n        return value;\n    }\n    isEnum(value) {\n        const enumValues = Object.keys(this.enumType).map(item => this.enumType[item]);\n        return enumValues.includes(value);\n    }\n};\nParseEnumPipe = tslib_1.__decorate([\n    (0, index_1.Injectable)(),\n    tslib_1.__param(1, (0, index_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object])\n], ParseEnumPipe);\nexports.ParseEnumPipe = ParseEnumPipe;\n", "\"use strict\";\nvar ParseUUIDPipe_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseUUIDPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\nconst optional_decorator_1 = require(\"../decorators/core/optional.decorator\");\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\n/**\n * Defines the built-in ParseUUID Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseUUIDPipe = ParseUUIDPipe_1 = class ParseUUIDPipe {\n    constructor(options) {\n        options = options || {};\n        const { exceptionFactory, errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST, version, } = options;\n        this.version = version;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n    }\n    async transform(value, metadata) {\n        if (!this.isUUID(value, this.version)) {\n            throw this.exceptionFactory(`Validation failed (uuid${this.version ? ` v ${this.version}` : ''} is expected)`);\n        }\n        return value;\n    }\n    isUUID(str, version = 'all') {\n        if (!(0, shared_utils_1.isString)(str)) {\n            throw this.exceptionFactory('The value passed as UUID is not a string');\n        }\n        const pattern = ParseUUIDPipe_1.uuidRegExps[version];\n        return pattern === null || pattern === void 0 ? void 0 : pattern.test(str);\n    }\n};\nParseUUIDPipe.uuidRegExps = {\n    3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n    4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n};\nParseUUIDPipe = ParseUUIDPipe_1 = tslib_1.__decorate([\n    (0, injectable_decorator_1.Injectable)(),\n    tslib_1.__param(0, (0, optional_decorator_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ParseUUIDPipe);\nexports.ParseUUIDPipe = ParseUUIDPipe;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileValidator = void 0;\n/**\n * Interface describing FileValidators, which can be added to a ParseFilePipe\n *\n * @see {ParseFilePipe}\n * @publicApi\n */\nclass FileValidator {\n    constructor(validationOptions) {\n        this.validationOptions = validationOptions;\n    }\n}\nexports.FileValidator = FileValidator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileTypeValidator = void 0;\nconst file_validator_interface_1 = require(\"./file-validator.interface\");\n/**\n * Defines the built-in FileType File Validator. It validates incoming files mime-type\n * matching a string or a regular expression. Note that this validator uses a naive strategy\n * to check the mime-type and could be fooled if the client provided a file with renamed extension.\n * (for instance, renaming a 'malicious.bat' to 'malicious.jpeg'). To handle such security issues\n * with more reliability, consider checking against the file's [magic-numbers](https://en.wikipedia.org/wiki/Magic_number_%28programming%29)\n *\n * @see [File Validators](https://docs.nestjs.com/techniques/file-upload#validators)\n *\n * @publicApi\n */\nclass FileTypeValidator extends file_validator_interface_1.FileValidator {\n    buildErrorMessage() {\n        return `Validation failed (expected type is ${this.validationOptions.fileType})`;\n    }\n    isValid(file) {\n        if (!this.validationOptions) {\n            return true;\n        }\n        if (!file.mimetype) {\n            return false;\n        }\n        return Boolean(file.mimetype.match(this.validationOptions.fileType));\n    }\n}\nexports.FileTypeValidator = FileTypeValidator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaxFileSizeValidator = void 0;\nconst file_validator_interface_1 = require(\"./file-validator.interface\");\n/**\n * Defines the built-in MaxSize File Validator\n *\n * @see [File Validators](https://docs.nestjs.com/techniques/file-upload#file-validation)\n *\n * @publicApi\n */\nclass MaxFileSizeValidator extends file_validator_interface_1.FileValidator {\n    buildErrorMessage() {\n        if ('message' in this.validationOptions) {\n            if (typeof this.validationOptions.message === 'function') {\n                return this.validationOptions.message(this.validationOptions.maxSize);\n            }\n            return this.validationOptions.message;\n        }\n        return `Validation failed (expected size is less than ${this.validationOptions.maxSize})`;\n    }\n    isValid(file) {\n        if (!this.validationOptions) {\n            return true;\n        }\n        return file.size < this.validationOptions.maxSize;\n    }\n}\nexports.MaxFileSizeValidator = MaxFileSizeValidator;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseFilePipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"../../decorators/core\");\nconst enums_1 = require(\"../../enums\");\nconst http_error_by_code_util_1 = require(\"../../utils/http-error-by-code.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Defines the built-in ParseFile Pipe. This pipe can be used to validate incoming files\n * with `@UploadedFile()` decorator. You can use either other specific built-in validators\n * or provide one of your own, simply implementing it through FileValidator interface\n * and adding it to ParseFilePipe's constructor.\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseFilePipe = class ParseFilePipe {\n    constructor(options = {}) {\n        const { exceptionFactory, errorHttpStatusCode = enums_1.HttpStatus.BAD_REQUEST, validators = [], fileIsRequired, } = options;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n        this.validators = validators;\n        this.fileIsRequired = fileIsRequired !== null && fileIsRequired !== void 0 ? fileIsRequired : true;\n    }\n    async transform(value) {\n        const areThereAnyFilesIn = this.thereAreNoFilesIn(value);\n        if (areThereAnyFilesIn && this.fileIsRequired) {\n            throw this.exceptionFactory('File is required');\n        }\n        if (!areThereAnyFilesIn && this.validators.length) {\n            await this.validateFilesOrFile(value);\n        }\n        return value;\n    }\n    async validateFilesOrFile(value) {\n        if (Array.isArray(value)) {\n            await Promise.all(value.map(f => this.validate(f)));\n        }\n        else {\n            await this.validate(value);\n        }\n    }\n    thereAreNoFilesIn(value) {\n        const isEmptyArray = Array.isArray(value) && (0, shared_utils_1.isEmpty)(value);\n        const isEmptyObject = (0, shared_utils_1.isObject)(value) && (0, shared_utils_1.isEmpty)(Object.keys(value));\n        return (0, shared_utils_1.isUndefined)(value) || isEmptyArray || isEmptyObject;\n    }\n    async validate(file) {\n        for (const validator of this.validators) {\n            await this.validateOrThrow(file, validator);\n        }\n        return file;\n    }\n    async validateOrThrow(file, validator) {\n        const isValid = await validator.isValid(file);\n        if (!isValid) {\n            const errorMessage = validator.buildErrorMessage(file);\n            throw this.exceptionFactory(errorMessage);\n        }\n    }\n    /**\n     * @returns list of validators used in this pipe.\n     */\n    getValidators() {\n        return this.validators;\n    }\n};\nParseFilePipe = tslib_1.__decorate([\n    (0, core_1.Injectable)(),\n    tslib_1.__param(0, (0, core_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ParseFilePipe);\nexports.ParseFilePipe = ParseFilePipe;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseFilePipeBuilder = void 0;\nconst file_type_validator_1 = require(\"./file-type.validator\");\nconst max_file_size_validator_1 = require(\"./max-file-size.validator\");\nconst parse_file_pipe_1 = require(\"./parse-file.pipe\");\n/**\n * @publicApi\n */\nclass ParseFilePipeBuilder {\n    constructor() {\n        this.validators = [];\n    }\n    addMaxSizeValidator(options) {\n        return this.addValidator(new max_file_size_validator_1.MaxFileSizeValidator(options));\n    }\n    addFileTypeValidator(options) {\n        return this.addValidator(new file_type_validator_1.FileTypeValidator(options));\n    }\n    addValidator(validator) {\n        this.validators.push(validator);\n        return this;\n    }\n    build(additionalOptions) {\n        const parseFilePipe = new parse_file_pipe_1.ParseFilePipe(Object.assign(Object.assign({}, additionalOptions), { validators: this.validators }));\n        this.validators = [];\n        return parseFilePipe;\n    }\n}\nexports.ParseFilePipeBuilder = ParseFilePipeBuilder;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./file-type.validator\"), exports);\ntslib_1.__exportStar(require(\"./file-validator.interface\"), exports);\ntslib_1.__exportStar(require(\"./max-file-size.validator\"), exports);\ntslib_1.__exportStar(require(\"./parse-file-options.interface\"), exports);\ntslib_1.__exportStar(require(\"./parse-file.pipe\"), exports);\ntslib_1.__exportStar(require(\"./parse-file-pipe.builder\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./default-value.pipe\"), exports);\ntslib_1.__exportStar(require(\"./parse-array.pipe\"), exports);\ntslib_1.__exportStar(require(\"./parse-bool.pipe\"), exports);\ntslib_1.__exportStar(require(\"./parse-int.pipe\"), exports);\ntslib_1.__exportStar(require(\"./parse-float.pipe\"), exports);\ntslib_1.__exportStar(require(\"./parse-enum.pipe\"), exports);\ntslib_1.__exportStar(require(\"./parse-uuid.pipe\"), exports);\ntslib_1.__exportStar(require(\"./validation.pipe\"), exports);\ntslib_1.__exportStar(require(\"./file\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CLASS_SERIALIZER_OPTIONS = void 0;\nexports.CLASS_SERIALIZER_OPTIONS = 'class_serializer:options';\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClassSerializerInterceptor = void 0;\nconst tslib_1 = require(\"tslib\");\nconst operators_1 = require(\"rxjs/operators\");\nconst core_1 = require(\"../decorators/core\");\nconst file_stream_1 = require(\"../file-stream\");\nconst load_package_util_1 = require(\"../utils/load-package.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nconst class_serializer_constants_1 = require(\"./class-serializer.constants\");\nlet classTransformer = {};\n// NOTE (external)\n// We need to deduplicate them here due to the circular dependency\n// between core and common packages\nconst REFLECTOR = 'Reflector';\n/**\n * @publicApi\n */\nlet ClassSerializerInterceptor = class ClassSerializerInterceptor {\n    constructor(reflector, defaultOptions = {}) {\n        var _a;\n        this.reflector = reflector;\n        this.defaultOptions = defaultOptions;\n        classTransformer =\n            (_a = defaultOptions === null || defaultOptions === void 0 ? void 0 : defaultOptions.transformerPackage) !== null && _a !== void 0 ? _a : (0, load_package_util_1.loadPackage)('class-transformer', 'ClassSerializerInterceptor', () => require('class-transformer'));\n        if (!(defaultOptions === null || defaultOptions === void 0 ? void 0 : defaultOptions.transformerPackage)) {\n            require('class-transformer');\n        }\n    }\n    intercept(context, next) {\n        const contextOptions = this.getContextOptions(context);\n        const options = Object.assign(Object.assign({}, this.defaultOptions), contextOptions);\n        return next\n            .handle()\n            .pipe((0, operators_1.map)((res) => this.serialize(res, options)));\n    }\n    /**\n     * Serializes responses that are non-null objects nor streamable files.\n     */\n    serialize(response, options) {\n        if (!(0, shared_utils_1.isObject)(response) || response instanceof file_stream_1.StreamableFile) {\n            return response;\n        }\n        return Array.isArray(response)\n            ? response.map(item => this.transformToPlain(item, options))\n            : this.transformToPlain(response, options);\n    }\n    transformToPlain(plainOrClass, options) {\n        if (!plainOrClass) {\n            return plainOrClass;\n        }\n        if (!options.type) {\n            return classTransformer.classToPlain(plainOrClass, options);\n        }\n        if (plainOrClass instanceof options.type) {\n            return classTransformer.classToPlain(plainOrClass, options);\n        }\n        const instance = classTransformer.plainToClass(options.type, plainOrClass);\n        return classTransformer.classToPlain(instance, options);\n    }\n    getContextOptions(context) {\n        return this.reflector.getAllAndOverride(class_serializer_constants_1.CLASS_SERIALIZER_OPTIONS, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n    }\n};\nClassSerializerInterceptor = tslib_1.__decorate([\n    (0, core_1.Injectable)(),\n    tslib_1.__param(0, (0, core_1.Inject)(REFLECTOR)),\n    tslib_1.__param(1, (0, core_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object])\n], ClassSerializerInterceptor);\nexports.ClassSerializerInterceptor = ClassSerializerInterceptor;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SerializeOptions = void 0;\nconst decorators_1 = require(\"../../decorators\");\nconst class_serializer_constants_1 = require(\"../class-serializer.constants\");\n/**\n * @publicApi\n */\nconst SerializeOptions = (options) => (0, decorators_1.SetMetadata)(class_serializer_constants_1.CLASS_SERIALIZER_OPTIONS, options);\nexports.SerializeOptions = SerializeOptions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./serialize-options.decorator\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./class-serializer.interceptor\"), exports);\ntslib_1.__exportStar(require(\"./decorators\"), exports);\ntslib_1.__exportStar(require(\"./class-serializer.interfaces\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.forwardRef = void 0;\n/**\n * @publicApi\n */\nconst forwardRef = (fn) => ({\n    forwardRef: fn,\n});\nexports.forwardRef = forwardRef;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./forward-ref.util\"), exports);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION_NEUTRAL = exports.Scope = void 0;\nconst tslib_1 = require(\"tslib\");\n/*\n * Nest @common\n * Copyright(c) 2017 - 2023 Kamil Mysliwiec\n * https://nestjs.com\n * MIT Licensed\n */\nrequire(\"reflect-metadata\");\ntslib_1.__exportStar(require(\"./cache\"), exports);\ntslib_1.__exportStar(require(\"./decorators\"), exports);\ntslib_1.__exportStar(require(\"./enums\"), exports);\ntslib_1.__exportStar(require(\"./exceptions\"), exports);\ntslib_1.__exportStar(require(\"./file-stream\"), exports);\nvar interfaces_1 = require(\"./interfaces\");\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return interfaces_1.Scope; } });\nObject.defineProperty(exports, \"VERSION_NEUTRAL\", { enumerable: true, get: function () { return interfaces_1.VERSION_NEUTRAL; } });\ntslib_1.__exportStar(require(\"./module-utils\"), exports);\ntslib_1.__exportStar(require(\"./pipes\"), exports);\ntslib_1.__exportStar(require(\"./serializer\"), exports);\ntslib_1.__exportStar(require(\"./services\"), exports);\ntslib_1.__exportStar(require(\"./utils\"), exports);\n"],
  "mappings": "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K,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,MAAK,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAAC,IAAI,GAAE,OAAM,CAA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AA,IAAG;AAQ9F,QAAI,6BAA6B;AAAA,MAC/B,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAAI;AAAA;AAAA,MAEJ,IAA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B;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;;;;;ACpJA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;;;ACGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAAAC;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CM,SAAU,SACd,oBACA,2BACA,uBAAwC;AAExC,MAAI,OAAO,uBAAuB,UAAU;AAC1C,WAAO,iBAAiB,SAAS,EAAE,SACjC,oBACA,2BACA,qBAAqB;SAElB;AACL,WAAO,iBAAiB,SAAS,EAAE,SAAS,oBAAoB,yBAA6C;;AAEjH;AAmBM,SAAU,iBACd,oBACA,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",
  "names": ["result", "v", "d", "b", "__assign", "Reflect", "Metadata", "IsArray", "IsObject", "hasOwn", "ownKeys", "Type", "result", "MapIterator", "Map", "Set", "WeakMap", "isObject", "isString", "isNumber", "isEmpty", "result", "require_constants", "result", "require_utils", "self", "RequestMethod", "RouteParamtypes", "require_common", "options", "require_decorators", "Subscription", "__values", "__spreadArray", "__read", "__spreadArray", "__read", "__extends", "Subscriber", "ConsumerObserver", "SafeSubscriber", "Observable", "__extends", "OperatorSubscriber", "err", "__extends", "ConnectableObservable", "__spreadArray", "__read", "__extends", "Subject", "__values", "AnonymousSubject", "__extends", "BehaviorSubject", "__extends", "ReplaySubject", "__extends", "AsyncSubject", "__extends", "Action", "__spreadArray", "__read", "__extends", "AsyncAction", "__spreadArray", "__read", "__extends", "AsapAction", "Scheduler", "__extends", "AsyncScheduler", "__extends", "AsapScheduler", "__extends", "QueueAction", "__extends", "QueueScheduler", "__extends", "AnimationFrameAction", "__extends", "AnimationFrameScheduler", "__extends", "VirtualTimeScheduler", "VirtualAction", "isPromise", "__await", "__values", "process", "__asyncValues", "repeat", "result", "NotificationKind", "Notification", "result", "isArray", "__spreadArray", "__read", "__spreadArray", "__read", "_i", "isArray", "result", "result", "length", "i", "result", "result", "length", "sourceIndex", "__read", "_a", "isArray", "i", "result", "sourceIndex", "result", "__spreadArray", "__read", "__values", "__values", "__values", "__spreadArray", "__read", "__spreadArray", "__read", "__spreadArray", "__read", "__spreadArray", "__read", "__spreadArray", "__read", "result", "isEmpty", "__values", "max", "__spreadArray", "__read", "__spreadArray", "__read", "min", "__spreadArray", "__read", "length", "__spreadArray", "__read", "repeat", "__spreadArray", "__read", "result", "_a", "TimeInterval", "window", "__values", "window", "_a", "window", "__values", "window", "i", "__spreadArray", "__read", "__spreadArray", "__read", "__spreadArray", "__read", "__exportStar", "__spreadArray", "__read", "HttpStatus", "ShutdownSignal", "VersioningType", "length", "require_interfaces", "require_http", "require_modules", "Scope", "require_interfaces", "result", "result", "result", "result", "limit", "result", "ValidationMetadata", "ValidationSchemaToMetadataTransformer", "global", "MetadataStorage", "metadata", "__values", "__read", "__spreadArray", "ValidationError", "ValidationTypes", "ValidationUtils", "ValidationExecutor", "validator", "_a", "__read", "type", "message", "validationResult", "Validator", "instance", "ConstraintMetadata", "object", "__assign", "_typeof", "obj", "isString", "require_merge", "isLatLong", "isLatLongValidator", "isDivisibleBy", "isDivisibleByValidator", "max", "min", "minDate", "maxDate", "toString", "_typeof", "obj", "contains", "containsValidator", "containsValidator", "import_contains", "isAlpha", "isAlphaValidator", "isAlphanumeric", "isAlphanumericValidator", "includes", "isDecimal", "isDecimalValidator", "isAscii", "isAsciiValidator", "isBase64", "isBase64Validator", "isByteLength", "_typeof", "obj", "min", "max", "min", "max", "isByteLengthValidator", "isCreditCard", "isCreditCardValidator", "isCurrency", "isCurrencyValidator", "isFQDN", "isIP", "isEmail", "isEmailValidator", "isFqdnValidator", "isFullWidth", "isFullWidthValidator", "isHalfWidth", "isHalfWidthValidator", "isVariableWidth", "isVariableWidthValidator", "isHexColor", "isHexColorValidator", "isHexadecimal", "isHexadecimalValidator", "isMACAddress", "isMacAddressValidator", "isIPValidator", "isInt", "isPort", "isPortValidator", "isISBN", "isIsbnValidator", "isISIN", "isIsinValidator", "isISO8601", "isValidDate", "isIso8601Validator", "isJSON", "_typeof", "obj", "isJSONValidator", "isJWT", "isJwtValidator", "isLowercase", "isLowercaseValidator", "isMobilePhone", "key", "phone", "isMobilePhoneValidator", "isISO31661Alpha2", "isISO31661Alpha2Validator", "isISO31661Alpha3", "isISO31661Alpha3Validator", "isMongoId", "isMongoIdValidator", "isMultibyte", "isMultibyteValidator", "isSurrogatePair", "isSurrogatePairValidator", "isURL", "_slicedToArray", "_arrayWithHoles", "_iterableToArrayLimit", "_unsupportedIterableToArray", "_nonIterableRest", "_arrayLikeToArray", "matches", "isUrlValidator", "isUUID", "isUuidValidator", "isUppercase", "isUppercaseValidator", "_typeof", "obj", "min", "max", "min", "max", "isLengthValidator", "max", "isLengthValidator", "import_isLength", "min", "isLengthValidator", "import_isLength", "matches", "matchesValidator", "ParseError", "code", "Object", "setPrototypeOf", "prototype", "name", "constructor", "Error", "MIN_LENGTH_FOR_NSN", "MAX_LENGTH_FOR_NSN", "MAX_LENGTH_COUNTRY_CODE", "VALID_DIGITS", "DASHES", "SLASHES", "DOTS", "WHITESPACE", "BRACKETS", "TILDES", "VALID_PUNCTUATION", "PLUS_CHARS", "a", "b", "split", "pa", "pb", "i", "na", "Number", "nb", "isNaN", "getType", "types", "type", "validateMetadata", "metadata", "Error", "is_object", "countries", "Object", "keys", "join", "type_of", "getCountryCallingCode", "country", "Metadata", "hasCountry", "countryCallingCode", "isSupportedCountry", "undefined", "setVersion", "version", "v1", "v2", "v3", "v4", "compare", "V3", "V4", "DEFAULT_EXT_PREFIX", "CALLING_CODE_REG_EXP", "NumberingPlan", "Format", "FIRST_GROUP_ONLY_PREFIX_PATTERN", "Type", "_classCallCheck", "call", "getCountries", "filter", "_", "countryCode", "nonGeographic", "nonGeographical", "getCountryMetadata", "callingCode", "getCountryCodesForCallingCode", "countryCodes", "countryCallingCodes", "length", "selectNumberingPlan", "test", "numberingPlan", "hasCallingCode", "getNumberingPlanMetadata", "getCountryCodeForCallingCode", "IDDPrefix", "defaultIDDPrefix", "nationalNumberPattern", "possibleLengths", "formats", "nationalPrefixForParsing", "nationalPrefixTransformRule", "leadingDigits", "hasTypes", "ext", "country_phone_code_to_countries", "country_calling_codes", "globalMetadataObject", "_getFormats", "getDefaultCountryMetadataForRegion", "map", "_getNationalPrefixFormattingRule", "_nationalPrefixForParsing", "nationalPrefix", "_getNationalPrefixIsOptionalWhenFormatting", "format", "_format", "nationalPrefixFormattingRule", "nationalPrefixIsOptionalWhenFormattingInNationalFormat", "usesNationalPrefix", "_typeof", "purpose", "extLimitAfterExplicitLabel", "extLimitAfterLikelyLabel", "extLimitAfterAmbiguousChar", "extLimitWhenNotSure", "possibleSeparatorsBetweenNumberAndExtLabel", "possibleCharsAfterExtLabel", "optionalExtnSuffix", "explicitExtLabels", "ambiguousExtLabels", "ambiguousSeparator", "possibleSeparatorsNumberExtLabelNoComma", "autoDiallingAndExtLabelsFound", "rfcExtn", "RFC3966_EXTN_PREFIX", "getExtensionDigitsPattern", "explicitExtn", "ambiguousExtn", "americanStyleExtnWithSuffix", "autoDiallingExtn", "onlyCommasExtn", "maxLength", "VALID_DIGITS", "number", "length", "MIN_LENGTH_FOR_NSN", "VALID_PHONE_NUMBER_PATTERN", "test", "isViablePhoneNumberStart", "VALID_PHONE_NUMBER_START_REG_EXP", "MIN_LENGTH_PHONE_NUMBER_PATTERN", "VALID_PHONE_NUMBER", "VALID_PHONE_NUMBER_WITH_EXTENSION", "VALID_DIGITS", "PLUS_CHARS", "VALID_PUNCTUATION", "RegExp", "createExtensionPattern", "number", "start", "search", "EXTN_PATTERN", "numberWithoutExtension", "slice", "matches", "match", "i", "length", "ext", "RegExp", "createExtensionPattern", "parseDigit", "character", "DIGITS", "string", "result", "split", "digit", "string", "result", "_createForOfIteratorHelperLoose", "split", "character", "parsePhoneNumberCharacter", "prevParsedCharacters", "parseDigit", "a", "b", "merged", "slice", "_createForOfIteratorHelperLoose", "element", "indexOf", "push", "sort", "nationalNumber", "metadata", "checkNumberLengthForType", "undefined", "type", "type_info", "possible_lengths", "possibleLengths", "mobile_type", "mergeArrays", "actual_length", "length", "minimum_length", "indexOf", "input", "options", "metadata", "undefined", "Metadata", "v2", "countryCallingCode", "Error", "selectNumberingPlan", "phone", "country", "hasCountry", "possibleLengths", "isPossibleNumber", "nationalNumber", "isNonGeographicCallingCode", "checkNumberLength", "text", "regular_expression", "RegExp", "test", "input", "options", "metadata", "country", "Metadata", "selectNumberingPlan", "countryCallingCode", "nationalNumber", "v2", "phone", "matchesEntirely", "nationalNumberPattern", "isNumberTypeEqualTo", "type", "pattern", "_createForOfIteratorHelperLoose", "NON_FIXED_LINE_PHONE_TYPES", "possibleLengths", "indexOf", "length", "input", "options", "metadata", "Metadata", "selectNumberingPlan", "country", "countryCallingCode", "hasTypes", "getNumberType", "undefined", "nationalNumber", "v2", "phone", "matchesEntirely", "nationalNumberPattern", "callingCode", "nationalNumber", "metadata", "_metadata", "Metadata", "possibleCountries", "getCountryCodesForCallingCode", "filter", "country", "couldNationalNumberBelongToCountry", "selectNumberingPlan", "numberingPlan", "possibleLengths", "indexOf", "length", "formattedNumber", "replace", "RegExp", "VALID_PUNCTUATION", "trim", "number", "format", "useInternationalFormat", "withNationalPrefix", "carrierCode", "metadata", "formattedNumber", "replace", "RegExp", "pattern", "internationalFormat", "nationalPrefixFormattingRule", "FIRST_GROUP_PATTERN", "applyInternationalSeparatorStyle", "country", "callingCode", "metadata", "countryMetadata", "Metadata", "selectNumberingPlan", "defaultIDDPrefix", "SINGLE_IDD_PREFIX_REG_EXP", "test", "IDDPrefix", "formatRFC3966", "number", "ext", "Error", "formatNumber", "input", "format", "options", "metadata", "DEFAULT_OPTIONS", "Metadata", "country", "hasCountry", "Error", "countryCallingCode", "selectNumberingPlan", "phone", "nationalNumber", "v2", "number", "formatNationalNumber", "carrierCode", "addExtension", "ext", "formatExtension", "formatRFC3966", "fromCountry", "formattedNumber", "formatIDD", "formatAs", "chooseFormatForNumber", "formats", "formatNationalNumberUsingFormat", "useInternationalFormat", "withNationalPrefix", "nationalPrefixIsOptionalWhenFormattingInNationalFormat", "nationalPrefix", "availableFormats", "nationalNnumber", "_createForOfIteratorHelperLoose", "leadingDigitsPatterns", "length", "lastLeadingDigitsPattern", "search", "matchesEntirely", "pattern", "fromCountryCallingCode", "getCountryCallingCode", "iddPrefix", "getIddPrefix", "undefined", "extension", "getCountryAndCountryCallingCode", "countryOrCountryCallingCode", "metadataJson", "country", "countryCallingCode", "metadata", "Metadata", "isCountryCode", "selectNumberingPlan", "USE_NON_GEOGRAPHIC_COUNTRY_CODE", "isNonGeographicCallingCode", "PhoneNumber", "nationalNumber", "_classCallCheck", "TypeError", "number", "getMetadata", "ext", "getPossibleCountriesForNumber", "isPossibleNumber", "v2", "isValidNumber", "phoneNumber", "getType", "getNumberType", "format", "options", "formatNumber", "_objectSpread", "value", "test", "number", "country", "callingCode", "metadata", "countryMetadata", "Metadata", "selectNumberingPlan", "IDDPrefixPattern", "RegExp", "IDDPrefix", "search", "slice", "match", "length", "matchedGroups", "CAPTURING_DIGIT_PATTERN", "VALID_DIGITS", "number", "metadata", "numberingPlan", "nationalPrefixForParsing", "prefixPattern", "RegExp", "prefixMatch", "exec", "nationalNumber", "carrierCode", "capturedGroupsCount", "length", "hasCapturedGroups", "nationalPrefixTransformRule", "replace", "prefixBeforeNationalNumber", "slice", "nationalPrefix", "possiblePositionOfTheFirstCapturedGroup", "indexOf", "possibleNationalPrefix", "number", "metadata", "extractNationalNumberFromPossiblyIncompleteNumber", "carrierCode", "nationalNumber", "shouldHaveExtractedNationalPrefix", "possibleLengths", "isPossibleIncompleteNationalNumber", "nationalNumberBefore", "nationalNumberAfter", "matchesEntirely", "nationalNumberPattern", "checkNumberLength", "number", "country", "callingCode", "metadata", "countryCallingCode", "getCountryCallingCode", "indexOf", "Metadata", "selectNumberingPlan", "possibleShorterNumber", "slice", "length", "extractNationalNumber", "possibleShorterNationalNumber", "nationalNumber", "matchesEntirely", "nationalNumberPattern", "checkNumberLength", "number", "country", "callingCode", "metadata", "isNumberWithIddPrefix", "numberWithoutIDD", "stripIddPrefix", "extractCountryCallingCodeFromInternationalNumberWithoutPlusSign", "countryCallingCode", "shorterNumber", "countryCallingCodeSource", "Metadata", "i", "MAX_LENGTH_COUNTRY_CODE", "length", "slice", "hasCallingCode", "selectNumberingPlan", "nationalPhoneNumber", "countries", "defaultCountry", "metadata", "Metadata", "matchingCountries", "_createForOfIteratorHelperLoose", "country", "leadingDigits", "search", "getNumberType", "phone", "undefined", "push", "length", "callingCode", "nationalPhoneNumber", "nationalNumber", "defaultCountry", "metadata", "USE_NON_GEOGRAPHIC_COUNTRY_CODE", "isNonGeographicCallingCode", "possibleCountries", "getCountryCodesForCallingCode", "length", "getCountryByNationalNumber", "countries", "numberToExtractFrom", "indexOfPhoneContext", "indexOf", "RFC3966_PHONE_CONTEXT_", "phoneContextStart", "length", "phoneContextEnd", "substring", "isPhoneContextValid", "phoneContext", "RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_", "test", "RFC3966_DOMAINNAME_PATTERN_", "PLUS_SIGN", "RFC3966_VISUAL_SEPARATOR_", "RFC3966_PHONE_DIGIT_", "RFC3966_GLOBAL_NUMBER_DIGITS_", "ALPHANUM_", "RFC3966_DOMAINLABEL_", "VALID_ALPHA_", "RFC3966_TOPLABEL_", "RFC3966_DOMAINNAME_", "RFC3966_PREFIX_", "RFC3966_ISDN_SUBADDRESS_", "VALID_DIGITS", "RegExp", "numberToParse", "extractFormattedPhoneNumber", "phoneContext", "extractPhoneContext", "isPhoneContextValid", "ParseError", "phoneNumberString", "charAt", "PLUS_SIGN", "indexOfRfc3966Prefix", "indexOf", "RFC3966_PREFIX_", "indexOfNationalNumber", "length", "indexOfPhoneContext", "RFC3966_PHONE_CONTEXT_", "substring", "indexOfIsdn", "RFC3966_ISDN_SUBADDRESS_", "text", "options", "metadata", "Metadata", "defaultCountry", "hasCountry", "v2", "ParseError", "Error", "parseInput", "extract", "formattedPhoneNumber", "number", "ext", "error", "parsePhoneNumber", "defaultCallingCode", "country", "nationalNumber", "countryCallingCode", "countryCallingCodeSource", "carrierCode", "hasSelectedNumberingPlan", "length", "MIN_LENGTH_FOR_NSN", "MAX_LENGTH_FOR_NSN", "phoneNumber", "PhoneNumber", "__countryCallingCodeSource", "valid", "extended", "matchesEntirely", "nationalNumberPattern", "result", "possible", "possibleLengths", "isPossibleNumber", "phone", "extractFormattedPhoneNumber", "throwOnError", "MAX_INPUT_STRING_LENGTH", "startsAt", "search", "PHONE_NUMBER_START_PATTERN", "slice", "replace", "AFTER_PHONE_NUMBER_END_PATTERN", "extractFormattedPhoneNumberFromPossibleRfc3966NumberUri", "isViablePhoneNumber", "isViablePhoneNumberStart", "withExtensionStripped", "extractExtension", "extractCountryCallingCode", "parseIncompletePhoneNumber", "selectNumberingPlan", "USE_NON_GEOGRAPHIC_COUNTRY_CODE", "isNonGeographicCallingCode", "getCountryCallingCode", "extractNationalNumber", "exactCountry", "getCountryByCallingCode", "RegExp", "PLUS_CHARS", "VALID_DIGITS", "text", "options", "metadata", "parse", "_objectSpread", "v2", "args", "Array", "prototype", "slice", "call", "arg_1", "arg_2", "arg_3", "arg_4", "text", "options", "metadata", "TypeError", "undefined", "_objectSpread", "defaultCountry", "isObject", "Error", "_", "_typeof", "init_parsePhoneNumberWithError", "parsePhoneNumber", "text", "options", "metadata", "defaultCountry", "isSupportedCountry", "_objectSpread", "undefined", "parsePhoneNumberWithError", "error", "ParseError", "parsePhoneNumber", "normalizeArguments", "arguments", "text", "options", "metadata", "parsePhoneNumber_", "init_parsePhoneNumber", "Node", "LRUCache", "key", "value", "next", "prev", "_classCallCheck", "limit", "size", "head", "tail", "cache", "ensureLimit", "node", "remove", "put", "console", "log", "RegExpCache", "size", "_classCallCheck", "cache", "LRUCache", "pattern", "regExp", "get", "RegExp", "put", "limit", "lower", "upper", "TypeError", "trimAfterFirstMatch", "regexp", "string", "index", "search", "slice", "startsWith", "substring", "indexOf", "endsWith", "length", "isLatinLetter", "letter", "pL_regexp", "test", "pMn_regexp", "latinLetterRegexp", "isInvalidPunctuationSymbol", "character", "pSc_regexp", "_pZ", "pZ", "PZ", "_pN", "_pNd", "pNd", "_pL", "pL", "_pSc", "pSc", "_pMn", "pMn", "_InBasic_Latin", "_InLatin_1_Supplement", "_InLatin_Extended_A", "_InLatin_Extended_Additional", "_InLatin_Extended_B", "_InCombining_Diacritical_Marks", "RegExp", "phoneNumberString", "phoneNumber", "metadata", "phoneNumberStringContainsCallingCode", "parsedPhoneNumber", "parsePhoneNumber", "defaultCallingCode", "countryCallingCode", "ext", "number", "nationalNumber", "indexOf", "init_parsePhoneNumber", "containsOnlyValidXChars", "phoneNumber", "candidate", "metadata", "index", "length", "charAtIndex", "charAt", "charAtNextIndex", "matchPhoneNumberStringAgainstPhoneNumber", "substring", "ext", "parseDigits", "isNationalPrefixPresentIfRequired", "defaultCountry", "_metadata", "__countryCallingCodeSource", "Metadata", "selectNumberingPlan", "countryCallingCode", "phoneNumberRegion", "country", "getCountryByCallingCode", "nationalNumber", "format", "chooseFormatForNumber", "numberingPlan", "formats", "nationalPrefixFormattingRule", "nationalPrefixIsOptionalWhenFormattingInNationalFormat", "usesNationalPrefix", "Boolean", "nationalPrefix", "containsMoreThanOneSlashInNationalNumber", "firstSlashInBodyIndex", "indexOf", "secondSlashInBodyIndex", "candidateHasCountryCode", "slice", "checkNumberGroupingIsValid", "number", "checkGroups", "regExpCache", "Error", "normalizedCandidate", "normalizeDigits", "formattedNumberGroups", "getNationalNumberGroups", "alternateFormats", "MetadataManager", "getAlternateFormatsForCountry", "getCountryCode", "nationalSignificantNumber", "util", "getNationalSignificantNumber", "_createForOfIteratorHelperLoose", "numberFormats", "alternateFormat", "leadingDigitsPatterns", "leadingDigitsRegExp", "getPatternForRegExp", "test", "formattingPattern", "formatNsnUsingPattern", "split", "rfc3966Format", "formatNumber", "endIndex", "startIndex", "allNumberGroupsAreExactlyPresent", "candidateGroups", "NON_DIGITS_PATTERN", "candidateNumberGroupIndex", "hasExtension", "contains", "formattedNumberGroupIndex", "endsWith", "allNumberGroupsRemainGrouped", "fromIndex", "getCountryCodeSource", "CountryCodeSource", "FROM_DEFAULT_COUNTRY", "countryCode", "String", "i", "region", "getRegionCodeForCountryCode", "getNddPrefixForRegion", "Character", "isDigit", "startsWith", "getExtension", "POSSIBLE", "VALID", "isValid", "STRICT_GROUPING", "EXACT_GROUPING", "candidate", "trimAfterFirstMatch", "SECOND_NUMBER_START_PATTERN", "candidate", "offset", "text", "SLASH_SEPARATED_DATES", "test", "TIME_STAMPS", "followingText", "slice", "length", "TIME_STAMPS_SUFFIX_LEADING", "candidate", "offset", "text", "leniency", "MATCHING_BRACKETS_ENTIRE", "test", "PUB_PAGES", "LEAD_CLASS_LEADING", "previousChar", "isInvalidPunctuationSymbol", "isLatinLetter", "lastCharIndex", "length", "nextChar", "OPENING_PARENS", "CLOSING_PARENS", "NON_PARENS", "LEAD_CLASS", "BRACKET_PAIR_LIMIT", "PLUS_CHARS", "RegExp", "limit", "USE_NON_GEOGRAPHIC_COUNTRY_CODE", "EXTN_PATTERNS_FOR_MATCHING", "INNER_MATCHES", "leadLimit", "punctuationLimit", "digitBlockLimit", "blockLimit", "punctuation", "digitSequence", "PATTERN", "UNWANTED_END_CHAR_PATTERN", "MAX_SAFE_INTEGER", "PhoneNumberMatcher", "init_parsePhoneNumber", "createExtensionPattern", "pZ", "PZ", "limit", "MAX_LENGTH_FOR_NSN", "MAX_LENGTH_COUNTRY_CODE", "VALID_PUNCTUATION", "pNd", "LEAD_CLASS", "RegExp", "_pN", "_pL", "Number", "Math", "pow", "text", "options", "metadata", "_classCallCheck", "v2", "defaultCallingCode", "defaultCountry", "isSupportedCountry", "undefined", "leniency", "extended", "maxTries", "TypeError", "Leniency", "state", "searchIndex", "regExpCache", "RegExpCache", "matches", "exec", "candidate", "offset", "index", "parsePreCandidate", "isValidPreCandidate", "match", "parseAndVerify", "extractInnerMatch", "startsAt", "endsAt", "number", "phoneNumber", "result", "phone", "nationalNumber", "country", "countryCallingCode", "ext", "substring", "_createForOfIteratorHelperLoose", "innerMatchPattern", "isFirstMatch", "candidateMatch", "innerMatchRegExp", "trimAfterFirstMatch", "slice", "candidateIndexGuess", "indexOf", "isValidCandidate", "parsePhoneNumber", "isPossible", "length", "lastMatch", "find", "hasNext", "Error", "AsYouTypeState", "onCountryChange", "onCallingCodeChange", "_classCallCheck", "country", "callingCode", "international", "missingPlus", "IDDPrefix", "undefined", "digits", "resetNationalSignificantNumber", "initCountryAndCallingCode", "nationalSignificantNumber", "getNationalDigits", "nationalSignificantNumberMatchesInput", "nationalPrefix", "carrierCode", "complexPrefixBeforeNationalSignificantNumber", "properties", "Object", "keys", "key", "setCountry", "setCallingCode", "nextDigits", "slice", "length", "repeat", "string", "times", "result", "cutAndStripNonPairedParens", "cutBeforeIndex", "stripNonPairedParens", "slice", "dangling_braces", "i", "length", "push", "pop", "start", "cleared_string", "index", "populateTemplateWithDigits", "template", "position", "digits", "_createForOfIteratorHelperLoose", "split", "digit", "search", "DIGIT_PLACEHOLDER_MATCHER", "replace", "DIGIT_PLACEHOLDER", "RegExp", "state", "format", "metadata", "shouldTryNationalPrefixFormattingRule", "getSeparatorAfterNationalPrefix", "matcher", "RegExp", "pattern", "test", "nationalSignificantNumber", "formatNationalNumberWithAndWithoutNationalPrefixFormattingRule", "canFormatCompleteNumber", "checkNumberLength", "international", "nationalPrefix", "carrierCode", "formattedNumber", "formatNationalNumber", "useNationalPrefixFormattingRule", "formattedNationalNumber", "formatNationalNumberUsingFormat", "useInternationalFormat", "withNationalPrefix", "complexPrefixBeforeNationalSignificantNumber", "isValidFormattedNationalNumber", "parseDigits", "getNationalDigits", "parseOneOfSet", "pattern", "values", "i", "length", "Error", "prevValue", "charCodeAt", "nextValue", "value", "push", "String", "fromCharCode", "expandSingleElementArray", "array", "PatternParser", "ILLEGAL_CHARACTER_REGEXP", "OPERATOR", "parse", "context", "or", "instructions", "parsePattern", "branches", "op", "args", "concat", "pop", "match", "test", "getContext", "split", "operator", "before", "slice", "index", "rightPart", "startContext", "endContext", "oneOfSet", "RegExp", "match", "characters", "tree", "last", "characterString", "join", "indexOf", "length", "matchedChars", "partialMatch", "overflow", "slice", "Array", "isArray", "restCharacters", "i", "subtree", "result", "Error", "JSON", "stringify", "op", "_createForOfIteratorHelperLoose", "args", "branch", "char", "PatternMatcher", "pattern", "_classCallCheck", "matchTree", "PatternParser", "parse", "string", "allowOverflow", "split", "DUMMY_DIGIT", "LONGEST_NATIONAL_PHONE_NUMBER_LENGTH", "LONGEST_DUMMY_PHONE_NUMBER", "NATIONAL_PREFIX_SEPARATORS_PATTERN", "SUPPORT_LEGACY_FORMATTING_PATTERNS", "CREATE_CHARACTER_CLASS_PATTERN", "CREATE_STANDALONE_DIGIT_PATTERN", "NON_ALTERING_FORMAT_REG_EXP", "MIN_LEADING_DIGITS_LENGTH", "AsYouTypeFormatter", "repeat", "RegExp", "VALID_PUNCTUATION", "state", "metadata", "_classCallCheck", "resetFormat", "chosenFormat", "undefined", "template", "nationalNumberTemplate", "populatedNationalNumberTemplate", "populatedNationalNumberTemplatePosition", "numberingPlan", "isNANP", "callingCode", "matchingFormats", "formats", "nationalSignificantNumber", "narrowDownMatchingFormats", "format", "nextDigits", "canFormatCompleteNumber", "_createForOfIteratorHelperLoose", "formattedCompleteNumber", "formatCompleteNumber", "shouldTryNationalPrefixFormattingRule", "international", "nationalPrefix", "getSeparatorAfterNationalPrefix", "setNationalNumberTemplate", "replace", "DIGIT_PLACEHOLDER", "lastIndexOf", "formatNationalNumberWithNextDigits", "previouslyChosenFormat", "newlyChosenFormat", "chooseFormat", "formatNextNationalNumberDigits", "getNationalDigits", "leadingDigits", "leadingDigitsPatternIndex", "length", "filter", "formatSuits", "formatMatches", "indexOf", "usesNationalPrefix", "nationalPrefixIsOptionalWhenFormattingInNationalFormat", "nationalPrefixIsMandatoryWhenFormattingInNationalFormat", "leadingDigitsPatternsCount", "leadingDigitsPatterns", "Math", "min", "leadingDigitsPattern", "PatternMatcher", "match", "allowOverflow", "error", "console", "test", "internationalFormat", "_loop", "getFormatFormat", "createTemplateForFormat", "_", "slice", "pattern", "getTemplateForFormat", "nationalPrefixFormattingRule", "options", "IDDPrefix", "missingPlus", "spacing", "index", "i", "internationalPrefix", "getInternationalPrefixBeforeCountryCallingCode", "getDigitsWithoutInternationalPrefix", "cutAndStripNonPairedParens", "complexPrefixBeforeNationalSignificantNumber", "digits", "strictPattern", "nationalNumberDummyDigits", "numberFormat", "nationalPrefixIncludedInTemplate", "numberFormatWithNationalPrefix", "FIRST_GROUP_PATTERN", "parseDigits", "applyInternationalSeparatorStyle", "result", "populateTemplateWithDigits", "extractFormattedPhoneNumber", "text", "startsAt", "search", "VALID_FORMATTED_PHONE_NUMBER_PART", "slice", "hasPlus", "length", "replace", "AFTER_PHONE_NUMBER_DIGITS_END_PATTERN", "_extractFormattedDigitsAndPlus", "extractedNumber", "extractFormattedDigitsAndPlus", "_slicedToArray", "formattedDigits", "VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART_PATTERN", "test", "VALID_FORMATTED_PHONE_NUMBER_DIGITS_PART", "COMPLEX_NATIONAL_PREFIX", "AsYouTypeParser", "VALID_PUNCTUATION", "VALID_DIGITS", "RegExp", "PLUS_CHARS", "defaultCountry", "defaultCallingCode", "metadata", "onNationalSignificantNumberChange", "_classCallCheck", "state", "digits", "parseDigits", "justLeadingPlus", "startInternationalNumber", "inputDigits", "nextDigits", "hasReceivedThreeLeadingDigits", "appendDigits", "extractIddPrefix", "isWaitingForCountryCallingCode", "extractCountryCallingCode", "appendNationalSignificantNumberDigits", "international", "hasExtractedNationalSignificantNumber", "extractNationalSignificantNumber", "getNationalDigits", "stateUpdate", "update", "callingCode", "getDigitsWithoutInternationalPrefix", "countryCallingCode", "number", "setCallingCode", "nationalSignificantNumber", "numberingPlan", "hasSelectedNumberingPlan", "nationalPrefixForParsing", "_nationalPrefixForParsing", "couldPossiblyExtractAnotherNationalSignificantNumber", "undefined", "nationalDigits", "setState", "extractNationalNumberFromPossiblyIncompleteNumber", "nationalPrefix", "nationalNumber", "carrierCode", "onExtractedNationalNumber", "prevNationalSignificantNumber", "complexPrefixBeforeNationalSignificantNumber", "nationalSignificantNumberMatchesInput", "nationalSignificantNumberIndex", "lastIndexOf", "prefixBeforeNationalNumber", "extractAnotherNationalSignificantNumber", "extractCallingCodeAndNationalSignificantNumber", "fixMissingPlus", "IDDPrefix", "numberWithoutIDD", "stripIddPrefix", "country", "extractCountryCallingCodeFromInternationalNumberWithoutPlusSign", "newCallingCode", "missingPlus", "resetNationalSignificantNumber", "USE_NON_GEOGRAPHIC_COUNTRY_CODE", "AsYouType", "optionsOrDefaultCountry", "metadata", "_classCallCheck", "Metadata", "getCountryAndCallingCode", "_slicedToArray", "defaultCountry", "defaultCallingCode", "reset", "_typeof", "hasCountry", "undefined", "isNonGeographicCallingCode", "text", "parser", "input", "state", "digits", "justLeadingPlus", "formattedOutput", "determineTheCountryIfNeeded", "nationalSignificantNumber", "formatter", "narrowDownMatchingFormats", "formattedNationalNumber", "hasSelectedNumberingPlan", "format", "reExtractNationalSignificantNumber", "nationalDigits", "getNationalDigits", "getFullNumber", "getNonFormattedNumber", "AsYouTypeState", "onCountryChange", "country", "onCallingCodeChange", "callingCode", "selectNumberingPlan", "numberingPlan", "AsYouTypeFormatter", "AsYouTypeParser", "onNationalSignificantNumberChange", "international", "isInternational", "getCountryCallingCode", "getCallingCode", "_getCountry", "isCountryCallingCodeAmbiguous", "determineTheCountry", "prefix", "getInternationalPrefixBeforeCountryCallingCode", "spacing", "getDigitsWithoutInternationalPrefix", "complexPrefixBeforeNationalSignificantNumber", "nationalPrefix", "number", "nationalSignificantNumberMatchesInput", "getNonFormattedNationalNumberWithPrefix", "replace", "DIGIT_PLACEHOLDER", "countryCodes", "getCountryCodesForCallingCode", "length", "setCountry", "getCountryByCallingCode", "nationalNumber", "callingCode_", "countryCallingCode", "carrierCode", "ambiguousCountries", "exactCountry", "getCountryByNationalNumber", "countries", "phoneNumber", "PhoneNumber", "getNumber", "isPossible", "isValid", "getTemplate", "getNonFormattedTemplate", "init_parsePhoneNumberWithError", "init_parsePhoneNumber", "init_parsePhoneNumberWithError", "parsePhoneNumber", "init_parsePhoneNumber", "init_isValidPhoneNumber", "init_isPossiblePhoneNumber", "init_validatePhoneNumberLength", "init_findNumbers", "init_searchNumbers", "init_findPhoneNumbersInText", "init_searchPhoneNumbersInText", "PhoneNumberMatcher", "init_PhoneNumberMatcher", "AsYouType", "country", "init_AsYouType", "init_getCountries", "init_getCountryCallingCode", "Metadata", "init_getExampleNumber", "init_formatIncompletePhoneNumber", "init_parse", "init_parse", "init_format", "init_getNumberType", "init_getNumberType", "init_isPossibleNumber", "init_getNumberType", "init_isValidNumber", "init_isValidNumberForRegion", "init_isValidNumberForRegion", "EXTN_PATTERNS_FOR_PARSING", "WHITESPACE_IN_THE_BEGINNING_PATTERN", "PUNCTUATION_IN_THE_END_PATTERN", "PhoneNumberSearch", "createExtensionPattern", "RegExp", "WHITESPACE", "VALID_PUNCTUATION", "text", "options", "metadata", "_classCallCheck", "state", "regexp", "VALID_PHONE_NUMBER_WITH_EXTENSION", "_createClass", "matches", "exec", "number", "startsAt", "index", "replace", "length", "parsePreCandidate", "result", "parseCandidate", "find", "isValidPreCandidate", "isValidCandidate", "extended", "parse", "phone", "endsAt", "last_match", "hasNext", "Error", "init_findPhoneNumbers", "PhoneNumberSearch", "init_parsePhoneNumberWithError", "init_parsePhoneNumber", "init_isValidPhoneNumber", "init_isPossiblePhoneNumber", "init_validatePhoneNumberLength", "init_findNumbers", "init_searchNumbers", "init_findPhoneNumbersInText", "init_searchPhoneNumbersInText", "init_PhoneNumberMatcher", "init_AsYouType", "init_getCountries", "init_getCountryCallingCode", "init_getExampleNumber", "init_formatIncompletePhoneNumber", "init_parse", "init_format", "init_getNumberType", "init_isPossibleNumber", "init_isValidNumber", "init_isValidNumberForRegion", "init_findPhoneNumbers", "parsePhoneNumber", "result", "matchesValidator", "import_matches", "isHash", "isHashValidator", "isISSN", "isISSNValidator", "isBoolean", "isBooleanValidator", "isNumericValidator", "isBase32", "isBase32Validator", "isBIC", "isBICValidator", "isBtcAddress", "isBtcAddressValidator", "isDataURI", "isDataURIValidator", "isEAN", "length", "isEANValidator", "isEthereumAddress", "isEthereumAddressValidator", "isHSL", "isHSLValidator", "isIBAN", "isIBANValidator", "isIdentityCard", "checkAddressCode", "checkBirthDayCode", "getParityBit", "checkParityBit", "check15IdCardNo", "check18IdCardNo", "checkIdCardNo", "validator", "isIdentityCardValidator", "isISRC", "isISRCValidator", "isLocale", "isLocaleValidator", "isMagnetURI", "isMagnetURIValidator", "isMimeType", "isMimeTypeValidator", "isOctal", "isOctalValidator", "isPassportNumber", "isPassportNumberValidator", "isPostalCode", "isPostalCodeValidator", "isRFC3339", "isRFC3339Validator", "isRgbColor", "isRgbColorValidator", "isSemVer", "isSemVerValidator", "equals", "require_isDate", "isDate", "_slicedToArray", "_arrayWithHoles", "_iterableToArrayLimit", "_unsupportedIterableToArray", "_nonIterableRest", "F", "_arrayLikeToArray", "format", "require_isEmpty", "isEmpty", "isIn", "_typeof", "obj", "_typeof", "obj", "_getRequireWildcardCache", "_unsupportedIterableToArray", "_arrayLikeToArray", "length", "result", "isBase58", "validator", "isStrongPassword", "result", "_typeof", "obj", "_getRequireWildcardCache", "PT", "_typeof", "obj", "_getRequireWildcardCache", "validator", "validator", "isBase58Validator", "isTaxIDValidator", "isISO4217Validator", "__read", "isObject", "min", "max", "isObject", "isObject", "validator", "validator", "require_decorators", "require_utils", "require_common"]
}
