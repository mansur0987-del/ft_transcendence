export declare const isClient: boolean;
export declare const isString: (varToCheck: any) => boolean;
export declare const isObj: (varToCheck: any) => boolean;
export declare const isNull: (varToCheck: any) => boolean;
export declare const isFunction: (varToCheck: any) => boolean;
export declare const isUndefined: (varToCheck: any) => boolean;
export declare const isNullOrUndefined: (varToCheck: any) => boolean;
export declare const patchHistoryMethodsOnce: () => void;
export declare const normalizeEntriesData: (data: [any, any][]) => {
    [key: string]: any;
};
export declare type SerializerFunction = (value: any) => string;
export declare type DeserializerFunction = (value: string) => any;
export declare const createSerializer: (serializer?: SerializerFunction | undefined) => {
    (value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string;
    (value: any, replacer?: (string | number)[] | null | undefined, space?: string | number | undefined): string;
};
export declare const createDeserializer: (deserializer?: DeserializerFunction | undefined) => (text: string, reviver?: ((this: any, key: string, value: any) => any) | undefined) => any;
export declare const trySerialize: (val: any, serializer: SerializerFunction, shouldSerialize?: boolean | undefined) => any;
export declare const tryDeserialize: (val: any, deserializer: DeserializerFunction, shouldDeserialize?: boolean | undefined) => any;
