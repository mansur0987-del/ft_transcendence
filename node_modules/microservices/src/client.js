'use strict';

const _ = require('lodash');
const axios = require('axios');

function connect(host, port) {
    function build(paths) {
        const schema = {};

        // For each given path in the response set the equivalent path in the schema
        // to be a function returning a promise that resolves the result of the function
        // on the server.
        _.each(paths, entry => {
            _.set(schema, entry.path, (...passed) =>
                new Promise((resolve, reject) => {
                    const structured = _.zip(entry.args, passed).map(_.spread((arg, pass) =>
                        ({ [arg.name]: pass })
                    ));

                    const args = _.merge.apply(null, structured);

                    axios.post(`http://${host}:${port}/${entry.path.replace(/\./g, '/')}`, args)
                        .then(res => {
                            resolve(res.data.result.data);
                        })
                        .catch(res => {
                            reject(res.data.error);
                        });
                })
            );
        });

        return schema;
    }

    return new Promise((resolve, reject) => {
        axios.get(`http://${host}:${port}/connect`)
            .then(res => {
                resolve(build(JSON.parse(res.data).schema));
            })
            .catch(res => {
                reject(res);
            });
    });
}

module.exports.connect = connect;
