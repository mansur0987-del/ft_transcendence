import { isVNode, Fragment, renderSlot } from 'vue';
export const createRoutesFromChildren = (normalizedChildren) => {
    const routes = [];
    const children = Array.isArray(normalizedChildren)
        ? normalizedChildren
        : normalizedChildren instanceof Object
            ? [renderSlot(normalizedChildren, 'default')]
            : [];
    for (const element of children) {
        if (!isVNode(element)) {
            continue;
        }
        if (element.type === 'template' || element.type === Fragment) {
            routes.push(...createRoutesFromChildren(element.children));
            continue;
        }
        const { path, caseSensitive } = element.props || {};
        const route = {
            path: path || '/',
            caseSensitive: caseSensitive === true,
            element,
        };
        if (element.children) {
            const childRoutes = createRoutesFromChildren(element.children);
            if (childRoutes.length) {
                route.children = childRoutes;
            }
        }
        routes.push(route);
    }
    return routes;
};
