import { PropType } from 'vue';
import { Location, Action } from 'history';
export declare const Router: (new () => import("vue").ComponentPublicInstance<{
    location: Location<object | null>;
    navigator: Pick<import("history").History<object | null>, "replace" | "push" | "block" | "createHref" | "go">;
} & {
    static?: boolean | undefined;
    action?: Action | undefined;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, Record<string, any>, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, import("vue").ComponentOptionsBase<{
    location: Location<object | null>;
    navigator: Pick<import("history").History<object | null>, "replace" | "push" | "block" | "createHref" | "go">;
} & {
    static?: boolean | undefined;
    action?: Action | undefined;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string>>) & import("vue").ComponentOptionsBase<Readonly<{
    static: boolean;
    location: Location<object | null>;
    action: Action;
    navigator: Pick<import("history").History<object | null>, "replace" | "push" | "block" | "createHref" | "go">;
} & {}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string> & {
    props: {
        location: {
            required: true;
            type: PropType<Location<object | null>>;
        };
        navigator: {
            required: true;
            type: PropType<Pick<import("history").History<object | null>, "replace" | "push" | "block" | "createHref" | "go">>;
        };
        action: {
            required: false;
            type: PropType<Action>;
            default: Action;
        };
        static: {
            required: false;
            type: BooleanConstructor;
            default: boolean;
        };
    };
} & ThisType<import("vue").ComponentPublicInstance<Readonly<{
    static: boolean;
    location: Location<object | null>;
    action: Action;
    navigator: Pick<import("history").History<object | null>, "replace" | "push" | "block" | "createHref" | "go">;
} & {}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, Record<string, any>, Readonly<{
    static: boolean;
    location: Location<object | null>;
    action: Action;
    navigator: Pick<import("history").History<object | null>, "replace" | "push" | "block" | "createHref" | "go">;
} & {}>, import("vue").ComponentOptionsBase<Readonly<{
    static: boolean;
    location: Location<object | null>;
    action: Action;
    navigator: Pick<import("history").History<object | null>, "replace" | "push" | "block" | "createHref" | "go">;
} & {}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string>>>;
