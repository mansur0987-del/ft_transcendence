import { PropType } from 'vue';
import type { VNode } from 'vue';
export declare const Route: (new () => import("vue").ComponentPublicInstance<{} & {
    path?: string | undefined;
    element?: VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | undefined;
    caseSensitive?: boolean | undefined;
}, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, Record<string, any>, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, import("vue").ComponentOptionsBase<{} & {
    path?: string | undefined;
    element?: VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | undefined;
    caseSensitive?: boolean | undefined;
}, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string>>) & import("vue").ComponentOptionsBase<Readonly<{
    path: string;
    element: VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
    caseSensitive: boolean;
} & {}>, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string> & {
    props: {
        path: {
            default: string;
            required: false;
            type: StringConstructor;
        };
        caseSensitive: {
            default: boolean;
            required: false;
            type: BooleanConstructor;
        };
        element: {
            default: () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
                [key: string]: any;
            }>;
            required: false;
            type: PropType<VNode<import("vue").RendererNode, import("vue").RendererElement, {
                [key: string]: any;
            }>>;
        };
    };
} & ThisType<import("vue").ComponentPublicInstance<Readonly<{
    path: string;
    element: VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
    caseSensitive: boolean;
} & {}>, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, Record<string, any>, Readonly<{
    path: string;
    element: VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
    caseSensitive: boolean;
} & {}>, import("vue").ComponentOptionsBase<Readonly<{
    path: string;
    element: VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }>;
    caseSensitive: boolean;
} & {}>, () => VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string>>>;
