import { PropType } from 'vue';
import type { To } from 'history';
export declare const linkProps: {
    replace: {
        default: boolean;
        required: boolean;
        type: BooleanConstructor;
    };
    tag: {
        default: string;
        required: boolean;
        type: StringConstructor;
    };
    to: {
        default: string;
        required: boolean;
        type: PropType<To>;
    };
    state: {
        default: undefined;
        required: boolean;
        type: PropType<object | null>;
    };
};
export declare const Link: (new () => import("vue").ComponentPublicInstance<{} & {
    replace?: boolean | undefined;
    tag?: string | undefined;
    state?: object | null | undefined;
    to?: string | import("history").PartialPath | undefined;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, {
    click: null;
}, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, import("vue").ComponentOptionsBase<{} & {
    replace?: boolean | undefined;
    tag?: string | undefined;
    state?: object | null | undefined;
    to?: string | import("history").PartialPath | undefined;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    click: null;
}, string>>) & import("vue").ComponentOptionsBase<Readonly<{
    replace: boolean;
    tag: string;
    state: object | null;
    to: To;
} & {}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    click: null;
}, string> & {
    props: {
        replace: {
            default: boolean;
            required: boolean;
            type: BooleanConstructor;
        };
        tag: {
            default: string;
            required: boolean;
            type: StringConstructor;
        };
        to: {
            default: string;
            required: boolean;
            type: PropType<To>;
        };
        state: {
            default: undefined;
            required: boolean;
            type: PropType<object | null>;
        };
    };
} & ThisType<import("vue").ComponentPublicInstance<Readonly<{
    replace: boolean;
    tag: string;
    state: object | null;
    to: To;
} & {}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, {
    click: null;
}, Readonly<{
    replace: boolean;
    tag: string;
    state: object | null;
    to: To;
} & {}>, import("vue").ComponentOptionsBase<Readonly<{
    replace: boolean;
    tag: string;
    state: object | null;
    to: To;
} & {}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    click: null;
}, string>>>;
